var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.673,1,1.105]],["body/components/AppComponent.html",[0,0.619,1,1.187,2,0.964,3,0.228,4,0.116,5,0.714,6,0.714,7,0.714,8,0.714,9,0.116,10,1.06,11,0.872,12,1.532,13,0.578,14,2.222,15,1.667,16,0.872,17,1.191,18,2.755,19,1.191,20,2.142,21,0.341,22,0.651,23,2.755,24,3.572,25,2.755,26,2.755,27,2.755,28,2.274,29,1.434,30,2.755,31,2.755,32,2.222,33,2.274,34,3.215,35,2.755,36,2.755,37,3.676,38,0.433,39,2.142,40,3.793,41,2.284,42,3.215,43,1.787,44,1.522,45,3.859,46,0.289,47,0.913,48,1.447,49,1.721,50,1.447,51,1.957,52,2.284,53,2.274,54,1.787,55,3.379,56,2.653,57,1.787,58,0.868,59,1.285,60,0.65,61,0.039,62,0.775,63,0.651,64,0.65,65,1.338,66,1.285,67,1.285,68,1.285,69,0.78,70,2.142,71,1.768,72,1.285,73,2.557,74,1.285,75,1.608,76,1.285,77,1.285,78,1.872,79,1.54,80,1.54,81,2.653,82,1.285,83,1.285,84,1.285,85,1.285,86,1.285,87,1.285,88,2.755,89,1.285,90,1.285,91,1.285,92,1.285,93,2.755,94,2.142,95,2.142,96,1.285,97,3.215,98,1.285,99,1.285,100,1.522,101,2.142,102,1.285,103,1.285,104,1.285,105,0.758,106,1.285,107,0.206,108,0.913,109,0.802,110,0.802,111,0.964,112,0.714,113,1.06,114,0.802,115,1.06,116,1.191,117,1.285,118,0.641,119,0.913,120,0.913,121,0.137,122,0.077,123,1.285,124,1.285,125,1.285,126,1.285,127,1.06,128,1.285,129,1.285,130,1.285,131,1.285,132,0.474,133,2.755,134,0.923,135,1.06,136,1.285,137,3.572,138,1.285,139,2.755,140,3.859,141,1.285,142,1.285,143,1.285,144,1.285,145,1.285,146,1.285,147,1.06,148,1.285,149,1.285,150,1.285,151,1.285,152,2.755,153,0.59,154,2.142,155,1.285,156,0.714,157,1.285,158,1.285,159,1.285,160,2.274,161,0.913,162,1.285,163,2.142,164,2.142,165,1.285,166,1.285,167,1.285,168,1.285,169,1.285,170,2.284,171,1.285,172,1.285,173,1.285,174,1.285,175,0.791,176,2.142,177,1.06,178,1.285,179,1.768,180,1.522,181,1.522,182,2.142,183,1.285,184,2.142,185,2.142,186,2.142,187,2.142,188,2.142,189,2.142,190,2.142,191,2.284,192,2.142,193,2.142,194,2.142,195,2.142,196,2.142,197,2.142,198,2.142,199,2.142,200,2.142,201,2.142,202,2.142,203,2.142,204,1.768,205,1.768,206,2.142,207,2.142,208,2.142,209,2.142,210,1.768,211,3.215,212,2.142,213,2.142,214,2.142,215,2.142,216,2.142,217,1.768,218,3.215,219,1.768,220,3.572,221,2.142,222,2.142,223,1.191,224,2.142,225,1.069,226,1.285,227,2.142,228,1.768,229,2.142,230,1.375,231,2.142,232,2.142,233,2.142,234,1.768,235,1.986,236,2.142,237,3.215,238,2.142,239,1.768,240,2.142,241,2.142,242,2.142,243,3.859,244,3.215,245,2.142,246,1.768,247,2.142,248,2.142,249,2.142,250,2.142,251,3.215,252,1.768,253,1.768,254,1.522,255,1.768,256,2.142,257,2.142,258,4.453,259,2.142,260,2.142,261,2.142,262,2.142,263,2.142,264,1.768,265,2.142,266,1.285,267,2.142,268,3.793,269,4.193,270,2.215,271,3.215,272,1.285,273,2.142,274,2.276,275,1.584,276,0.913,277,2.284,278,1.768,279,0.714,280,3.676,281,1.285,282,2.142,283,1.285,284,1.285,285,2.142,286,1.285,287,1.285,288,4.093,289,2.142,290,2.653,291,2.653,292,1.285,293,2.755,294,2.284,295,1.768,296,2.142,297,1.285,298,1.285,299,1.285,300,1.285,301,1.285,302,1.06,303,1.285,304,1.285,305,1.285,306,3.215,307,1.285,308,1.285,309,2.142,310,1.285,311,3.215,312,1.285,313,4.92,314,1.285,315,1.285,316,2.142,317,3.572,318,1.285,319,1.285,320,4.718,321,1.285,322,1.06,323,1.285,324,2.755,325,2.142,326,2.949,327,2.755,328,1.285,329,2.274,330,1.285,331,1.522,332,0.802,333,1.285,334,1.285,335,1.285,336,1.285,337,1.285,338,1.285,339,1.285,340,1.285,341,1.285,342,1.285,343,2.142,344,1.285,345,2.142,346,2.755,347,1.285,348,3.572,349,1.285,350,1.06,351,2.142,352,2.274,353,2.142,354,3.215,355,2.142,356,1.285,357,3.572,358,0.913,359,1.285,360,1.285,361,2.142,362,1.285,363,1.285,364,2.142,365,1.285,366,2.142,367,2.142,368,2.284,369,2.142,370,1.285,371,2.142,372,1.285,373,1.285,374,1.06,375,2.142,376,1.285,377,1.285,378,2.142,379,2.142,380,3.572,381,2.142,382,1.285,383,1.285,384,1.285,385,1.285,386,1.285,387,1.768,388,1.285,389,1.285,390,1.285,391,1.285,392,1.285,393,1.285,394,1.285,395,1.06,396,1.06,397,0.913,398,0.913,399,1.285,400,0.578,401,1.191,402,1.069,403,0.474,404,0.714,405,2.142,406,2.142,407,1.285,408,0.714,409,0.474,410,0.714,411,0.431,412,0.714,413,0.474,414,0.714,415,0.474,416,0.714,417,0.474,418,0.714,419,0.714,420,0.641,421,0.431,422,0.641,423,0.714,424,0.008,425,0.013,426,0.008]],["title/modules/AppModule.html",[427,1.868,428,1.868]],["body/modules/AppModule.html",[1,2.141,2,1.245,3,0.295,4,0.25,9,0.25,15,1.127,61,0.039,105,0.98,107,0.444,111,2.176,112,1.539,119,1.966,120,1.966,121,0.295,122,0.166,153,1.23,223,1.539,225,1.381,274,1.539,331,1.966,368,1.966,400,1.245,409,1.947,411,1.767,413,1.947,415,1.947,417,1.947,421,1.767,424,0.017,425,0.024,426,0.017,427,1.728,428,3.833,429,2.152,430,1.728,431,3.172,432,3.172,433,2.789,434,1.966,435,2.284,436,2.284,437,2.284,438,2.284,439,2.284,440,2.631,441,2.83,442,2.932,443,2.932,444,3.195,445,2.284,446,1.966,447,3.195,448,2.767,449,3.195,450,1.728,451,3.195,452,2.767,453,2.767,454,2.767,455,4.464,456,1.728,457,2.767,458,2.767,459,1.381,460,2.767,461,2.767,462,1.728,463,1.966,464,1.966,465,2.767,466,2.767,467,2.767,468,2.767,469,1.728,470,2.767,471,2.284,472,2.767,473,3.172,474,3.195,475,1.728,476,2.284,477,2.767,478,2.284,479,2.284,480,2.284,481,2.284,482,1.966,483,2.284,484,2.767,485,2.767,486,2.767,487,2.284,488,2.284,489,3.195,490,1.966,491,2.767,492,2.767,493,1.966,494,2.767,495,2.767,496,2.767,497,1.728,498,2.767,499,2.152,500,2.767,501,2.767,502,2.767,503,2.284,504,2.767,505,2.767,506,2.767,507,2.767,508,2.284,509,2.767,510,2.767,511,2.767,512,2.767,513,2.767,514,2.284,515,2.767,516,2.767,517,2.767,518,2.767,519,3.871,520,3.871,521,3.871]],["title/classes/AppPage.html",[122,0.179,522,2.125]],["body/classes/AppPage.html",[3,0.462,4,0.391,9,0.391,16,1.765,21,0.536,38,1.047,58,0.832,61,0.038,69,1.047,105,0.696,121,0.462,122,0.259,358,3.079,402,2.162,424,0.027,425,0.032,426,0.027,450,2.707,522,3.681,523,2.707,524,3.577,525,5.956,526,5.741,527,5.741,528,4.333,529,5.741,530,4.333,531,3.577,532,1.736,533,4.333,534,4.333,535,4.333]],["title/modules/AppRoutingModule.html",[427,1.868,441,1.663]],["body/modules/AppRoutingModule.html",[0,1.143,3,0.447,4,0.379,9,0.379,61,0.039,105,0.912,107,0.674,114,2.623,121,0.447,122,0.251,409,2.019,411,1.832,424,0.026,425,0.031,426,0.026,429,2.335,431,2.984,434,2.984,441,2.827,447,3.467,451,4.196,480,3.467,481,3.467,482,2.984,483,3.467,499,2.335,536,4.2,537,4.2,538,3.415,539,5.084,540,5.084,541,4.2,542,4.2,543,4.2]],["title/injectables/AuthService.html",[48,1.346,544,0.746]],["body/injectables/AuthService.html",[0,0.51,3,0.241,4,0.205,9,0.205,15,0.923,16,0.923,21,0.28,22,1.02,28,2.768,29,1.8,32,2.2,38,0.678,40,2.768,41,2.835,44,2.382,46,0.51,48,1.509,49,2.095,50,1.985,51,2.835,52,3.133,55,4.209,58,0.906,60,0.891,61,0.039,62,0.797,63,0.63,64,0.891,69,0.891,78,2.007,79,1.478,80,1.651,81,2.752,105,0.873,107,0.364,108,1.611,110,1.416,111,1.02,112,1.261,114,1.416,118,1.131,121,0.241,122,0.136,132,0.837,134,1.337,135,1.871,153,1.1,175,1.474,177,3.885,180,1.611,181,1.611,217,1.871,223,1.261,239,3.294,254,1.611,270,1.796,350,1.871,424,0.014,425,0.021,426,0.014,462,1.416,463,2.382,464,1.611,499,1.261,532,1.89,544,0.836,545,1.131,546,1.871,547,3.991,548,3.991,549,3.991,550,2.714,551,3.991,552,3.991,553,3.991,554,3.991,555,3.294,556,1.871,557,3.991,558,4.41,559,3.353,560,3.353,561,2.267,562,2.267,563,2.267,564,2.267,565,1.1,566,3.991,567,2.267,568,2.095,569,2.267,570,2.267,571,3.64,572,2.267,573,2.267,574,2.267,575,2.267,576,2.267,577,2.267,578,2.267,579,2.267,580,2.267,581,2.267,582,2.267,583,2.267,584,1.871,585,2.768,586,2.267,587,2.267,588,3.353,589,1.611,590,1.131,591,2.267,592,3.991,593,3.991,594,3.991,595,2.267,596,3.991,597,2.267,598,2.267,599,2.267,600,2.267,601,3.991,602,2.267,603,2.267,604,2.267,605,2.267,606,2.267,607,3.353,608,2.267,609,2.267,610,3.353,611,2.267,612,2.267,613,2.267,614,2.267,615,2.267,616,2.267,617,2.267,618,2.267,619,2.267,620,2.267,621,1.871,622,2.267,623,2.267,624,2.267,625,2.267,626,2.267,627,0.923,628,2.267,629,2.267,630,2.267,631,2.267,632,2.267,633,2.267,634,2.267,635,2.267,636,2.267,637,4.927,638,2.267,639,1.871,640,3.353,641,2.267,642,2.267,643,2.768,644,2.382,645,2.267,646,2.267,647,2.267,648,2.267,649,2.267,650,1.416,651,2.267,652,3.353,653,2.267,654,3.353,655,2.267,656,3.353,657,2.267,658,2.267,659,2.267,660,2.267,661,2.267,662,2.267,663,2.267,664,2.267]],["title/classes/Constants.html",[122,0.179,665,1.663]],["body/classes/Constants.html",[3,0.388,4,0.329,9,0.329,21,0.451,22,1.415,58,0.897,61,0.039,63,0.69,79,1.871,80,1.871,121,0.388,122,0.218,127,5.057,170,3.839,228,3.843,275,1.719,387,3.843,424,0.022,425,0.029,426,0.022,523,2.277,550,2.786,565,1.619,650,2.277,665,2.589,666,3.009,667,5.129,668,5.129,669,5.129,670,5.129,671,4.234,672,4.655,673,4.655,674,3.646,675,5.404,676,3.646,677,3.646,678,4.655,679,3.646,680,4.655,681,5.404,682,3.843,683,4.655,684,4.655,685,4.655,686,3.308,687,4.655,688,4.655,689,3.646]],["title/components/DashboardComponent.html",[0,0.673,411,1.002]],["body/components/DashboardComponent.html",[0,0.685,1,0.548,2,1.086,3,0.257,4,0.134,5,0.826,6,0.826,7,0.826,8,0.826,9,0.134,11,0.983,12,1.695,13,0.668,14,2.344,15,1.776,17,1.342,19,1.342,21,0.477,22,0.734,29,0.927,33,2.898,38,0.488,43,1.952,46,0.334,48,1.58,49,1.507,50,1.372,58,0.912,60,0.881,61,0.039,62,0.872,63,0.711,64,0.881,65,1.904,69,0.949,75,2.045,78,2.394,79,1.656,80,1.656,81,2.659,105,0.7,107,0.238,109,0.927,110,0.927,111,1.086,121,0.158,122,0.089,132,0.548,153,1.252,156,2.147,160,2.898,161,3.694,175,1.945,191,2.744,210,1.226,225,1.752,230,0.741,234,3.985,235,0.826,268,1.226,269,1.992,270,1.58,274,0.826,275,0.891,277,1.055,280,1.992,290,1.226,291,1.226,294,2.166,302,1.226,326,1.226,329,1.226,374,1.226,395,1.226,396,1.992,397,1.055,398,1.055,400,0.668,401,1.342,402,1.752,403,0.548,404,0.826,408,0.826,409,0.548,410,0.826,411,1.177,412,0.826,413,0.548,414,0.826,415,0.548,416,0.826,417,0.548,418,0.826,419,0.826,420,0.741,421,0.498,422,0.741,423,0.826,424,0.009,425,0.015,426,0.009,433,1.507,440,2.065,469,2.193,488,1.226,556,1.226,565,0.967,627,0.605,665,0.826,690,1.226,691,4.138,692,3.048,693,2.413,694,3.048,695,4.36,696,3.048,697,3.048,698,2.516,699,3.048,700,3.048,701,3.048,702,3.048,703,3.048,704,3.048,705,3.048,706,3.048,707,3.048,708,3.048,709,4.94,710,3.048,711,3.511,712,3.511,713,2.413,714,2.413,715,2.413,716,4.138,717,2.898,718,2.898,719,2.413,720,2.413,721,1.485,722,2.516,723,1.485,724,1.485,725,1.485,726,1.485,727,2.413,728,5.038,729,3.862,730,1.485,731,2.898,732,2.413,733,1.485,734,1.485,735,2.413,736,2.425,737,1.485,738,2.413,739,1.485,740,1.485,741,2.413,742,1.485,743,1.485,744,1.485,745,1.485,746,1.485,747,1.485,748,1.485,749,1.485,750,1.485,751,1.485,752,1.485,753,1.485,754,1.485,755,1.226,756,1.485,757,1.485,758,1.485,759,1.485,760,1.485,761,1.485,762,1.485,763,3.048,764,2.413,765,1.485,766,2.413,767,2.413,768,2.413,769,2.413,770,2.413,771,1.485,772,1.485,773,1.485,774,1.485,775,2.413,776,2.413,777,1.715,778,2.413,779,2.413,780,2.413,781,2.413,782,2.413,783,2.413,784,1.58,785,2.413,786,2.413,787,2.413,788,3.511,789,1.485,790,1.485,791,1.485,792,1.485,793,1.485,794,3.048,795,1.485,796,1.485,797,2.413,798,2.413,799,1.485,800,2.413,801,4.138,802,3.511,803,2.413,804,1.485,805,1.485,806,1.485,807,1.485,808,1.485,809,1.485,810,2.413,811,1.485,812,1.485,813,2.413,814,1.485,815,1.485,816,1.485,817,1.485,818,1.485,819,1.485,820,1.485,821,1.485,822,1.992,823,2.413,824,1.485,825,1.485,826,2.413,827,1.485,828,1.485,829,1.485,830,1.485,831,1.485,832,1.485,833,1.485,834,1.485,835,2.413,836,1.485,837,2.413,838,1.485,839,1.485,840,1.485,841,2.413,842,1.715,843,3.511,844,2.898,845,3.511,846,3.511,847,3.511,848,3.511,849,3.511,850,3.511,851,3.511,852,3.511,853,3.511,854,1.485,855,1.485,856,1.485,857,1.055,858,1.485,859,1.485,860,1.485,861,1.485,862,1.485,863,1.485,864,1.485,865,1.226,866,1.485,867,1.485,868,2.413]],["title/injectables/DataService.html",[54,1.663,544,0.746]],["body/injectables/DataService.html",[3,0.417,4,0.353,9,0.353,16,1.594,21,0.484,38,0.984,46,0.88,51,3.459,52,3.939,54,2.707,58,0.782,60,0.984,61,0.039,62,0.88,63,0.484,64,0.984,69,0.791,105,0.782,107,0.628,111,1.761,112,2.176,121,0.417,122,0.234,132,1.445,175,1.445,275,1.445,424,0.024,425,0.03,426,0.024,532,1.911,544,1.213,545,1.953,550,2.767,565,1.078,590,1.953,644,3.459,869,3.231,870,4.868,871,3.914,872,3.914,873,3.914,874,3.914,875,4.868,876,3.914,877,3.914,878,3.914,879,3.914,880,3.914,881,3.914,882,3.914,883,2.445,884,3.914,885,3.914,886,3.914,887,3.914]],["title/components/DocumentUploadComponent.html",[0,0.673,413,1.105]],["body/components/DocumentUploadComponent.html",[0,0.667,1,0.528,2,1.052,3,0.152,4,0.129,5,0.794,6,0.794,7,0.794,8,0.794,9,0.268,11,0.952,12,1.651,13,0.643,14,2.312,15,1.747,17,1.3,19,1.3,21,0.177,22,0.711,29,1.043,38,0.472,43,1.908,44,1.661,46,0.321,49,1.854,50,1.544,53,2.45,54,1.908,58,0.88,60,0.821,61,0.039,62,0.837,63,0.707,64,0.821,69,0.936,73,2.364,75,1.931,78,0.952,79,1.15,80,1.362,81,1.481,105,0.689,107,0.229,110,0.892,113,1.179,121,0.152,122,0.086,132,0.528,134,0.479,147,1.93,153,1.043,156,2.26,175,2.051,204,1.93,205,1.93,225,0.713,230,0.713,235,3.124,252,1.93,270,1.703,275,2.023,276,1.015,277,1.015,279,1.651,294,1.015,332,3.395,352,1.93,400,0.643,401,1.3,402,1.167,403,0.528,404,0.794,408,0.794,409,0.528,410,0.794,411,0.479,412,0.794,413,1.267,414,0.794,415,0.528,416,0.794,417,0.528,418,0.794,419,0.794,420,0.713,421,0.479,422,0.713,423,0.794,424,0.009,425,0.014,426,0.009,459,0.713,489,3.541,490,1.015,497,3.446,532,0.784,565,0.644,568,0.892,644,1.015,650,0.892,665,0.794,682,2.832,686,3.829,698,1.93,736,1.908,755,1.179,777,2.109,784,1.052,842,3.829,844,1.93,857,1.661,883,3.366,888,3.92,889,1.015,890,2.968,891,2.338,892,2.968,893,2.968,894,2.968,895,2.968,896,3.784,897,2.968,898,2.968,899,3.431,900,2.338,901,2.338,902,2.338,903,3.431,904,2.338,905,2.338,906,2.968,907,1.46,908,1.854,909,2.109,910,3.784,911,1.015,912,2.437,913,1.712,914,1.428,915,1.661,916,2.143,917,1.428,918,1.428,919,1.428,920,1.428,921,1.428,922,2.338,923,1.428,924,2.338,925,1.428,926,1.428,927,1.428,928,1.428,929,1.428,930,2.338,931,1.428,932,1.179,933,1.428,934,1.661,935,1.93,936,2.338,937,1.428,938,1.428,939,1.428,940,1.428,941,1.428,942,1.428,943,1.428,944,1.428,945,1.428,946,1.015,947,1.015,948,1.015,949,1.015,950,1.015,951,1.179,952,1.428,953,1.428,954,1.428,955,1.428,956,1.428,957,1.428,958,1.428,959,3.541,960,1.428,961,1.428,962,1.428,963,1.428,964,4.882,965,2.338,966,1.428,967,1.428,968,1.428,969,1.428,970,2.338,971,2.338,972,1.428,973,1.428,974,1.428,975,1.428,976,1.428,977,3.431,978,1.428,979,1.428,980,3.752,981,1.428,982,2.338,983,1.428,984,1.428,985,1.428,986,1.428,987,1.428,988,1.428,989,1.428,990,1.428,991,1.428,992,1.428,993,1.428,994,1.428,995,1.428,996,1.428,997,1.428,998,4.063,999,4.289,1000,1.428,1001,1.428,1002,4.289,1003,1.428,1004,1.428,1005,1.428,1006,1.428,1007,1.428,1008,1.428,1009,1.428,1010,1.428,1011,1.428,1012,1.428,1013,1.428,1014,1.428,1015,1.428,1016,1.428,1017,1.428,1018,1.428,1019,1.428,1020,1.428,1021,1.428,1022,1.428,1023,1.428,1024,1.428,1025,1.428,1026,1.428,1027,1.428,1028,1.428,1029,1.428,1030,1.428,1031,1.428,1032,1.428,1033,1.428,1034,1.428,1035,1.428,1036,1.428,1037,1.428,1038,1.428,1039,1.428,1040,1.428,1041,1.428,1042,4.448,1043,4.448,1044,5.389,1045,4.448,1046,5.389,1047,1.428,1048,1.428,1049,1.428,1050,1.428,1051,1.428,1052,1.428,1053,1.428,1054,1.428,1055,1.428,1056,3.431,1057,1.93,1058,2.338,1059,2.338,1060,1.428,1061,3.892,1062,1.428,1063,1.428,1064,1.428,1065,1.428,1066,1.428,1067,1.428,1068,1.428,1069,3.431,1070,2.338,1071,2.338,1072,3.354,1073,2.832,1074,3.431,1075,3.354,1076,1.93,1077,1.428,1078,2.338,1079,2.338,1080,1.428,1081,1.428]],["title/components/DropdownComponent.html",[0,0.673,415,1.105]],["body/components/DropdownComponent.html",[0,1.016,1,1.046,2,1.77,3,0.302,4,0.256,5,1.575,6,1.575,7,1.575,8,1.575,9,0.256,11,1.602,12,2.513,13,1.275,14,2.815,15,2.219,17,2.187,19,2.187,21,0.35,29,0.861,38,0.795,43,2.716,46,0.637,58,0.948,60,0.572,61,0.039,62,1.004,63,0.725,64,0.572,69,0.572,73,2.823,75,1.77,78,2.163,105,0.726,107,0.455,121,0.302,122,0.17,132,1.046,134,0.949,153,0.78,230,1.413,235,1.575,270,2.198,279,3.237,400,1.275,401,2.187,402,1.963,403,1.046,404,1.575,408,1.575,409,1.046,410,1.575,411,0.949,412,1.575,413,1.046,414,1.575,415,1.804,416,1.575,417,1.046,418,1.575,419,1.575,420,1.413,421,0.949,422,1.413,423,1.575,424,0.017,425,0.024,426,0.017,459,1.413,565,1.346,842,2.012,883,2.457,907,2.457,908,2.823,909,3.211,911,2.012,912,3.47,913,2.437,915,2.795,916,2.823,946,2.795,947,3.211,948,2.012,950,2.012,980,2.012,1061,3.646,1072,3.247,1082,2.338,1083,3.934,1084,4.52,1085,3.934,1086,4.52,1087,3.731,1088,3.731,1089,4.497,1090,3.731,1091,3.731,1092,4.52,1093,3.247,1094,3.731,1095,3.934,1096,2.832,1097,2.832,1098,2.832,1099,2.832,1100,2.832,1101,2.832,1102,2.832,1103,2.832,1104,2.832,1105,2.832,1106,2.832,1107,2.832,1108,4.52,1109,4.52,1110,2.832,1111,3.247,1112,2.338,1113,2.338,1114,2.338,1115,2.338,1116,2.338,1117,2.338,1118,2.338,1119,3.934]],["title/components/DualEntryComponent.html",[0,0.673,417,1.105]],["body/components/DualEntryComponent.html",[0,0.853,1,0.769,2,1.417,3,0.222,4,0.188,5,1.158,6,1.158,7,1.158,8,1.158,9,0.188,11,1.282,12,2.11,13,0.938,14,2.607,15,1.849,17,1.75,19,1.75,21,0.257,22,0.957,29,0.633,38,0.636,43,2.351,46,0.468,58,0.944,60,0.421,61,0.039,62,0.896,63,0.727,64,0.421,69,0.767,73,2.37,75,1.417,78,1.945,105,0.609,107,0.335,121,0.222,122,0.125,132,0.769,134,0.698,153,0.574,175,0.769,179,2.598,225,1.893,230,1.039,235,1.158,270,1.903,279,3.188,400,0.938,401,1.75,402,1.571,403,0.769,404,1.158,408,1.158,409,0.769,410,1.158,411,0.698,412,1.158,413,0.769,414,1.158,415,0.769,416,1.158,417,1.562,418,2.838,419,2.11,420,1.039,421,0.698,422,1.039,423,1.158,424,0.013,425,0.019,426,0.013,433,1.301,459,1.039,493,4.194,532,1.6,565,1.59,568,1.966,639,1.719,671,3.132,736,2.905,784,2.043,883,3.188,907,1.966,908,2.37,909,2.696,911,1.48,912,3.004,913,2.11,915,2.236,916,2.37,934,3.226,935,2.598,946,2.236,947,2.696,948,1.48,949,2.696,950,1.48,980,2.236,1057,2.598,1061,3.522,1073,1.719,1075,2.598,1076,3.49,1087,3.132,1088,3.132,1089,4.092,1090,3.132,1091,3.132,1093,2.598,1094,3.132,1111,1.719,1112,1.719,1113,1.719,1114,2.598,1115,2.598,1116,1.719,1117,1.719,1118,1.719,1120,4.872,1121,1.719,1122,3.794,1123,3.148,1124,3.794,1125,4.54,1126,4.228,1127,4.54,1128,3.794,1129,4.54,1130,4.54,1131,4.958,1132,3.148,1133,2.083,1134,2.083,1135,2.083,1136,2.083,1137,2.083,1138,2.083,1139,2.083,1140,2.083,1141,2.083,1142,2.083,1143,2.083,1144,2.083,1145,2.083,1146,2.083,1147,2.083,1148,2.083,1149,2.083,1150,2.083,1151,2.083,1152,2.083,1153,2.083,1154,2.083,1155,2.083,1156,2.083,1157,2.083,1158,2.083,1159,2.083,1160,2.083,1161,2.083,1162,2.083,1163,2.083,1164,2.083,1165,3.794,1166,2.083,1167,2.083,1168,2.083,1169,2.083,1170,3.148,1171,2.083,1172,2.083,1173,2.598,1174,2.083,1175,2.083,1176,2.083,1177,2.083,1178,2.083,1179,2.083,1180,2.083,1181,1.719,1182,2.083,1183,4.228,1184,4.228,1185,3.148,1186,4.228,1187,3.148,1188,3.148,1189,3.148,1190,3.148,1191,3.148,1192,3.148]],["title/interceptors/ErrorInterceptor.html",[442,1.663,1193,2.125]],["body/interceptors/ErrorInterceptor.html",[3,0.398,4,0.337,9,0.337,11,1.52,21,0.461,29,1.135,38,0.955,41,2.652,46,0.839,47,2.652,48,2.453,58,0.759,60,0.955,61,0.039,62,0.854,63,0.584,64,0.955,65,2.952,69,0.754,105,0.923,107,0.599,109,2.332,111,1.68,118,1.863,121,0.398,122,0.223,132,1.379,170,2.652,274,2.076,275,1.745,278,3.081,397,2.652,424,0.023,425,0.029,426,0.023,442,2.628,456,2.332,469,3.405,508,3.081,514,3.081,532,1.584,544,1.178,589,2.652,717,4.5,1194,3.081,1195,3.081,1196,3.901,1197,3.733,1198,4.726,1199,4.5,1200,4.281,1201,4.5,1202,3.733,1203,3.733,1204,4.281,1205,3.081,1206,3.901,1207,3.733,1208,3.733,1209,3.733,1210,3.733,1211,4.726,1212,3.081,1213,3.733,1214,3.733,1215,3.733,1216,3.733,1217,3.733,1218,3.733,1219,3.733,1220,3.733]],["title/injectables/FormService.html",[544,0.746,913,1.493]],["body/injectables/FormService.html",[3,0.399,4,0.338,9,0.338,16,1.526,21,0.463,38,0.957,46,1.168,58,0.834,60,0.957,61,0.039,62,0.856,63,0.463,64,0.957,69,0.957,105,0.761,107,0.602,121,0.399,122,0.224,153,1.032,322,3.092,424,0.023,425,0.029,426,0.023,459,1.869,499,2.083,532,1.927,544,1.181,545,1.869,550,2.592,565,1.504,568,2.34,590,1.869,784,2.338,908,3.244,913,2.363,916,3.409,934,3.69,949,3.365,1173,3.092,1181,3.91,1221,3.092,1222,4.736,1223,5.458,1224,3.746,1225,4.736,1226,5.194,1227,3.746,1228,4.736,1229,4.736,1230,3.746,1231,3.746,1232,4.736,1233,3.746,1234,3.746,1235,4.736]],["title/injectables/HttpService.html",[50,1.346,544,0.746]],["body/injectables/HttpService.html",[3,0.189,4,0.16,9,0.16,16,0.723,21,0.219,22,0.846,29,0.54,32,2.106,38,0.562,46,0.626,50,1.252,58,0.896,60,1.067,61,0.039,62,1.039,63,0.653,64,1.067,69,1.107,78,1.133,79,0.595,80,0.595,100,1.977,105,0.624,107,0.285,108,1.261,121,0.189,122,0.106,134,1.67,153,0.767,156,1.908,161,1.261,175,1.435,246,2.833,424,0.011,425,0.017,426,0.011,456,1.109,532,1.836,544,0.694,545,0.886,550,3.046,555,3.208,565,1.432,590,0.886,722,4.209,736,3.047,777,1.977,784,1.545,822,2.297,1212,4.887,1236,1.465,1237,3.432,1238,2.782,1239,3.432,1240,2.782,1241,2.782,1242,2.782,1243,2.782,1244,3.432,1245,2.782,1246,3.432,1247,2.782,1248,2.782,1249,2.782,1250,3.432,1251,2.782,1252,2.782,1253,1.775,1254,3.432,1255,2.782,1256,2.782,1257,2.782,1258,1.775,1259,1.775,1260,2.782,1261,2.761,1262,1.775,1263,2.782,1264,4.698,1265,2.782,1266,1.775,1267,2.782,1268,1.775,1269,1.775,1270,1.775,1271,1.775,1272,2.782,1273,4.22,1274,1.775,1275,2.782,1276,1.775,1277,1.775,1278,1.775,1279,2.782,1280,3.886,1281,3.432,1282,3.432,1283,3.432,1284,1.775,1285,1.775,1286,1.775,1287,2.782,1288,1.775,1289,2.782,1290,3.432,1291,1.775,1292,2.782,1293,3.208,1294,1.775,1295,2.782,1296,2.782,1297,1.775,1298,1.261,1299,1.775,1300,3.432,1301,5.282,1302,1.775,1303,1.775,1304,3.432,1305,1.775,1306,1.775,1307,5.085,1308,4.114,1309,1.775,1310,1.775,1311,1.775,1312,1.775,1313,1.775,1314,1.775,1315,1.775,1316,1.775,1317,1.775,1318,2.782,1319,2.782,1320,2.782,1321,1.775,1322,1.775,1323,1.775,1324,1.775,1325,1.775,1326,1.775,1327,1.775,1328,1.775,1329,4.22,1330,1.775,1331,2.782,1332,1.775,1333,1.775,1334,1.775,1335,1.775,1336,1.775,1337,1.775,1338,1.775,1339,1.775,1340,1.775,1341,1.775,1342,1.775,1343,1.775,1344,1.775,1345,1.775,1346,1.775,1347,1.775,1348,1.775,1349,2.782,1350,1.775,1351,1.775,1352,1.775,1353,1.775,1354,1.775,1355,1.775,1356,1.775,1357,1.775,1358,1.775]],["title/interceptors/JwtInterceptor.html",[443,1.663,1193,2.125]],["body/interceptors/JwtInterceptor.html",[3,0.315,4,0.267,9,0.267,11,1.203,16,1.203,21,0.365,29,1.232,38,0.818,46,0.911,47,2.099,48,2.238,56,3.815,57,2.765,58,0.864,60,1.053,61,0.039,62,0.941,63,0.571,64,1.053,65,2.53,69,1.053,79,1.357,100,2.878,105,0.864,107,0.474,109,1.845,115,2.439,118,1.474,121,0.315,122,0.177,134,0.99,153,1.116,175,1.496,270,1.33,275,1.924,358,2.099,424,0.018,425,0.025,426,0.018,443,2.252,456,1.845,532,1.666,544,1.01,565,1.116,589,2.099,590,1.474,627,1.203,643,3.343,951,2.439,1045,2.439,1194,2.439,1196,3.343,1199,4.105,1200,3.815,1201,4.105,1204,3.815,1205,3.815,1206,3.343,1307,3.343,1308,2.439,1359,2.099,1360,4.05,1361,4.622,1362,4.05,1363,4.05,1364,2.954,1365,4.05,1366,2.954,1367,4.622,1368,2.954,1369,2.954,1370,2.954,1371,4.05,1372,2.954,1373,2.954,1374,4.05,1375,4.973,1376,4.622,1377,2.954,1378,4.973,1379,4.622,1380,2.954,1381,2.099,1382,5.21,1383,2.954,1384,2.954,1385,4.05,1386,4.05,1387,4.05,1388,4.05,1389,2.954,1390,2.954,1391,2.954,1392,2.954,1393,2.954,1394,2.954,1395,2.954,1396,2.954,1397,4.622,1398,4.05,1399,4.05,1400,4.973,1401,4.05,1402,2.954,1403,2.954,1404,2.954,1405,2.954,1406,2.954,1407,2.954]],["title/injectables/LoaderService.html",[57,1.663,544,0.746]],["body/injectables/LoaderService.html",[3,0.398,4,0.337,9,0.337,16,1.523,21,0.462,22,1.438,29,1.578,38,0.956,46,1.167,57,2.631,58,0.948,60,0.756,61,0.039,62,0.676,63,0.462,64,0.756,69,1.102,75,2.455,79,1.585,80,1.585,81,1.866,105,0.833,107,0.6,116,3.033,118,1.866,121,0.398,122,0.224,134,1.585,153,1.03,156,2.631,424,0.023,425,0.029,426,0.023,544,1.179,545,1.866,590,1.866,621,4.284,1408,3.087,1409,5.19,1410,5.19,1411,4.731,1412,4.502,1413,5.454,1414,4.083,1415,4.731,1416,4.731,1417,3.739,1418,3.739,1419,3.739,1420,3.739,1421,4.731,1422,3.739,1423,3.739,1424,3.739,1425,4.731,1426,3.739,1427,3.739]],["title/interfaces/LoaderState.html",[116,1.663,1428,1.868]],["body/interfaces/LoaderState.html",[3,0.495,4,0.419,9,0.419,21,0.574,22,1.641,61,0.037,63,0.574,78,2.324,116,3.002,121,0.495,424,0.029,425,0.033,426,0.029,1414,4.173,1428,2.903,1429,4.647,1430,3.836]],["title/classes/LoginCredentials.html",[32,1.493,122,0.179]],["body/classes/LoginCredentials.html",[3,0.455,4,0.386,9,0.386,21,0.528,22,1.562,32,2.564,46,0.961,58,0.885,60,0.864,61,0.038,62,0.772,63,0.681,64,0.864,121,0.455,122,0.256,180,4.154,181,4.266,424,0.026,425,0.032,426,0.026,523,2.67,550,2.963,565,1.689,1431,3.528,1432,5.138,1433,5.138,1434,4.274,1435,4.274,1436,4.274]],["title/pipes/SearchPipe.html",[440,1.493,627,1.218]],["body/pipes/SearchPipe.html",[3,0.461,4,0.39,9,0.39,11,1.762,13,1.947,38,0.874,58,0.694,60,0.874,61,0.038,62,1,63,0.535,64,0.874,69,0.874,80,1.734,105,0.694,107,0.694,121,0.461,122,0.259,191,3.676,424,0.027,425,0.032,426,0.027,440,2.582,487,3.57,532,1.734,627,2.108,784,1.947,1264,3.57,1437,3.57,1438,4.325,1439,5.174,1440,5.738,1441,4.325,1442,5.174,1443,4.325,1444,4.325,1445,4.325,1446,4.325,1447,4.325]],["title/directives/TooltipDirective.html",[403,1.105,421,1.002]],["body/directives/TooltipDirective.html",[3,0.293,4,0.248,9,0.248,13,1.236,14,1.921,21,0.339,22,1.171,29,0.835,38,0.778,46,0.617,58,0.93,60,0.555,61,0.039,62,0.496,63,0.65,64,0.555,69,0.974,75,2.169,79,0.92,80,0.92,105,0.441,107,0.441,121,0.293,122,0.164,132,1.014,230,2.405,274,3.065,275,1.014,276,1.951,279,2.472,295,3.978,331,1.951,332,3.01,368,2.736,398,3.838,403,1.422,420,1.37,421,1.29,422,2.863,424,0.017,425,0.024,426,0.017,475,3.01,499,2.472,565,1.328,571,2.267,736,2.472,784,1.236,907,2.405,1412,3.978,1414,3.737,1448,2.267,1449,4.446,1450,4.819,1451,4.819,1452,4.446,1453,3.85,1454,4.446,1455,4.446,1456,2.746,1457,4.819,1458,4.446,1459,4.819,1460,3.85,1461,3.85,1462,2.746,1463,2.746,1464,2.746,1465,2.746,1466,2.746,1467,2.746,1468,2.746,1469,2.746,1470,2.746,1471,3.85,1472,2.746,1473,2.746,1474,2.746,1475,2.746,1476,2.746,1477,2.746,1478,5.512,1479,2.746,1480,2.746,1481,2.746,1482,2.746,1483,2.746,1484,2.746,1485,4.446,1486,2.746,1487,2.746,1488,2.746,1489,2.746,1490,2.746,1491,2.746,1492,2.746,1493,2.746,1494,2.746,1495,2.746,1496,5.074,1497,5.26,1498,2.746,1499,4.819,1500,4.819,1501,2.746,1502,2.746,1503,2.746,1504,2.746,1505,2.746,1506,2.746,1507,2.746,1508,2.746,1509,2.746,1510,4.446,1511,4.446,1512,4.819,1513,4.446,1514,3.85,1515,4.446,1516,2.746,1517,3.85,1518,2.746,1519,2.746,1520,2.746]],["title/coverage.html",[1521,3.372]],["body/coverage.html",[0,1.272,1,1.301,9,0.318,10,2.907,32,1.757,48,1.585,50,1.585,54,1.958,57,1.958,61,0.039,63,0.435,116,1.958,122,0.302,134,1.18,275,2.305,403,1.301,409,1.301,411,1.18,413,1.301,415,1.301,417,1.301,421,1.18,424,0.022,425,0.028,426,0.022,440,1.757,442,1.958,443,1.958,446,2.502,473,2.502,482,2.502,493,2.502,497,2.844,522,2.502,524,2.907,544,1.377,546,2.907,627,1.435,665,1.958,666,2.907,690,2.907,857,2.502,869,2.907,888,3.235,889,3.235,913,1.757,959,2.907,1082,2.907,1120,2.907,1121,2.907,1193,3.235,1195,2.907,1221,2.907,1236,2.907,1261,2.502,1298,3.235,1359,3.235,1381,2.502,1408,2.907,1428,2.2,1430,2.907,1431,2.907,1437,2.907,1448,2.907,1521,2.907,1522,3.522,1523,3.522,1524,5.046,1525,3.522,1526,5.758,1527,5.835,1528,3.522,1529,3.522,1530,3.522,1531,3.522,1532,3.522,1533,3.522,1534,3.522,1535,3.522,1536,3.522,1537,3.522,1538,3.522,1539,4.553,1540,3.522,1541,3.522,1542,3.522,1543,2.907,1544,2.907,1545,3.759,1546,2.907,1547,3.522]],["title/dependencies.html",[430,2.248,1548,2.497]],["body/dependencies.html",[61,0.039,107,0.645,111,2.586,112,2.232,114,2.508,118,2.003,119,2.852,120,2.852,225,2.003,424,0.025,425,0.03,426,0.025,430,2.508,432,2.852,449,4.082,450,3.089,459,2.003,462,3.089,463,2.852,464,2.852,469,2.508,471,3.314,475,2.508,476,3.314,478,3.314,479,3.314,490,2.852,584,3.314,585,3.314,627,1.635,718,3.314,1549,4.014,1550,5.987,1551,4.014,1552,4.014,1553,4.014,1554,4.014,1555,4.014,1556,4.014,1557,4.014,1558,4.014,1559,4.014,1560,4.014,1561,4.014,1562,4.014,1563,4.014,1564,4.014,1565,4.014,1566,4.014,1567,4.014,1568,4.014,1569,4.014,1570,4.014,1571,4.014,1572,4.014,1573,4.014,1574,4.014,1575,4.014,1576,4.014,1577,4.014,1578,4.014]],["title/index.html",[21,0.309,1579,2.497,1580,2.497]],["body/index.html",[0,1.207,4,0.364,15,1.641,37,3.326,61,0.031,62,0.728,134,1.35,219,4.432,223,2.241,253,4.624,254,3.814,255,3.326,264,3.326,424,0.025,425,0.031,426,0.025,462,3.353,475,3.705,531,3.326,731,3.326,932,3.326,1293,3.326,1581,4.029,1582,4.957,1583,4.029,1584,5.369,1585,4.029,1586,4.029,1587,4.957,1588,5.751,1589,4.029,1590,4.029,1591,4.029,1592,4.029,1593,4.029,1594,4.029,1595,4.029,1596,5.369,1597,4.029,1598,5.751,1599,4.029,1600,4.029,1601,4.029,1602,4.029,1603,4.029,1604,4.029,1605,3.326,1606,4.957,1607,4.957,1608,5.601,1609,4.029,1610,4.957,1611,4.957,1612,4.029,1613,4.029,1614,4.029,1615,4.029,1616,4.029,1617,2.863,1618,4.029,1619,4.029]],["title/modules.html",[429,2.271]],["body/modules.html",[61,0.034,424,0.029,425,0.034,426,0.029,428,2.985,429,2.658,441,2.658,450,2.985,865,3.945,1620,4.779,1621,5.486,1622,4.779,1623,4.779]],["title/overview.html",[1617,2.902]],["body/overview.html",[1,2.181,2,1.774,61,0.038,175,1.963,223,2.192,332,3.054,400,1.774,403,1.456,409,1.963,411,1.782,413,1.963,415,1.963,417,1.963,421,1.782,424,0.024,425,0.03,426,0.024,427,2.462,428,3.922,429,2.192,430,2.462,431,2.801,432,2.801,433,2.462,434,2.801,435,3.254,436,3.254,437,3.254,438,3.254,439,3.254,440,2.653,441,2.956,442,2.956,443,2.956,444,4.037,445,3.254,523,2.462,538,2.462,545,1.967,627,1.606,686,2.801,1042,3.254,1043,3.254,1428,2.462,1617,2.801]],["title/routes.html",[538,2.551]],["body/routes.html",[61,0.034,424,0.03,425,0.034,426,0.03,538,3.045]],["title/miscellaneous/variables.html",[1624,2.061,1625,2.97]],["body/miscellaneous/variables.html",[21,0.513,61,0.039,63,0.738,71,3.427,79,1.897,80,1.897,81,2.072,153,1.391,424,0.026,425,0.031,426,0.026,446,2.95,473,3.865,474,3.427,497,2.593,503,3.427,650,3.153,888,2.95,889,3.587,1261,3.587,1298,4.021,1359,2.95,1381,3.587,1543,3.427,1544,3.427,1545,3.427,1546,4.167,1605,4.167,1624,3.427,1625,3.427,1626,4.152,1627,5.048,1628,4.152,1629,4.152,1630,4.152,1631,4.152,1632,4.152,1633,4.152,1634,4.152,1635,4.152]]],"invertedIndex":[["",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Constants.html":{},"components/DashboardComponent.html":{},"injectables/DataService.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/LoginCredentials.html":{},"pipes/SearchPipe.html":{},"directives/TooltipDirective.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"classes/Constants.html":{},"components/DashboardComponent.html":{},"injectables/DataService.html":{},"components/DocumentUploadComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"directives/TooltipDirective.html":{},"coverage.html":{}}}],["0.1",{"_index":310,"title":{},"body":{"components/AppComponent.html":{}}}],["0.10.2",{"_index":1578,"title":{},"body":{"dependencies.html":{}}}],["0.119608",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["0.3.3",{"_index":1557,"title":{},"body":{"dependencies.html":{}}}],["0.5rem",{"_index":1080,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["0.85rem",{"_index":377,"title":{},"body":{"components/AppComponent.html":{}}}],["0/1",{"_index":1527,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1540,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1535,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1533,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1541,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1538,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1532,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1525,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1534,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":1531,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1524,"title":{},"body":{"coverage.html":{}}}],["0/35",{"_index":1530,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1539,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1537,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1536,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1542,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":320,"title":{},"body":{"components/AppComponent.html":{}}}],["1",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DataService.html":{},"components/DocumentUploadComponent.html":{},"components/DualEntryComponent.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"overview.html":{}}}],["1.14rem",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["1.16.1",{"_index":1573,"title":{},"body":{"dependencies.html":{}}}],["1.2em",{"_index":335,"title":{},"body":{"components/AppComponent.html":{}}}],["1.3.0",{"_index":1565,"title":{},"body":{"dependencies.html":{}}}],["1.3rem",{"_index":864,"title":{},"body":{"components/DashboardComponent.html":{}}}],["1.42em",{"_index":284,"title":{},"body":{"components/AppComponent.html":{}}}],["1.5rem",{"_index":389,"title":{},"body":{"components/AppComponent.html":{}}}],["10",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/TooltipDirective.html":{}}}],["10.1.0",{"_index":1569,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":357,"title":{},"body":{"components/AppComponent.html":{}}}],["10000,positionclass",{"_index":513,"title":{},"body":{"modules/AppModule.html":{}}}],["1000ms",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["10px",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["11.0.0",{"_index":1566,"title":{},"body":{"dependencies.html":{}}}],["11.0.7",{"_index":1585,"title":{},"body":{"index.html":{}}}],["11.0.9",{"_index":1550,"title":{},"body":{"dependencies.html":{}}}],["118px",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["12",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["13.2.0",{"_index":1570,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":510,"title":{},"body":{"modules/AppModule.html":{}}}],["15px",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["18vw",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["190",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["1px",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["1rem",{"_index":375,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentUploadComponent.html":{},"directives/TooltipDirective.html":{},"overview.html":{}}}],["2.0.0",{"_index":1576,"title":{},"body":{"dependencies.html":{}}}],["2.1.1",{"_index":1567,"title":{},"body":{"dependencies.html":{}}}],["2.2.4",{"_index":1558,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":1564,"title":{},"body":{"dependencies.html":{}}}],["2.85rem",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["2014",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["2021",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["23",{"_index":333,"title":{},"body":{"components/AppComponent.html":{}}}],["255",{"_index":309,"title":{},"body":{"components/AppComponent.html":{}}}],["25px",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":1042,"title":{},"body":{"components/DocumentUploadComponent.html":{},"overview.html":{}}}],["3.0.0",{"_index":1562,"title":{},"body":{"dependencies.html":{}}}],["3.5.1",{"_index":1561,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":506,"title":{},"body":{"modules/AppModule.html":{}}}],["30px",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":842,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{}}}],["4.6.0",{"_index":1559,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":1211,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["40vw",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["4px",{"_index":307,"title":{},"body":{"components/AppComponent.html":{}}}],["5",{"_index":1043,"title":{},"body":{"components/DocumentUploadComponent.html":{},"overview.html":{}}}],["5.0.0",{"_index":1568,"title":{},"body":{"dependencies.html":{}}}],["5.15.2",{"_index":1555,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":371,"title":{},"body":{"components/AppComponent.html":{}}}],["500000",{"_index":393,"title":{},"body":{"components/AppComponent.html":{}}}],["500ms",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["5px",{"_index":305,"title":{},"body":{"components/AppComponent.html":{}}}],["6",{"_index":686,"title":{},"body":{"classes/Constants.html":{},"components/DocumentUploadComponent.html":{},"overview.html":{}}}],["6.6.0",{"_index":1574,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":507,"title":{},"body":{"modules/AppModule.html":{}}}],["60}),perfectscrollbarmodule",{"_index":511,"title":{},"body":{"modules/AppModule.html":{}}}],["7",{"_index":1044,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["7.0.1",{"_index":1571,"title":{},"body":{"dependencies.html":{}}}],["768px",{"_index":353,"title":{},"body":{"components/AppComponent.html":{}}}],["8",{"_index":1045,"title":{},"body":{"components/DocumentUploadComponent.html":{},"interceptors/JwtInterceptor.html":{}}}],["82vw",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["85",{"_index":868,"title":{},"body":{"components/DashboardComponent.html":{}}}],["9",{"_index":1046,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["9\\\\\\/]{1",{"_index":1010,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["9]{6",{"_index":685,"title":{},"body":{"classes/Constants.html":{}}}],["_",{"_index":641,"title":{},"body":{"injectables/AuthService.html":{}}}],["_http",{"_index":1256,"title":{},"body":{"injectables/HttpService.html":{}}}],["a.list",{"_index":381,"title":{},"body":{"components/AppComponent.html":{}}}],["a.nav",{"_index":336,"title":{},"body":{"components/AppComponent.html":{}}}],["a[aria",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["a[field",{"_index":886,"title":{},"body":{"injectables/DataService.html":{}}}],["aadhaar",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentUploadComponent.html":{}}}],["aadhar",{"_index":1012,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["absolute",{"_index":330,"title":{},"body":{"components/AppComponent.html":{}}}],["abstractcontrol",{"_index":949,"title":{},"body":{"components/DocumentUploadComponent.html":{},"components/DualEntryComponent.html":{},"injectables/FormService.html":{}}}],["accessors",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DocumentUploadComponent.html":{}}}],["accounitng",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["accounting",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["action.active",{"_index":384,"title":{},"body":{"components/AppComponent.html":{}}}],["action:focus",{"_index":382,"title":{},"body":{"components/AppComponent.html":{}}}],["action:hover,a.list",{"_index":383,"title":{},"body":{"components/AppComponent.html":{}}}],["actions",{"_index":1071,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["actual_component",{"_index":423,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["adddocument",{"_index":899,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["addidentifier",{"_index":900,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["addidentifier(i",{"_index":920,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["address",{"_index":1063,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["addscrollbarstate",{"_index":1411,"title":{},"body":{"injectables/LoaderService.html":{}}}],["addscrollbarstate(data",{"_index":1416,"title":{},"body":{"injectables/LoaderService.html":{}}}],["admin",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["advanced",{"_index":841,"title":{},"body":{"components/DashboardComponent.html":{}}}],["age",{"_index":1189,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["agelimit",{"_index":1125,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["alert",{"_index":861,"title":{},"body":{"components/DashboardComponent.html":{}}}],["align",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["alphabetic",{"_index":683,"title":{},"body":{"classes/Constants.html":{}}}],["alphabets",{"_index":680,"title":{},"body":{"classes/Constants.html":{}}}],["angular",{"_index":462,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1549,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":490,"title":{},"body":{"modules/AppModule.html":{},"components/DocumentUploadComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":456,"title":{},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{}}}],["angular/compiler",{"_index":1551,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DataService.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoaderService.html":{},"pipes/SearchPipe.html":{},"directives/TooltipDirective.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":459,"title":{},"body":{"modules/AppModule.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"injectables/FormService.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":449,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["anyotherdocument",{"_index":969,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["api",{"_index":1214,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"index.html":{}}}],["app.component",{"_index":453,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":1402,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["appmodule",{"_index":428,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":522,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":441,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":1440,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["args.tolowercase",{"_index":1445,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["array",{"_index":644,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"components/DocumentUploadComponent.html":{}}}],["array(len",{"_index":1406,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["array.sort((a",{"_index":884,"title":{},"body":{"injectables/DataService.html":{}}}],["artifacts",{"_index":1599,"title":{},"body":{"index.html":{}}}],["assign",{"_index":709,"title":{},"body":{"components/DashboardComponent.html":{}}}],["assign(taskid",{"_index":720,"title":{},"body":{"components/DashboardComponent.html":{}}}],["assigned",{"_index":801,"title":{},"body":{"components/DashboardComponent.html":{}}}],["assigntasksforstaff",{"_index":694,"title":{},"body":{"components/DashboardComponent.html":{}}}],["associations",{"_index":1290,"title":{},"body":{"injectables/HttpService.html":{}}}],["async",{"_index":525,"title":{},"body":{"classes/AppPage.html":{}}}],["auth",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["authentication",{"_index":1238,"title":{},"body":{"injectables/HttpService.html":{}}}],["authentication(logincredentials",{"_index":1257,"title":{},"body":{"injectables/HttpService.html":{}}}],["authenticationfailed",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["authorization",{"_index":1389,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["authservice",{"_index":48,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"coverage.html":{}}}],["auto",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["automatically",{"_index":1593,"title":{},"body":{"index.html":{}}}],["available",{"_index":1623,"title":{},"body":{"modules.html":{}}}],["b",{"_index":885,"title":{},"body":{"injectables/DataService.html":{}}}],["b[field",{"_index":887,"title":{},"body":{"injectables/DataService.html":{}}}],["background",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["bases",{"_index":610,"title":{},"body":{"injectables/AuthService.html":{}}}],["baseurl",{"_index":1237,"title":{},"body":{"injectables/HttpService.html":{}}}],["bc",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcdashboardroles",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["between",{"_index":1190,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["birth",{"_index":1162,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["black",{"_index":321,"title":{},"body":{"components/AppComponent.html":{}}}],["block",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["blue",{"_index":271,"title":{},"body":{"components/AppComponent.html":{}}}],["books",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["boolean",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"injectables/HttpService.html":{},"interfaces/LoaderState.html":{}}}],["boolean,officeid",{"_index":1314,"title":{},"body":{"injectables/HttpService.html":{}}}],["boolean,showmessage",{"_index":760,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bootstrap",{"_index":432,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["bottom",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentUploadComponent.html":{},"directives/TooltipDirective.html":{}}}],["bottom:0",{"_index":399,"title":{},"body":{"components/AppComponent.html":{}}}],["box",{"_index":324,"title":{},"body":{"components/AppComponent.html":{}}}],["branch",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["brand",{"_index":312,"title":{},"body":{"components/AppComponent.html":{}}}],["break",{"_index":1002,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["browse",{"_index":1621,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":450,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":533,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":467,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":466,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule,toastrmodule.forroot({timeout",{"_index":512,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":448,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule,approutingmodule,httpclientmodule,formsmodule,ngxwebstoragemodule.forroot",{"_index":504,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":285,"title":{},"body":{"components/AppComponent.html":{}}}],["btn:focus",{"_index":323,"title":{},"body":{"components/AppComponent.html":{}}}],["btn:hover",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["btoa(json.stringify(bases",{"_index":615,"title":{},"body":{"injectables/AuthService.html":{}}}],["build",{"_index":1598,"title":{},"body":{"index.html":{}}}],["bulk",{"_index":728,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bulkassign",{"_index":862,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bulkselection",{"_index":710,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bulkselection(assign",{"_index":723,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bulktaskassign",{"_index":711,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bulktasksassign",{"_index":827,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bulktasksassign.push({taskid",{"_index":830,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bulktasksunassign",{"_index":818,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bulktasksunassign.push({taskid",{"_index":821,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bulktaskunassign",{"_index":712,"title":{},"body":{"components/DashboardComponent.html":{}}}],["business",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["c",{"_index":1040,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["cancellation",{"_index":260,"title":{},"body":{"components/AppComponent.html":{}}}],["card",{"_index":854,"title":{},"body":{"components/DashboardComponent.html":{}}}],["case",{"_index":998,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["catcherror",{"_index":1208,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ccc",{"_index":304,"title":{},"body":{"components/AppComponent.html":{}}}],["center",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["centers",{"_index":247,"title":{},"body":{"components/AppComponent.html":{}}}],["change",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["characters",{"_index":1186,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["charset=utf",{"_index":1403,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["check",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["checker",{"_index":232,"title":{},"body":{"components/AppComponent.html":{}}}],["checkrolefordashboard",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["checkrolefordashboard(bcdashboardroles",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["checkrolefordashboard(bcdashboardroles):any",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["chevron",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["circle",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["class",{"_index":122,"title":{"classes/AppPage.html":{},"classes/Constants.html":{},"classes/LoginCredentials.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Constants.html":{},"components/DashboardComponent.html":{},"injectables/DataService.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoaderService.html":{},"classes/LoginCredentials.html":{},"pipes/SearchPipe.html":{},"directives/TooltipDirective.html":{},"coverage.html":{}}}],["classes",{"_index":523,"title":{},"body":{"classes/AppPage.html":{},"classes/Constants.html":{},"classes/LoginCredentials.html":{},"overview.html":{}}}],["cli",{"_index":1584,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["client",{"_index":231,"title":{},"body":{"components/AppComponent.html":{}}}],["client'},{'name",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["client.component",{"_index":483,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["client.component.ts",{"_index":1529,"title":{},"body":{"coverage.html":{}}}],["client/create",{"_index":482,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["clients",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["clienttemplateresource",{"_index":1239,"title":{},"body":{"injectables/HttpService.html":{}}}],["clienttemplateresource():any",{"_index":1338,"title":{},"body":{"injectables/HttpService.html":{}}}],["cluster_appmodule",{"_index":435,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":436,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":439,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":438,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":437,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1594,"title":{},"body":{"index.html":{}}}],["codename",{"_index":1263,"title":{},"body":{"injectables/HttpService.html":{}}}],["codevaluesresource",{"_index":1240,"title":{},"body":{"injectables/HttpService.html":{}}}],["codevaluesresource(codename",{"_index":1260,"title":{},"body":{"injectables/HttpService.html":{}}}],["collapse",{"_index":337,"title":{},"body":{"components/AppComponent.html":{}}}],["collection",{"_index":243,"title":{},"body":{"components/AppComponent.html":{}}}],["color",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["color:#424242",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["color:#fff",{"_index":273,"title":{},"body":{"components/AppComponent.html":{}}}],["color:transparent",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["color:transparent!important",{"_index":385,"title":{},"body":{"components/AppComponent.html":{}}}],["command",{"_index":1293,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"overview.html":{}}}],["components/create",{"_index":481,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/document",{"_index":496,"title":{},"body":{"modules/AppModule.html":{}}}],["components/dropdown/dropdown.component",{"_index":495,"title":{},"body":{"modules/AppModule.html":{}}}],["components/dual",{"_index":492,"title":{},"body":{"modules/AppModule.html":{}}}],["concatmap",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{}}}],["conditionalvalidator",{"_index":1222,"title":{},"body":{"injectables/FormService.html":{}}}],["conditionalvalidator(predicate",{"_index":1225,"title":{},"body":{"injectables/FormService.html":{}}}],["config",{"_index":875,"title":{},"body":{"injectables/DataService.html":{}}}],["configurationresource",{"_index":1241,"title":{},"body":{"injectables/HttpService.html":{}}}],["configurationresource(id",{"_index":1265,"title":{},"body":{"injectables/HttpService.html":{}}}],["confirm",{"_index":1073,"title":{},"body":{"components/DocumentUploadComponent.html":{},"components/DualEntryComponent.html":{}}}],["console.log(\"error",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(\"logged",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('time",{"_index":618,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":499,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"directives/TooltipDirective.html":{}}}],["constants",{"_index":665,"title":{"classes/Constants.html":{}},"body":{"classes/Constants.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"coverage.html":{}}}],["constants.dateformat1",{"_index":741,"title":{},"body":{"components/DashboardComponent.html":{}}}],["constants.dateformat2",{"_index":957,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["constants.datepickerformat",{"_index":936,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["constructor",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DataService.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoaderService.html":{},"classes/LoginCredentials.html":{},"directives/TooltipDirective.html":{}}}],["constructor(_http",{"_index":1253,"title":{},"body":{"injectables/HttpService.html":{}}}],["constructor(auth",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["constructor(el",{"_index":1456,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["constructor(fb",{"_index":911,"title":{},"body":{"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["constructor(http",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{}}}],["constructor(local",{"_index":871,"title":{},"body":{"injectables/DataService.html":{}}}],["constructor(private",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DataService.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"directives/TooltipDirective.html":{}}}],["constructor(username",{"_index":1432,"title":{},"body":{"classes/LoginCredentials.html":{}}}],["container",{"_index":266,"title":{},"body":{"components/AppComponent.html":{}}}],["content",{"_index":358,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"interceptors/JwtInterceptor.html":{}}}],["content.toggled",{"_index":356,"title":{},"body":{"components/AppComponent.html":{}}}],["context",{"_index":1261,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contexttypes",{"_index":1035,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["control",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"injectables/FormService.html":{}}}],["control.value",{"_index":1235,"title":{},"body":{"injectables/FormService.html":{}}}],["controlname",{"_index":1232,"title":{},"body":{"injectables/FormService.html":{}}}],["copy",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["core/api/v1",{"_index":1296,"title":{},"body":{"injectables/HttpService.html":{}}}],["correspondent",{"_index":198,"title":{},"body":{"components/AppComponent.html":{}}}],["countryid",{"_index":1273,"title":{},"body":{"injectables/HttpService.html":{}}}],["countryid):any",{"_index":1351,"title":{},"body":{"injectables/HttpService.html":{}}}],["coverage",{"_index":1521,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"directives/TooltipDirective.html":{}}}],["createclient",{"_index":542,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["createclientcomponent",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["creation",{"_index":249,"title":{},"body":{"components/AppComponent.html":{}}}],["credentials",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{}}}],["credentials.username",{"_index":605,"title":{},"body":{"injectables/AuthService.html":{}}}],["cryptoresource",{"_index":1242,"title":{},"body":{"injectables/HttpService.html":{}}}],["cryptoresource(task",{"_index":1267,"title":{},"body":{"injectables/HttpService.html":{}}}],["currently",{"_index":853,"title":{},"body":{"components/DashboardComponent.html":{}}}],["currentsearchtype",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["currentuser",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["currentuser.firstname",{"_index":405,"title":{},"body":{"components/AppComponent.html":{}}}],["currentuser.firstname}}&nbsp;{{currentuser.lastname",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["currentuser.lastname",{"_index":406,"title":{},"body":{"components/AppComponent.html":{}}}],["currentuser.officename}}({{office.branchcode",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["currentuser.roles[0].name",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["currentuser.username",{"_index":215,"title":{},"body":{"components/AppComponent.html":{}}}],["currentuserdata",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{}}}],["custom",{"_index":1390,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["d",{"_index":1041,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["darkgrey",{"_index":334,"title":{},"body":{"components/AppComponent.html":{}}}],["dashboard",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["dashboard'},{'name",{"_index":412,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["dashboard.component.css",{"_index":692,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.html",{"_index":693,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":411,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dashed",{"_index":303,"title":{},"body":{"components/AppComponent.html":{}}}],["data",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{}}}],["data.pageitems",{"_index":795,"title":{},"body":{"components/DashboardComponent.html":{}}}],["data2",{"_index":607,"title":{},"body":{"injectables/AuthService.html":{}}}],["data2.authenticated",{"_index":608,"title":{},"body":{"injectables/AuthService.html":{}}}],["data2.shouldrenewpassword",{"_index":609,"title":{},"body":{"injectables/AuthService.html":{}}}],["data3",{"_index":628,"title":{},"body":{"injectables/AuthService.html":{}}}],["data3[0].officelevel.name.tolowercase().indexof(\"bc",{"_index":629,"title":{},"body":{"injectables/AuthService.html":{}}}],["data3[0].subsidiary",{"_index":630,"title":{},"body":{"injectables/AuthService.html":{}}}],["data3[1",{"_index":631,"title":{},"body":{"injectables/AuthService.html":{}}}],["data?:any):any",{"_index":1333,"title":{},"body":{"injectables/HttpService.html":{}}}],["data[0",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["data[1",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["data[2",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["dataservice",{"_index":54,"title":{"injectables/DataService.html":{}},"body":{"components/AppComponent.html":{},"injectables/DataService.html":{},"components/DocumentUploadComponent.html":{},"coverage.html":{}}}],["date",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DualEntryComponent.html":{},"dependencies.html":{}}}],["date().gettime",{"_index":603,"title":{},"body":{"injectables/AuthService.html":{}}}],["date(value",{"_index":664,"title":{},"body":{"injectables/AuthService.html":{}}}],["date:'dd",{"_index":226,"title":{},"body":{"components/AppComponent.html":{}}}],["date:\\'dd",{"_index":407,"title":{},"body":{"components/AppComponent.html":{}}}],["dateformat",{"_index":695,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dateformat1",{"_index":667,"title":{},"body":{"classes/Constants.html":{}}}],["dateformat2",{"_index":668,"title":{},"body":{"classes/Constants.html":{}}}],["datepickerconfig",{"_index":892,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["datepickerformat",{"_index":669,"title":{},"body":{"classes/Constants.html":{}}}],["datepipe",{"_index":489,"title":{},"body":{"modules/AppModule.html":{},"components/DocumentUploadComponent.html":{}}}],["dd",{"_index":672,"title":{},"body":{"classes/Constants.html":{}}}],["dd/mm/yyyy",{"_index":675,"title":{},"body":{"classes/Constants.html":{}}}],["dec2hex",{"_index":1360,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["dec2hex(s",{"_index":1365,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["declarations",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["declare",{"_index":951,"title":{},"body":{"components/DocumentUploadComponent.html":{},"interceptors/JwtInterceptor.html":{}}}],["default",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Constants.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoaderService.html":{},"directives/TooltipDirective.html":{},"miscellaneous/variables.html":{}}}],["default_perfect_scrollbar_config",{"_index":500,"title":{},"body":{"modules/AppModule.html":{}}}],["defined",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"classes/Constants.html":{},"components/DashboardComponent.html":{},"injectables/DataService.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoaderService.html":{},"classes/LoginCredentials.html":{},"pipes/SearchPipe.html":{},"directives/TooltipDirective.html":{}}}],["delay",{"_index":1451,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["deletedocument",{"_index":901,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["deletedocument(i",{"_index":922,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["dependencies",{"_index":430,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":846,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dev",{"_index":1590,"title":{},"body":{"index.html":{}}}],["development",{"_index":1586,"title":{},"body":{"index.html":{}}}],["digit",{"_index":687,"title":{},"body":{"classes/Constants.html":{}}}],["directive",{"_index":403,"title":{"directives/TooltipDirective.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"directives/TooltipDirective.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":420,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"directives/TooltipDirective.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1597,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1602,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":982,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["disbursement",{"_index":262,"title":{},"body":{"components/AppComponent.html":{}}}],["display",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["displayfield",{"_index":1086,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dist",{"_index":1601,"title":{},"body":{"index.html":{}}}],["districtid",{"_index":1287,"title":{},"body":{"injectables/HttpService.html":{}}}],["document",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["document.body.scrolltop",{"_index":1509,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["document.documentelement.scrolltop",{"_index":1508,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["documentation",{"_index":1522,"title":{},"body":{"coverage.html":{}}}],["documents').subscribe",{"_index":973,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["documenttypes",{"_index":893,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["documentuploadcomponent",{"_index":413,"title":{"components/DocumentUploadComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["down",{"_index":347,"title":{},"body":{"components/AppComponent.html":{}}}],["dpdatepickermodule",{"_index":477,"title":{},"body":{"modules/AppModule.html":{}}}],["drivers",{"_index":966,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["dropdown",{"_index":1083,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdown'},{'name",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["dropdown.component.css",{"_index":1084,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdown.component.html",{"_index":1085,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdowncomponent",{"_index":415,"title":{"components/DropdownComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dsplit",{"_index":1175,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["dual",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["dualentrycomponent",{"_index":417,"title":{"components/DualEntryComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dualname",{"_index":1124,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["duration",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["dynamic",{"_index":1552,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1613,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":524,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":530,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":528,"title":{},"body":{"classes/AppPage.html":{}}}],["edd",{"_index":263,"title":{},"body":{"components/AppComponent.html":{}}}],["el",{"_index":1461,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["element",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["element(by.css('app",{"_index":534,"title":{},"body":{"classes/AppPage.html":{}}}],["element.groupname",{"_index":768,"title":{},"body":{"components/DashboardComponent.html":{}}}],["element.issubsidiary",{"_index":772,"title":{},"body":{"components/DashboardComponent.html":{}}}],["element.name",{"_index":881,"title":{},"body":{"injectables/DataService.html":{}}}],["element.taskdescription.split",{"_index":767,"title":{},"body":{"components/DashboardComponent.html":{}}}],["element.vertical",{"_index":771,"title":{},"body":{"components/DashboardComponent.html":{}}}],["elementclass",{"_index":1087,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["elementref",{"_index":1457,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["emitevent",{"_index":1088,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["employeeresource",{"_index":1243,"title":{},"body":{"injectables/HttpService.html":{}}}],["employeeresource(staffid",{"_index":1269,"title":{},"body":{"injectables/HttpService.html":{}}}],["employeeresource(staffid?):any",{"_index":1357,"title":{},"body":{"injectables/HttpService.html":{}}}],["en",{"_index":678,"title":{},"body":{"classes/Constants.html":{}}}],["encrypt",{"_index":598,"title":{},"body":{"injectables/AuthService.html":{}}}],["encrypt.encrypt(credentials.password",{"_index":602,"title":{},"body":{"injectables/AuthService.html":{}}}],["encrypt.setpublickey(data1.keyvalue",{"_index":600,"title":{},"body":{"injectables/AuthService.html":{}}}],["encryptedpassword",{"_index":601,"title":{},"body":{"injectables/AuthService.html":{}}}],["end",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["endpoint",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enrollment",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentUploadComponent.html":{}}}],["enter",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/DualEntryComponent.html":{}}}],["entry",{"_index":419,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["entry.component",{"_index":494,"title":{},"body":{"modules/AppModule.html":{}}}],["entry.component.css",{"_index":1122,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["entry.component.html",{"_index":1123,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["entry.component.ts",{"_index":1121,"title":{},"body":{"components/DualEntryComponent.html":{},"coverage.html":{}}}],["entry.component.ts:100",{"_index":1152,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["entry.component.ts:14",{"_index":1142,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["entry.component.ts:15",{"_index":1133,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["entry.component.ts:16",{"_index":1148,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["entry.component.ts:17",{"_index":1139,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["entry.component.ts:18",{"_index":1135,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["entry.component.ts:19",{"_index":1145,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["entry.component.ts:20",{"_index":1146,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["entry.component.ts:21",{"_index":1137,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["entry.component.ts:22",{"_index":1143,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["entry.component.ts:23",{"_index":1144,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["entry.component.ts:24",{"_index":1147,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["entry.component.ts:25",{"_index":1138,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["entry.component.ts:26",{"_index":1136,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["entry.component.ts:27",{"_index":1140,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["entry.component.ts:28",{"_index":1141,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["entry.component.ts:29",{"_index":1149,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["entry.component.ts:30",{"_index":1134,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["entry.component.ts:32",{"_index":1132,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["entry.component.ts:37",{"_index":1151,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["entry.component.ts:63",{"_index":1150,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["entry/dual",{"_index":493,"title":{},"body":{"modules/AppModule.html":{},"components/DualEntryComponent.html":{},"coverage.html":{}}}],["environment",{"_index":1298,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.endpoint",{"_index":1295,"title":{},"body":{"injectables/HttpService.html":{}}}],["environments/environment",{"_index":1299,"title":{},"body":{"injectables/HttpService.html":{}}}],["err",{"_index":1401,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["err.error.errors[0].developermessage",{"_index":1217,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["err.status",{"_index":1210,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"classes/Constants.html":{},"interceptors/ErrorInterceptor.html":{}}}],["errorinterceptor",{"_index":442,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["eta",{"_index":843,"title":{},"body":{"components/DashboardComponent.html":{}}}],["etadate",{"_index":778,"title":{},"body":{"components/DashboardComponent.html":{}}}],["etadate','groupname",{"_index":776,"title":{},"body":{"components/DashboardComponent.html":{}}}],["event",{"_index":1399,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["eventemitter",{"_index":947,"title":{},"body":{"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["execute",{"_index":1610,"title":{},"body":{"index.html":{}}}],["expanded=false",{"_index":349,"title":{},"body":{"components/AppComponent.html":{}}}],["expanded=true",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["expiry",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["export",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Constants.html":{},"components/DashboardComponent.html":{},"injectables/DataService.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/LoginCredentials.html":{},"pipes/SearchPipe.html":{},"directives/TooltipDirective.html":{}}}],["exports",{"_index":434,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extendedtimeout",{"_index":1219,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["fa",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["false",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"injectables/LoaderService.html":{},"miscellaneous/variables.html":{}}}],["false,true",{"_index":826,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fb",{"_index":915,"title":{},"body":{"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["fetchdetails",{"_index":902,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["fetchdetails(i",{"_index":924,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["fff",{"_index":317,"title":{},"body":{"components/AppComponent.html":{}}}],["field",{"_index":883,"title":{},"body":{"injectables/DataService.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Constants.html":{},"components/DashboardComponent.html":{},"injectables/DataService.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/LoginCredentials.html":{},"pipes/SearchPipe.html":{},"directives/TooltipDirective.html":{},"coverage.html":{}}}],["files",{"_index":932,"title":{},"body":{"components/DocumentUploadComponent.html":{},"index.html":{}}}],["files[0",{"_index":1065,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["filteredtasks",{"_index":835,"title":{},"body":{"components/DashboardComponent.html":{}}}],["filteredtasks.foreach(element",{"_index":837,"title":{},"body":{"components/DashboardComponent.html":{}}}],["filtermytasks",{"_index":696,"title":{},"body":{"components/DashboardComponent.html":{}}}],["filterothertasks",{"_index":697,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fixed",{"_index":391,"title":{},"body":{"components/AppComponent.html":{}}}],["flag",{"_index":1604,"title":{},"body":{"index.html":{}}}],["flex",{"_index":338,"title":{},"body":{"components/AppComponent.html":{}}}],["flush>.list",{"_index":379,"title":{},"body":{"components/AppComponent.html":{}}}],["font",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["footer",{"_index":394,"title":{},"body":{"components/AppComponent.html":{}}}],["for(let",{"_index":1038,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["for(var",{"_index":647,"title":{},"body":{"injectables/AuthService.html":{}}}],["forkjoin",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{}}}],["forkjoin(observables",{"_index":626,"title":{},"body":{"injectables/AuthService.html":{}}}],["form",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["form.addcontrol('confirmotherdocumenttype',this.fb.control(null",{"_index":1025,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["form.addcontrol('otherdocumenttype',this.fb.control(null",{"_index":1024,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["form.form.valid",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["form.get('confirmdocumentkey').reset",{"_index":996,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["form.get('confirmdocumenttype').enable",{"_index":993,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["form.get('documentexpirydate').clearvalidators",{"_index":1034,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["form.get('documentexpirydate').disable",{"_index":1033,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["form.get('documentexpirydate').enable",{"_index":1031,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["form.get('documentexpirydate').setvalidators",{"_index":1032,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["form.get('documentkey",{"_index":994,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["form.get('documenttype').value",{"_index":992,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["form.get('file').clearvalidators",{"_index":1015,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["form.get('file').updatevalueandvalidity",{"_index":1016,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["form.removecontrol('confirmotherdocumenttype",{"_index":1029,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["form.removecontrol('otherdocumenttype",{"_index":1028,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["formarray",{"_index":910,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["formarray.controls[i].get('documenttype').value.name",{"_index":1077,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["formarray.controls[i].get(\\'documenttype\\').value.name",{"_index":1081,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["format",{"_index":935,"title":{},"body":{"components/DocumentUploadComponent.html":{},"components/DualEntryComponent.html":{}}}],["formbuilder",{"_index":912,"title":{},"body":{"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["formcontrol",{"_index":1229,"title":{},"body":{"injectables/FormService.html":{}}}],["formgroup",{"_index":916,"title":{},"body":{"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"injectables/FormService.html":{}}}],["forminvalid",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["formservice",{"_index":913,"title":{"injectables/FormService.html":{}},"body":{"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"injectables/FormService.html":{},"coverage.html":{}}}],["formsmodule",{"_index":457,"title":{},"body":{"modules/AppModule.html":{}}}],["fortawesome/fontawesome",{"_index":1553,"title":{},"body":{"dependencies.html":{}}}],["free",{"_index":1554,"title":{},"body":{"dependencies.html":{}}}],["function",{"_index":639,"title":{},"body":{"injectables/AuthService.html":{},"components/DualEntryComponent.html":{}}}],["further",{"_index":1614,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1596,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1583,"title":{},"body":{"index.html":{}}}],["getconfiguration",{"_index":870,"title":{},"body":{"injectables/DataService.html":{}}}],["getconfiguration(config",{"_index":873,"title":{},"body":{"injectables/DataService.html":{}}}],["getconfiguration(config):any",{"_index":876,"title":{},"body":{"injectables/DataService.html":{}}}],["getcountrydetailresource",{"_index":1244,"title":{},"body":{"injectables/HttpService.html":{}}}],["getcountrydetailresource():any",{"_index":1346,"title":{},"body":{"injectables/HttpService.html":{}}}],["getdistrictdetailresource",{"_index":1245,"title":{},"body":{"injectables/HttpService.html":{}}}],["getdistrictdetailresource(stateid",{"_index":1272,"title":{},"body":{"injectables/HttpService.html":{}}}],["getformarray",{"_index":944,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["getisbc",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{}}}],["getissubsidiary",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{}}}],["getisuserloggedin",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{}}}],["getothertasks",{"_index":713,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getothertasks(reload",{"_index":727,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getotp",{"_index":1361,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["getsalutationmatrix",{"_index":1246,"title":{},"body":{"injectables/HttpService.html":{}}}],["getsalutationmatrix():any",{"_index":1344,"title":{},"body":{"injectables/HttpService.html":{}}}],["getstatedetailresource",{"_index":1247,"title":{},"body":{"injectables/HttpService.html":{}}}],["getstatedetailresource(countryid",{"_index":1277,"title":{},"body":{"injectables/HttpService.html":{}}}],["getstatedetailresource(countryid):any",{"_index":1348,"title":{},"body":{"injectables/HttpService.html":{}}}],["gettaskresource",{"_index":1248,"title":{},"body":{"injectables/HttpService.html":{}}}],["gettaskresource(type",{"_index":1279,"title":{},"body":{"injectables/HttpService.html":{}}}],["gettasksforstaff",{"_index":714,"title":{},"body":{"components/DashboardComponent.html":{}}}],["gettasksforstaff(reload",{"_index":732,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getters",{"_index":591,"title":{},"body":{"injectables/AuthService.html":{}}}],["getting",{"_index":1579,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":526,"title":{},"body":{"classes/AppPage.html":{}}}],["getuserdata",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{}}}],["getvillagetowncitydetailresource",{"_index":1249,"title":{},"body":{"injectables/HttpService.html":{}}}],["getvillagetowncitydetailresource(districtid",{"_index":1285,"title":{},"body":{"injectables/HttpService.html":{}}}],["getvillagetowncitydetailresource(districtid):any",{"_index":1354,"title":{},"body":{"injectables/HttpService.html":{}}}],["global",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentUploadComponent.html":{}}}],["globalconfiguration",{"_index":878,"title":{},"body":{"injectables/DataService.html":{}}}],["globaldata",{"_index":877,"title":{},"body":{"injectables/DataService.html":{}}}],["globaldata.globalconfiguration",{"_index":879,"title":{},"body":{"injectables/DataService.html":{}}}],["go",{"_index":1616,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1622,"title":{},"body":{"modules.html":{}}}],["group",{"_index":258,"title":{},"body":{"components/AppComponent.html":{}}}],["groups",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["grow",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["h5",{"_index":863,"title":{},"body":{"components/DashboardComponent.html":{}}}],["header",{"_index":855,"title":{},"body":{"components/DashboardComponent.html":{}}}],["height",{"_index":282,"title":{},"body":{"components/AppComponent.html":{}}}],["height:100",{"_index":272,"title":{},"body":{"components/AppComponent.html":{}}}],["help",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["helpers",{"_index":484,"title":{},"body":{"modules/AppModule.html":{}}}],["helpers/error.interceptors/error.interceptors.service",{"_index":486,"title":{},"body":{"modules/AppModule.html":{}}}],["helpers/jwt.interceptors/jwt.interceptors.service",{"_index":485,"title":{},"body":{"modules/AppModule.html":{}}}],["hex2dec",{"_index":1362,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["hex2dec(s",{"_index":1369,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["hh:mm",{"_index":229,"title":{},"body":{"components/AppComponent.html":{}}}],["hide",{"_index":1412,"title":{},"body":{"injectables/LoaderService.html":{},"directives/TooltipDirective.html":{}}}],["home",{"_index":541,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["hostlistener",{"_index":1473,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["hostlistener('mouseenter",{"_index":1476,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["hostlistener('mouseleave",{"_index":1480,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["hostlisteners",{"_index":1453,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["hostpos",{"_index":1502,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["hostpos.bottom",{"_index":1516,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["hostpos.height",{"_index":1517,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["hostpos.left",{"_index":1513,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["hostpos.right",{"_index":1518,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["hostpos.top",{"_index":1510,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["hostpos.width",{"_index":1514,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["html",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["htmlelement",{"_index":1471,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["http",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{}}}],["http://localhost:4200",{"_index":1592,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":455,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":1254,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpclient,httpparams",{"_index":1297,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpclientmodule",{"_index":454,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":1205,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httphandler",{"_index":1201,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httpinterceptor",{"_index":1206,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httpparams",{"_index":1308,"title":{},"body":{"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{}}}],["httpparams()).set('iscompressionrequired",{"_index":1404,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["httprequest",{"_index":1199,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httpresponse",{"_index":1379,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["https://localhost:8443",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpservice",{"_index":50,"title":{"injectables/HttpService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"injectables/HttpService.html":{},"coverage.html":{}}}],["httpservice,private",{"_index":756,"title":{},"body":{"components/DashboardComponent.html":{}}}],["i.slice(0",{"_index":640,"title":{},"body":{"injectables/AuthService.html":{}}}],["i=0;i",{"_index":1039,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["ibl",{"_index":773,"title":{},"body":{"components/DashboardComponent.html":{}}}],["id",{"_index":777,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"injectables/HttpService.html":{}}}],["identifier",{"_index":959,"title":{},"body":{"components/DocumentUploadComponent.html":{},"coverage.html":{}}}],["identifiertypes",{"_index":894,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["identifiertypesoptions",{"_index":895,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["identity",{"_index":1060,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["identityerrormessage",{"_index":896,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["idfc",{"_index":774,"title":{},"body":{"components/DashboardComponent.html":{}}}],["idle",{"_index":464,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["idoptions",{"_index":1037,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["ids",{"_index":1078,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["if(!args)return",{"_index":1444,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["if(!this.taskdataofothers",{"_index":789,"title":{},"body":{"components/DashboardComponent.html":{}}}],["if(!this.taskdataofstaff",{"_index":761,"title":{},"body":{"components/DashboardComponent.html":{}}}],["if(!value)return",{"_index":1443,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["if(array.value",{"_index":1048,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["if(assign",{"_index":803,"title":{},"body":{"components/DashboardComponent.html":{}}}],["if(bases",{"_index":612,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(bcdashboardroles",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["if(bcdashboardroles.split(',').indexof(this.auth.userdata.roles[0].name",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["if(form.get('otherdocumenttype",{"_index":1027,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["if(matchingcontrol.value",{"_index":1174,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["if(o.hasownproperty(i",{"_index":636,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(o[i",{"_index":646,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(perfectscroll",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["if(reload",{"_index":779,"title":{},"body":{"components/DashboardComponent.html":{}}}],["if(showmessage",{"_index":780,"title":{},"body":{"components/DashboardComponent.html":{}}}],["if(this.assigntasksforstaff.length",{"_index":828,"title":{},"body":{"components/DashboardComponent.html":{}}}],["if(this.emitevent",{"_index":1116,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["if(this.formarray.controls.length",{"_index":1067,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["if(this.parentform.controls[this.name].value",{"_index":1171,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["if(this.selectallothertasks",{"_index":834,"title":{},"body":{"components/DashboardComponent.html":{}}}],["if(this.selectedidentifiers.indexof(\"both",{"_index":1054,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["if(this.selectedidentifiers.indexof(\"proofofaddress",{"_index":1062,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["if(this.selectedidentifiers.indexof(\"proofofidentity",{"_index":1055,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["if(this.showcolumn",{"_index":764,"title":{},"body":{"components/DashboardComponent.html":{}}}],["if(this.unassigntasksforstaff.length",{"_index":819,"title":{},"body":{"components/DashboardComponent.html":{}}}],["if(type.isotherdocsrequired",{"_index":1023,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["if(type.isvalidtillrequired",{"_index":1030,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["if(type.name",{"_index":968,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["if(typeof(o[i][j",{"_index":649,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(typeof(value",{"_index":660,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(value1",{"_index":655,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(value2",{"_index":658,"title":{},"body":{"injectables/AuthService.html":{}}}],["img",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"pipes/SearchPipe.html":{}}}],["import",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DataService.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoaderService.html":{},"pipes/SearchPipe.html":{},"directives/TooltipDirective.html":{}}}],["important",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{}}}],["imports",{"_index":447,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["inbox",{"_index":233,"title":{},"body":{"components/AppComponent.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"classes/Constants.html":{},"components/DashboardComponent.html":{},"injectables/DataService.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/LoginCredentials.html":{},"directives/TooltipDirective.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":245,"title":{},"body":{"components/AppComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Constants.html":{},"components/DashboardComponent.html":{},"injectables/DataService.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/LoginCredentials.html":{},"pipes/SearchPipe.html":{},"directives/TooltipDirective.html":{}}}],["inherit",{"_index":856,"title":{},"body":{"components/DashboardComponent.html":{}}}],["initdocument",{"_index":903,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["injectable",{"_index":544,"title":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoaderService.html":{},"coverage.html":{}}}],["injectables",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"overview.html":{}}}],["inline",{"_index":866,"title":{},"body":{"components/DashboardComponent.html":{}}}],["input",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"directives/TooltipDirective.html":{}}}],["input('tooltip",{"_index":1474,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["inputs",{"_index":907,"title":{},"body":{"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"directives/TooltipDirective.html":{}}}],["inset",{"_index":386,"title":{},"body":{"components/AppComponent.html":{}}}],["instanceof",{"_index":643,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/JwtInterceptor.html":{}}}],["inter",{"_index":256,"title":{},"body":{"components/AppComponent.html":{}}}],["intercept",{"_index":1196,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["intercept(req",{"_index":1371,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["intercept(request",{"_index":1198,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptor",{"_index":1193,"title":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":1194,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["interface",{"_index":1428,"title":{"interfaces/LoaderState.html":{}},"body":{"interfaces/LoaderState.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":1429,"title":{},"body":{"interfaces/LoaderState.html":{}}}],["invalid",{"_index":1076,"title":{},"body":{"components/DocumentUploadComponent.html":{},"components/DualEntryComponent.html":{}}}],["invarray",{"_index":904,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["invarray(array",{"_index":927,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["inventory",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["invertedarray",{"_index":1049,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["isaccountlocked",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["isbc",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{}}}],["isloginbuttondisabled",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["issubsidiary",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{}}}],["issubsidiary.tostring",{"_index":1322,"title":{},"body":{"injectables/HttpService.html":{}}}],["isuserloggedin",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["isuserloggedin():any",{"_index":595,"title":{},"body":{"injectables/AuthService.html":{}}}],["item",{"_index":380,"title":{},"body":{"components/AppComponent.html":{}}}],["items",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["j",{"_index":648,"title":{},"body":{"injectables/AuthService.html":{}}}],["jan",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["jlg",{"_index":240,"title":{},"body":{"components/AppComponent.html":{}}}],["jlgregular').subscribe",{"_index":960,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["jquery",{"_index":1560,"title":{},"body":{"dependencies.html":{}}}],["jsencrypt",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["jsencryptmodule",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{}}}],["jsencryptmodule.jsencrypt",{"_index":599,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(item).tolowercase().includes(args",{"_index":1447,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["jssha",{"_index":1381,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtinterceptor",{"_index":443,"title":{"interceptors/JwtInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/JwtInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["karma",{"_index":1612,"title":{},"body":{"index.html":{}}}],["key",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{},"components/DocumentUploadComponent.html":{},"components/DualEntryComponent.html":{},"injectables/FormService.html":{}}}],["key.reset",{"_index":995,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["key.setvalidators",{"_index":999,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["kyc",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["labelname",{"_index":1089,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["labelname}}s",{"_index":1192,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["lang",{"_index":670,"title":{},"body":{"classes/Constants.html":{}}}],["left",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"directives/TooltipDirective.html":{}}}],["leftbar",{"_index":372,"title":{},"body":{"components/AppComponent.html":{}}}],["leftpad",{"_index":1363,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["leftpad(str",{"_index":1374,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["left}px",{"_index":1520,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["legend",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"overview.html":{}}}],["len",{"_index":1375,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["length",{"_index":1184,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["license",{"_index":967,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["light",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["limit",{"_index":1283,"title":{},"body":{"injectables/HttpService.html":{}}}],["limit.tostring",{"_index":1330,"title":{},"body":{"injectables/HttpService.html":{}}}],["limit?:number):any",{"_index":1317,"title":{},"body":{"injectables/HttpService.html":{}}}],["link",{"_index":316,"title":{},"body":{"components/AppComponent.html":{}}}],["list",{"_index":378,"title":{},"body":{"components/AppComponent.html":{}}}],["literal",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["loader",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"interceptors/JwtInterceptor.html":{}}}],["loaderservice",{"_index":57,"title":{"injectables/LoaderService.html":{}},"body":{"components/AppComponent.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoaderService.html":{},"coverage.html":{}}}],["loaderstate",{"_index":116,"title":{"interfaces/LoaderState.html":{}},"body":{"components/AppComponent.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"coverage.html":{}}}],["loadersubject",{"_index":1409,"title":{},"body":{"injectables/LoaderService.html":{}}}],["loadersubscription",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["loading",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["loan",{"_index":251,"title":{},"body":{"components/AppComponent.html":{}}}],["loans",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["local",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{}}}],["localstorageservice",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{}}}],["log",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["logged",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["login",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["login(credentials",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(form",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["logincredentials",{"_index":32,"title":{"classes/LoginCredentials.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/HttpService.html":{},"classes/LoginCredentials.html":{},"coverage.html":{}}}],["logincredentials):any",{"_index":1303,"title":{},"body":{"injectables/HttpService.html":{}}}],["logout",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["logout():any",{"_index":633,"title":{},"body":{"injectables/AuthService.html":{}}}],["logoutresource",{"_index":1250,"title":{},"body":{"injectables/HttpService.html":{}}}],["logoutresource():any",{"_index":1312,"title":{},"body":{"injectables/HttpService.html":{}}}],["ltd",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["main",{"_index":388,"title":{},"body":{"components/AppComponent.html":{}}}],["manage",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["map",{"_index":588,"title":{},"body":{"injectables/AuthService.html":{}}}],["margin",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{}}}],["match",{"_index":1075,"title":{},"body":{"components/DocumentUploadComponent.html":{},"components/DualEntryComponent.html":{}}}],["matching",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Constants.html":{},"components/DashboardComponent.html":{},"injectables/DataService.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/LoginCredentials.html":{},"pipes/SearchPipe.html":{},"directives/TooltipDirective.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchingcontrol",{"_index":1173,"title":{},"body":{"components/DualEntryComponent.html":{},"injectables/FormService.html":{}}}],["matchingcontrol.value",{"_index":1181,"title":{},"body":{"components/DualEntryComponent.html":{},"injectables/FormService.html":{}}}],["matchingcontrol.value.length",{"_index":1182,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["matchingcontrol.value.split",{"_index":1176,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["max",{"_index":360,"title":{},"body":{"components/AppComponent.html":{}}}],["maximum",{"_index":1187,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["maxinput",{"_index":1127,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["maxlength",{"_index":1128,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["media",{"_index":351,"title":{},"body":{"components/AppComponent.html":{}}}],["mel",{"_index":237,"title":{},"body":{"components/AppComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"pipes/SearchPipe.html":{},"directives/TooltipDirective.html":{}}}],["methods",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DataService.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoaderService.html":{},"pipes/SearchPipe.html":{},"directives/TooltipDirective.html":{}}}],["min",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentUploadComponent.html":{}}}],["mindate",{"_index":1180,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["minimum",{"_index":1057,"title":{},"body":{"components/DocumentUploadComponent.html":{},"components/DualEntryComponent.html":{}}}],["mininput",{"_index":1129,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["miscellaneous",{"_index":1624,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mmm",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["mmmm",{"_index":673,"title":{},"body":{"classes/Constants.html":{}}}],["mobile",{"_index":1165,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["models/loader",{"_index":1424,"title":{},"body":{"injectables/LoaderService.html":{}}}],["module",{"_index":427,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":429,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["moment(value",{"_index":661,"title":{},"body":{"injectables/AuthService.html":{}}}],["moment.iso_8601",{"_index":662,"title":{},"body":{"injectables/AuthService.html":{}}}],["moment.momentinput",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{}}}],["more",{"_index":1615,"title":{},"body":{"index.html":{}}}],["mouseenter",{"_index":1454,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["mouseleave",{"_index":1455,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["moz",{"_index":1501,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["multi",{"_index":521,"title":{},"body":{"modules/AppModule.html":{}}}],["mustmatch",{"_index":1223,"title":{},"body":{"injectables/FormService.html":{}}}],["mustmatch(controlname",{"_index":1230,"title":{},"body":{"injectables/FormService.html":{}}}],["name",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DataService.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoaderService.html":{},"classes/LoginCredentials.html":{},"pipes/SearchPipe.html":{},"directives/TooltipDirective.html":{},"index.html":{}}}],["national",{"_index":1017,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["nav",{"_index":315,"title":{},"body":{"components/AppComponent.html":{}}}],["navbar",{"_index":311,"title":{},"body":{"components/AppComponent.html":{}}}],["navigate",{"_index":1591,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":527,"title":{},"body":{"classes/AppPage.html":{}}}],["new",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoaderService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":1200,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["next.handle(req.clone",{"_index":1386,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["next.handle(request).pipe(catcherror(err",{"_index":1209,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":475,"title":{},"body":{"modules/AppModule.html":{},"directives/TooltipDirective.html":{},"dependencies.html":{},"index.html":{}}}],["ng2",{"_index":478,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngmodule",{"_index":451,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["ngoninit",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["ngwizardconfig",{"_index":473,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngwizardmodule",{"_index":472,"title":{},"body":{"modules/AppModule.html":{}}}],["ngwizardmodule.forroot(ngwizardconfig),reactiveformsmodule,dpdatepickermodule",{"_index":518,"title":{},"body":{"modules/AppModule.html":{}}}],["ngx",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DataService.html":{},"interceptors/ErrorInterceptor.html":{},"dependencies.html":{}}}],["ngxpaginationmodule",{"_index":470,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxwebstoragemodule",{"_index":460,"title":{},"body":{"modules/AppModule.html":{}}}],["noc",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["none",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["novobank",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{}}}],["novoloanwebgui",{"_index":1581,"title":{},"body":{"index.html":{}}}],["novopay",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["null",{"_index":784,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DualEntryComponent.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"pipes/SearchPipe.html":{},"directives/TooltipDirective.html":{}}}],["null,taskid,'reassign',{staffid",{"_index":814,"title":{},"body":{"components/DashboardComponent.html":{}}}],["null,taskid,'unassign',{}).subscribe",{"_index":811,"title":{},"body":{"components/DashboardComponent.html":{}}}],["number",{"_index":736,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DualEntryComponent.html":{},"injectables/HttpService.html":{},"directives/TooltipDirective.html":{}}}],["number,associations?):any",{"_index":1306,"title":{},"body":{"injectables/HttpService.html":{}}}],["number,command",{"_index":1332,"title":{},"body":{"injectables/HttpService.html":{}}}],["number,userid?:number",{"_index":1315,"title":{},"body":{"injectables/HttpService.html":{}}}],["number12",{"_index":1178,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["numeric",{"_index":688,"title":{},"body":{"classes/Constants.html":{}}}],["o",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{},"directives/TooltipDirective.html":{}}}],["o[i",{"_index":637,"title":{},"body":{"injectables/AuthService.html":{}}}],["o[i][j",{"_index":654,"title":{},"body":{"injectables/AuthService.html":{}}}],["object",{"_index":650,"title":{},"body":{"injectables/AuthService.html":{},"classes/Constants.html":{},"components/DocumentUploadComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":1204,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["observables",{"_index":623,"title":{},"body":{"injectables/AuthService.html":{}}}],["office",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["officeid",{"_index":1280,"title":{},"body":{"injectables/HttpService.html":{}}}],["officeid.tostring",{"_index":1324,"title":{},"body":{"injectables/HttpService.html":{}}}],["officer",{"_index":1342,"title":{},"body":{"injectables/HttpService.html":{}}}],["officeresource",{"_index":1251,"title":{},"body":{"injectables/HttpService.html":{}}}],["officeresource(officeid",{"_index":1289,"title":{},"body":{"injectables/HttpService.html":{}}}],["offset",{"_index":1449,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["one",{"_index":1058,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["onfilechange",{"_index":905,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["onfilechange(files",{"_index":930,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["onmouseenter",{"_index":1477,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["onmouseleave",{"_index":1481,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["opacity",{"_index":1499,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["ops",{"_index":759,"title":{},"body":{"components/DashboardComponent.html":{}}}],["option.name",{"_index":1183,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["option[displayfield",{"_index":1119,"title":{},"body":{"components/DropdownComponent.html":{}}}],["optional",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DataService.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoaderService.html":{},"classes/LoginCredentials.html":{},"pipes/SearchPipe.html":{},"directives/TooltipDirective.html":{}}}],["options",{"_index":1090,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["optionvalue",{"_index":1091,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["order",{"_index":718,"title":{},"body":{"components/DashboardComponent.html":{},"dependencies.html":{}}}],["orderpipe",{"_index":691,"title":{},"body":{"components/DashboardComponent.html":{}}}],["organization",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["originator",{"_index":1393,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["otherdocumenttypes",{"_index":897,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["otp",{"_index":1391,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["out",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":318,"title":{},"body":{"components/AppComponent.html":{}}}],["output",{"_index":946,"title":{},"body":{"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["outputs",{"_index":1093,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["overlay",{"_index":390,"title":{},"body":{"components/AppComponent.html":{}}}],["overview",{"_index":1617,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":698,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{}}}],["package",{"_index":1548,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":1376,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["padding",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["padtotwo(number",{"_index":1177,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["page",{"_index":1619,"title":{},"body":{"index.html":{}}}],["pagination",{"_index":471,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["pan",{"_index":1003,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["parameters",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DataService.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoaderService.html":{},"classes/LoginCredentials.html":{},"pipes/SearchPipe.html":{},"directives/TooltipDirective.html":{}}}],["params",{"_index":1307,"title":{},"body":{"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{}}}],["params.append('associations',associations",{"_index":1309,"title":{},"body":{"injectables/HttpService.html":{}}}],["params.append('command",{"_index":1334,"title":{},"body":{"injectables/HttpService.html":{}}}],["params.append('context",{"_index":1336,"title":{},"body":{"injectables/HttpService.html":{}}}],["params.append('countryid",{"_index":1349,"title":{},"body":{"injectables/HttpService.html":{}}}],["params.append('districtid",{"_index":1355,"title":{},"body":{"injectables/HttpService.html":{}}}],["params.append('issubsidiary",{"_index":1321,"title":{},"body":{"injectables/HttpService.html":{}}}],["params.append('limit",{"_index":1329,"title":{},"body":{"injectables/HttpService.html":{}}}],["params.append('loanofficersonly",{"_index":1340,"title":{},"body":{"injectables/HttpService.html":{}}}],["params.append('officeid",{"_index":1323,"title":{},"body":{"injectables/HttpService.html":{}}}],["params.append('rolename','loan",{"_index":1341,"title":{},"body":{"injectables/HttpService.html":{}}}],["params.append('staffinselectedofficeonly",{"_index":1339,"title":{},"body":{"injectables/HttpService.html":{}}}],["params.append('stateid",{"_index":1352,"title":{},"body":{"injectables/HttpService.html":{}}}],["params.append('status",{"_index":1319,"title":{},"body":{"injectables/HttpService.html":{}}}],["params.append('userid",{"_index":1325,"title":{},"body":{"injectables/HttpService.html":{}}}],["params.append('verticalid",{"_index":1327,"title":{},"body":{"injectables/HttpService.html":{}}}],["parentform",{"_index":908,"title":{},"body":{"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"injectables/FormService.html":{}}}],["parentform.controls[controlname",{"_index":1234,"title":{},"body":{"injectables/FormService.html":{}}}],["parentform.get(name).errors.maxlength.requiredlength",{"_index":1188,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["parentform.get(name).errors.minlength.requiredlength",{"_index":1185,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["parsedate",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{}}}],["parsedate(key",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{}}}],["parseint(dsplit[1",{"_index":1179,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["parseint(this.elementclass",{"_index":1112,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["pass",{"_index":622,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":965,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["password",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/LoginCredentials.html":{}}}],["path",{"_index":540,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":671,"title":{},"body":{"classes/Constants.html":{},"components/DualEntryComponent.html":{}}}],["patternerror",{"_index":1130,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["perfect",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["perfectscroll",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["perfectscrollbarcomponent",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["perfectscrollbarconfiginterface",{"_index":501,"title":{},"body":{"modules/AppModule.html":{}}}],["perfectscrollbarmodule",{"_index":465,"title":{},"body":{"modules/AppModule.html":{}}}],["permutation",{"_index":1047,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["picker",{"_index":479,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ping",{"_index":509,"title":{},"body":{"modules/AppModule.html":{}}}],["pipe",{"_index":627,"title":{"pipes/SearchPipe.html":{}},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"interceptors/JwtInterceptor.html":{},"pipes/SearchPipe.html":{},"coverage.html":{},"dependencies.html":{},"overview.html":{}}}],["pipe(concatmap",{"_index":606,"title":{},"body":{"injectables/AuthService.html":{}}}],["pipe(tap((event",{"_index":1398,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["pipes",{"_index":487,"title":{},"body":{"modules/AppModule.html":{},"pipes/SearchPipe.html":{}}}],["pipetransform",{"_index":1442,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["placeholder",{"_index":1131,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["placement",{"_index":1452,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["popper.js",{"_index":1572,"title":{},"body":{"dependencies.html":{}}}],["population",{"_index":1018,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["position",{"_index":327,"title":{},"body":{"components/AppComponent.html":{}}}],["position:fixed",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["positionclass",{"_index":1218,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["post",{"_index":261,"title":{},"body":{"components/AppComponent.html":{}}}],["postalcode",{"_index":684,"title":{},"body":{"classes/Constants.html":{}}}],["posttaskresource",{"_index":1252,"title":{},"body":{"injectables/HttpService.html":{}}}],["posttaskresource(type",{"_index":1292,"title":{},"body":{"injectables/HttpService.html":{}}}],["preapproved",{"_index":250,"title":{},"body":{"components/AppComponent.html":{}}}],["predicate",{"_index":1228,"title":{},"body":{"injectables/FormService.html":{}}}],["preventduplicates",{"_index":515,"title":{},"body":{"modules/AppModule.html":{}}}],["private",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoaderService.html":{},"directives/TooltipDirective.html":{}}}],["prod",{"_index":1603,"title":{},"body":{"index.html":{}}}],["production",{"_index":1605,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["products",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["profile",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["project",{"_index":1582,"title":{},"body":{"index.html":{}}}],["promise",{"_index":529,"title":{},"body":{"classes/AppPage.html":{}}}],["proof",{"_index":1059,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["properties",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Constants.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DualEntryComponent.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/LoginCredentials.html":{},"directives/TooltipDirective.html":{}}}],["protractor",{"_index":531,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provide",{"_index":519,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":590,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoaderService.html":{}}}],["providers",{"_index":433,"title":{},"body":{"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DualEntryComponent.html":{},"overview.html":{}}}],["public",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{},"classes/Constants.html":{},"injectables/DataService.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"classes/LoginCredentials.html":{}}}],["pulledadvsearch",{"_index":699,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pulledmytasks",{"_index":700,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pulledothertasks",{"_index":701,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pvt",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["q",{"_index":702,"title":{},"body":{"components/DashboardComponent.html":{}}}],["radius",{"_index":306,"title":{},"body":{"components/AppComponent.html":{}}}],["radius:0",{"_index":281,"title":{},"body":{"components/AppComponent.html":{}}}],["rc.1",{"_index":1563,"title":{},"body":{"dependencies.html":{}}}],["re",{"_index":1191,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["reactiveformsmodule",{"_index":458,"title":{},"body":{"modules/AppModule.html":{}}}],["receipt",{"_index":213,"title":{},"body":{"components/AppComponent.html":{}}}],["reference",{"_index":1618,"title":{},"body":{"index.html":{}}}],["regex",{"_index":681,"title":{},"body":{"classes/Constants.html":{}}}],["register",{"_index":1019,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["relative",{"_index":328,"title":{},"body":{"components/AppComponent.html":{}}}],["releasedate",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["releasedate:any",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["reload",{"_index":731,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["renderer",{"_index":1458,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["renderer2",{"_index":1459,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["report",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["reports",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["req",{"_index":1373,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["req.method",{"_index":1395,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["req.params",{"_index":1397,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["req.params.set('iscompressionrequired",{"_index":1396,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["request",{"_index":1203,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["requests",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["require",{"_index":1546,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1061,"title":{},"body":{"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["reserved",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["reset",{"_index":445,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response",{"_index":1212,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/HttpService.html":{}}}],["result",{"_index":424,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Constants.html":{},"components/DashboardComponent.html":{},"injectables/DataService.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/LoginCredentials.html":{},"pipes/SearchPipe.html":{},"directives/TooltipDirective.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":426,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Constants.html":{},"components/DashboardComponent.html":{},"injectables/DataService.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/LoginCredentials.html":{},"pipes/SearchPipe.html":{},"directives/TooltipDirective.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":532,"title":{},"body":{"classes/AppPage.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{},"components/DocumentUploadComponent.html":{},"components/DualEntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"pipes/SearchPipe.html":{}}}],["returned",{"_index":1213,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["returns",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/DataService.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoaderService.html":{},"pipes/SearchPipe.html":{},"directives/TooltipDirective.html":{}}}],["rgb(85",{"_index":867,"title":{},"body":{"components/DashboardComponent.html":{}}}],["rgba(0,0,0,.5",{"_index":392,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(10",{"_index":367,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(219,223,224,1",{"_index":373,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(230",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(255",{"_index":308,"title":{},"body":{"components/AppComponent.html":{}}}],["right",{"_index":331,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/TooltipDirective.html":{}}}],["rights",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["role",{"_index":376,"title":{},"body":{"components/AppComponent.html":{}}}],["roles')[0].value",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoaderService.html":{}}}],["root'},{'name",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["router",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["routermodule",{"_index":539,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":543,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":538,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":452,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":537,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":977,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["row.addcontrol('confirmdocumentkey',this.fb.control({value",{"_index":985,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["row.addcontrol('confirmdocumenttype',this.fb.control({value",{"_index":981,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["row.addcontrol('documentexpirydate',this.fb.control(null",{"_index":988,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["row.addcontrol('documentkey',this.fb.control(null",{"_index":984,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["row.addcontrol('documenttype',this.fb.control(null",{"_index":979,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["row.addcontrol('file',this.fb.control(null",{"_index":989,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["row.addcontrol('identifiertypeid',this.fb.control(null",{"_index":987,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["run",{"_index":1588,"title":{},"body":{"index.html":{}}}],["running",{"_index":1606,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoaderService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":589,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["s",{"_index":1367,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["safeguard",{"_index":259,"title":{},"body":{"components/AppComponent.html":{}}}],["sanction",{"_index":241,"title":{},"body":{"components/AppComponent.html":{}}}],["scaffolding",{"_index":1595,"title":{},"body":{"index.html":{}}}],["scheme",{"_index":248,"title":{},"body":{"components/AppComponent.html":{}}}],["scroll",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["scrollbar",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["scrollbarstate",{"_index":1410,"title":{},"body":{"injectables/LoaderService.html":{}}}],["scrollpos",{"_index":1506,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["scrollpos}px",{"_index":1519,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["scrolltotop",{"_index":1413,"title":{},"body":{"injectables/LoaderService.html":{}}}],["search",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"pipes/SearchPipe.html":{}}}],["searchpipe",{"_index":440,"title":{"pipes/SearchPipe.html":{}},"body":{"modules/AppModule.html":{},"components/DashboardComponent.html":{},"pipes/SearchPipe.html":{},"coverage.html":{},"overview.html":{}}}],["searchtypes",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["secondary",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["select",{"_index":1072,"title":{},"body":{"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{}}}],["selectallothertasks",{"_index":703,"title":{},"body":{"components/DashboardComponent.html":{}}}],["selectallstafftasks",{"_index":704,"title":{},"body":{"components/DashboardComponent.html":{}}}],["selectedidentifiers",{"_index":898,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"directives/TooltipDirective.html":{}}}],["send",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["serve",{"_index":1589,"title":{},"body":{"index.html":{}}}],["server",{"_index":1587,"title":{},"body":{"index.html":{}}}],["set",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["setheaders",{"_index":1387,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["setperfectscroll(perfectscroll",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["setposition",{"_index":1450,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["settimeout",{"_index":1382,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["settings",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["sha",{"_index":1556,"title":{},"body":{"dependencies.html":{}}}],["shadow",{"_index":325,"title":{},"body":{"components/AppComponent.html":{}}}],["shadow:0px",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["sheet",{"_index":244,"title":{},"body":{"components/AppComponent.html":{}}}],["show",{"_index":1414,"title":{},"body":{"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"directives/TooltipDirective.html":{}}}],["showcolumn",{"_index":705,"title":{},"body":{"components/DashboardComponent.html":{}}}],["showfield",{"_index":1092,"title":{},"body":{"components/DropdownComponent.html":{}}}],["showmessage",{"_index":729,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sidebar",{"_index":354,"title":{},"body":{"components/AppComponent.html":{}}}],["signin",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["size",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["solid",{"_index":859,"title":{},"body":{"components/DashboardComponent.html":{}}}],["solutions",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["sort(array:any",{"_index":882,"title":{},"body":{"injectables/DataService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Constants.html":{},"components/DashboardComponent.html":{},"injectables/DataService.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/LoginCredentials.html":{},"pipes/SearchPipe.html":{},"directives/TooltipDirective.html":{},"index.html":{}}}],["span')).gettext",{"_index":535,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["splittaskdesc",{"_index":766,"title":{},"body":{"components/DashboardComponent.html":{}}}],["splittaskdesc.length",{"_index":769,"title":{},"body":{"components/DashboardComponent.html":{}}}],["splittaskdesc[1",{"_index":770,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/.../app.module.ts",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../document",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../jwt.interceptors.service.ts",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":536,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:105",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:34",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:36",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:37",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:38",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:44",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:52",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:63",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:67",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:93",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":446,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/create",{"_index":1528,"title":{},"body":{"coverage.html":{}}}],["src/app/components/dashboard/dashboard.component",{"_index":480,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["src/app/components/dashboard/dashboard.component.ts",{"_index":690,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:102",{"_index":737,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:120",{"_index":739,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:127",{"_index":721,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:134",{"_index":726,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:147",{"_index":725,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:160",{"_index":724,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:18",{"_index":753,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:19",{"_index":746,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:20",{"_index":754,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:21",{"_index":742,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:22",{"_index":751,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:23",{"_index":745,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:24",{"_index":748,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:25",{"_index":750,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:26",{"_index":743,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:27",{"_index":752,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:28",{"_index":747,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:29",{"_index":749,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:30",{"_index":744,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:31",{"_index":740,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:32",{"_index":719,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:37",{"_index":734,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:41",{"_index":733,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:71",{"_index":730,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/document",{"_index":888,"title":{},"body":{"components/DocumentUploadComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/dropdown/dropdown.component.ts",{"_index":1082,"title":{},"body":{"components/DropdownComponent.html":{},"coverage.html":{}}}],["src/app/components/dropdown/dropdown.component.ts:12",{"_index":1102,"title":{},"body":{"components/DropdownComponent.html":{}}}],["src/app/components/dropdown/dropdown.component.ts:13",{"_index":1099,"title":{},"body":{"components/DropdownComponent.html":{}}}],["src/app/components/dropdown/dropdown.component.ts:14",{"_index":1098,"title":{},"body":{"components/DropdownComponent.html":{}}}],["src/app/components/dropdown/dropdown.component.ts:15",{"_index":1103,"title":{},"body":{"components/DropdownComponent.html":{}}}],["src/app/components/dropdown/dropdown.component.ts:16",{"_index":1105,"title":{},"body":{"components/DropdownComponent.html":{}}}],["src/app/components/dropdown/dropdown.component.ts:17",{"_index":1100,"title":{},"body":{"components/DropdownComponent.html":{}}}],["src/app/components/dropdown/dropdown.component.ts:18",{"_index":1101,"title":{},"body":{"components/DropdownComponent.html":{}}}],["src/app/components/dropdown/dropdown.component.ts:19",{"_index":1104,"title":{},"body":{"components/DropdownComponent.html":{}}}],["src/app/components/dropdown/dropdown.component.ts:20",{"_index":1096,"title":{},"body":{"components/DropdownComponent.html":{}}}],["src/app/components/dropdown/dropdown.component.ts:21",{"_index":1097,"title":{},"body":{"components/DropdownComponent.html":{}}}],["src/app/components/dropdown/dropdown.component.ts:22",{"_index":1106,"title":{},"body":{"components/DropdownComponent.html":{}}}],["src/app/components/dropdown/dropdown.component.ts:23",{"_index":1095,"title":{},"body":{"components/DropdownComponent.html":{}}}],["src/app/components/dropdown/dropdown.component.ts:27",{"_index":1107,"title":{},"body":{"components/DropdownComponent.html":{}}}],["src/app/components/dual",{"_index":1120,"title":{},"body":{"components/DualEntryComponent.html":{},"coverage.html":{}}}],["src/app/directives/tootip.directive",{"_index":491,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/directives/tootip.directive.ts",{"_index":1448,"title":{},"body":{"directives/TooltipDirective.html":{},"coverage.html":{}}}],["src/app/directives/tootip.directive.ts:10",{"_index":1472,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/directives/tootip.directive.ts:11",{"_index":1460,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/directives/tootip.directive.ts:15",{"_index":1465,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/directives/tootip.directive.ts:19",{"_index":1466,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/directives/tootip.directive.ts:23",{"_index":1470,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/directives/tootip.directive.ts:29",{"_index":1468,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/directives/tootip.directive.ts:37",{"_index":1467,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/directives/tootip.directive.ts:58",{"_index":1469,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/directives/tootip.directive.ts:7",{"_index":1464,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/directives/tootip.directive.ts:8",{"_index":1463,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/directives/tootip.directive.ts:9",{"_index":1462,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/helpers/error.interceptors/error.interceptors.service.ts",{"_index":1195,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/helpers/error.interceptors/error.interceptors.service.ts:10",{"_index":1197,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/helpers/error.interceptors/error.interceptors.service.ts:13",{"_index":1202,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/helpers/jwt.interceptors/jwt.interceptors.service.ts",{"_index":1359,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/helpers/jwt.interceptors/jwt.interceptors.service.ts:14",{"_index":1364,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/helpers/jwt.interceptors/jwt.interceptors.service.ts:18",{"_index":1372,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/helpers/jwt.interceptors/jwt.interceptors.service.ts:53",{"_index":1377,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/helpers/jwt.interceptors/jwt.interceptors.service.ts:60",{"_index":1366,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/helpers/jwt.interceptors/jwt.interceptors.service.ts:64",{"_index":1370,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/helpers/jwt.interceptors/jwt.interceptors.service.ts:68",{"_index":1368,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/models/constants",{"_index":755,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{}}}],["src/app/models/constants.ts",{"_index":666,"title":{},"body":{"classes/Constants.html":{},"coverage.html":{}}}],["src/app/models/constants.ts:2",{"_index":674,"title":{},"body":{"classes/Constants.html":{}}}],["src/app/models/constants.ts:3",{"_index":676,"title":{},"body":{"classes/Constants.html":{}}}],["src/app/models/constants.ts:4",{"_index":677,"title":{},"body":{"classes/Constants.html":{}}}],["src/app/models/constants.ts:5",{"_index":679,"title":{},"body":{"classes/Constants.html":{}}}],["src/app/models/constants.ts:6",{"_index":689,"title":{},"body":{"classes/Constants.html":{}}}],["src/app/models/loader",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/models/loader.ts",{"_index":1430,"title":{},"body":{"interfaces/LoaderState.html":{},"coverage.html":{}}}],["src/app/models/logincredentials",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/HttpService.html":{}}}],["src/app/models/logincredentials.ts",{"_index":1431,"title":{},"body":{"classes/LoginCredentials.html":{},"coverage.html":{}}}],["src/app/models/logincredentials.ts:2",{"_index":1434,"title":{},"body":{"classes/LoginCredentials.html":{}}}],["src/app/models/logincredentials.ts:3",{"_index":1433,"title":{},"body":{"classes/LoginCredentials.html":{}}}],["src/app/pipes/search/search.pipe",{"_index":488,"title":{},"body":{"modules/AppModule.html":{},"components/DashboardComponent.html":{}}}],["src/app/pipes/search/search.pipe.ts",{"_index":1437,"title":{},"body":{"pipes/SearchPipe.html":{},"coverage.html":{}}}],["src/app/pipes/search/search.pipe.ts:8",{"_index":1441,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["src/app/services/auth/auth.service",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["src/app/services/auth/auth.service.ts",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth/auth.service.ts:120",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:17",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:18",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:19",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:20",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:25",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:29",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:33",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:37",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:41",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:83",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:95",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/data/data.service",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentUploadComponent.html":{}}}],["src/app/services/data/data.service.ts",{"_index":869,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["src/app/services/data/data.service.ts:12",{"_index":874,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/data/data.service.ts:8",{"_index":872,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/form/form.service",{"_index":950,"title":{},"body":{"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["src/app/services/form/form.service.ts",{"_index":1221,"title":{},"body":{"injectables/FormService.html":{},"coverage.html":{}}}],["src/app/services/form/form.service.ts:11",{"_index":1227,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/services/form/form.service.ts:21",{"_index":1231,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/services/form/form.service.ts:7",{"_index":1224,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/services/http/http.service",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{}}}],["src/app/services/http/http.service.ts",{"_index":1236,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["src/app/services/http/http.service.ts:107",{"_index":1274,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http/http.service.ts:11",{"_index":1255,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http/http.service.ts:116",{"_index":1286,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http/http.service.ts:124",{"_index":1270,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http/http.service.ts:15",{"_index":1268,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http/http.service.ts:20",{"_index":1258,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http/http.service.ts:25",{"_index":1291,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http/http.service.ts:32",{"_index":1266,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http/http.service.ts:37",{"_index":1288,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http/http.service.ts:42",{"_index":1284,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http/http.service.ts:60",{"_index":1294,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http/http.service.ts:70",{"_index":1262,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http/http.service.ts:78",{"_index":1259,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http/http.service.ts:87",{"_index":1276,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http/http.service.ts:92",{"_index":1271,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/http/http.service.ts:99",{"_index":1278,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/services/loader/loader.service",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"interceptors/JwtInterceptor.html":{}}}],["src/app/services/loader/loader.service.ts",{"_index":1408,"title":{},"body":{"injectables/LoaderService.html":{},"coverage.html":{}}}],["src/app/services/loader/loader.service.ts:10",{"_index":1423,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/services/loader/loader.service.ts:11",{"_index":1422,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/services/loader/loader.service.ts:12",{"_index":1415,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/services/loader/loader.service.ts:16",{"_index":1420,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/services/loader/loader.service.ts:19",{"_index":1418,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/services/loader/loader.service.ts:23",{"_index":1417,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/services/loader/loader.service.ts:27",{"_index":1419,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1543,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1544,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1545,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["staffid",{"_index":822,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/HttpService.html":{}}}],["stage",{"_index":242,"title":{},"body":{"components/AppComponent.html":{}}}],["started",{"_index":1580,"title":{"index.html":{}},"body":{}}],["state.show",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["stateid",{"_index":1275,"title":{},"body":{"injectables/HttpService.html":{}}}],["statements",{"_index":1523,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"classes/Constants.html":{}}}],["status",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"injectables/HttpService.html":{}}}],["status[0",{"_index":1318,"title":{},"body":{"injectables/HttpService.html":{}}}],["status[1",{"_index":1320,"title":{},"body":{"injectables/HttpService.html":{}}}],["stored",{"_index":1600,"title":{},"body":{"index.html":{}}}],["str",{"_index":1378,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["str.length",{"_index":1405,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["str.length).join(pad",{"_index":1407,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["string",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{},"classes/Constants.html":{},"components/DashboardComponent.html":{},"injectables/DataService.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"classes/LoginCredentials.html":{},"directives/TooltipDirective.html":{}}}],["string):any",{"_index":1300,"title":{},"body":{"injectables/HttpService.html":{}}}],["string,context",{"_index":1335,"title":{},"body":{"injectables/HttpService.html":{}}}],["string,value",{"_index":659,"title":{},"body":{"injectables/AuthService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["sub",{"_index":844,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{}}}],["subject",{"_index":621,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoaderService.html":{}}}],["subject/behaviour",{"_index":620,"title":{},"body":{"injectables/AuthService.html":{}}}],["submitted",{"_index":909,"title":{},"body":{"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["subscription",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["subsidiary",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["success",{"_index":787,"title":{},"body":{"components/DashboardComponent.html":{}}}],["support",{"_index":1620,"title":{},"body":{"modules.html":{}}}],["suppressscrollx",{"_index":502,"title":{},"body":{"modules/AppModule.html":{}}}],["svg",{"_index":865,"title":{},"body":{"components/DashboardComponent.html":{},"modules.html":{}}}],["switch(type.name",{"_index":997,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["system",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["table",{"_index":857,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1547,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":1380,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["task",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"injectables/HttpService.html":{}}}],["task.eta",{"_index":847,"title":{},"body":{"components/DashboardComponent.html":{}}}],["task.officename",{"_index":851,"title":{},"body":{"components/DashboardComponent.html":{}}}],["task.taskdescription",{"_index":852,"title":{},"body":{"components/DashboardComponent.html":{}}}],["task.tasksubtype",{"_index":849,"title":{},"body":{"components/DashboardComponent.html":{}}}],["task.tasktype",{"_index":848,"title":{},"body":{"components/DashboardComponent.html":{}}}],["task.vertical",{"_index":850,"title":{},"body":{"components/DashboardComponent.html":{}}}],["taskdataofothers",{"_index":706,"title":{},"body":{"components/DashboardComponent.html":{}}}],["taskdataofstaff",{"_index":707,"title":{},"body":{"components/DashboardComponent.html":{}}}],["taskid",{"_index":722,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/HttpService.html":{}}}],["tasks",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["tenantid",{"_index":1388,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["test",{"_index":1609,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1608,"title":{},"body":{"index.html":{}}}],["text",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["textnode",{"_index":1493,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["th",{"_index":858,"title":{},"body":{"components/DashboardComponent.html":{}}}],["theme",{"_index":474,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["theme.arrows",{"_index":503,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["this._http.get",{"_index":1301,"title":{},"body":{"injectables/HttpService.html":{}}}],["this._http.post",{"_index":1304,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.agelimit",{"_index":1163,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["this.assigntasksforstaff",{"_index":798,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.assigntasksforstaff.foreach(element",{"_index":829,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.assigntasksforstaff.indexof(taskid",{"_index":804,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.assigntasksforstaff.push(element.id",{"_index":838,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.assigntasksforstaff.push(taskid",{"_index":806,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.assigntasksforstaff.splice(index",{"_index":805,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.auth.issubsidiary,25).subscribe",{"_index":793,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.auth.isuserloggedin",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.login(this.logincredentials).subscribe",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.logout",{"_index":1215,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.auth.logout().subscribe(data",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.userdata",{"_index":1384,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["this.auth.userdata.roles[0].name.indexof(\"central",{"_index":758,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.auth.userdata.sessionkey",{"_index":1385,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["this.auth.userdata.staffid",{"_index":823,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.auth.userdata.staffid}).subscribe",{"_index":815,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.auth.userdata.userid",{"_index":792,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.auth.userdata.userid.tostring",{"_index":1394,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["this.authenticationfailed",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["this.baseurl}/authentication",{"_index":1305,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.baseurl}/authentication/logout",{"_index":1313,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.baseurl}/clients/template",{"_index":1343,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.baseurl}/codes/codevalues/${codename",{"_index":1337,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.baseurl}/configurations/${id",{"_index":1311,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.baseurl}/countrydetail",{"_index":1347,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.baseurl}/crypt/${task",{"_index":1302,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.baseurl}/districtdetail",{"_index":1353,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.baseurl}/offices/${officeid",{"_index":1310,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.baseurl}/salutationmatrix",{"_index":1345,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.baseurl}/staff${staffid",{"_index":1358,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.baseurl}/statedetail",{"_index":1350,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.baseurl}/tasks${type",{"_index":1331,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.baseurl}/villagetowncitydetail",{"_index":1356,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.bc",{"_index":593,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.checkrolefordashboard(this.global.getconfiguration('bc",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["this.create",{"_index":1483,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.currentsearchtype",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["this.currentuser",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["this.currentuserdata",{"_index":592,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentuserdata,data3[0",{"_index":632,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.datepickerconfig.min",{"_index":955,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["this.datepipe.transform",{"_index":956,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["this.delay",{"_index":1489,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.delay}ms",{"_index":1500,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.displayfield",{"_index":1108,"title":{},"body":{"components/DropdownComponent.html":{}}}],["this.documenttypes",{"_index":961,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["this.documenttypes.foreach(type",{"_index":962,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["this.dualname",{"_index":1153,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["this.el.nativeelement.getboundingclientrect",{"_index":1503,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.elementclass",{"_index":1111,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["this.fb.array([this.initdocument",{"_index":954,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["this.fb.control(null",{"_index":1114,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["this.fb.group",{"_index":978,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["this.filtermytasks",{"_index":783,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.filterothertasks",{"_index":800,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.form.conditionalvalidator((this.mininput",{"_index":1159,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["this.form.conditionalvalidator(this.global.getconfiguration('is_kyc_upload_required')[0].enabled",{"_index":990,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["this.form.conditionalvalidator(this.labelname",{"_index":1164,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["this.form.conditionalvalidator(this.maxlength",{"_index":1155,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["this.form.conditionalvalidator(this.pattern",{"_index":1157,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["this.form.conditionalvalidator(this.required",{"_index":1115,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["this.form.mustmatch('documentkey",{"_index":986,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["this.form.mustmatch('documenttype",{"_index":983,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["this.form.mustmatch('otherdocumenttype",{"_index":1026,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["this.form.mustmatch(this.name",{"_index":1168,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["this.formarray.controls[i",{"_index":991,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["this.formarray.controls[i].patchvalue({file",{"_index":1064,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["this.formarray.push(this.initdocument",{"_index":1066,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["this.formarray.removeat(i",{"_index":1068,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["this.forminvalid",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["this.getothertasks(true,bulktasksassign.length",{"_index":832,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getothertasks(true,false",{"_index":816,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getothertasks(true,false,false",{"_index":813,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getotp",{"_index":1392,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["this.gettasksforstaff(true,bulktasksunassign.length",{"_index":825,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.gettasksforstaff(true,false",{"_index":817,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.gettasksforstaff(true,false,false",{"_index":833,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.gettasksforstaff(true,false,true",{"_index":812,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.global.getconfiguration('voter_id_max_length')[0].value",{"_index":1011,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["this.hide",{"_index":1482,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.http.authentication",{"_index":604,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.codevaluesresource('any",{"_index":972,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["this.http.codevaluesresource('customer",{"_index":958,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["this.http.codevaluesresource('customeridentifiertype').subscribe",{"_index":975,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["this.http.configurationresource",{"_index":625,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.cryptoresource('getpublicrsakey').pipe(concatmap((data1",{"_index":597,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.gettaskresource('role',this.auth.userdata.roles[0].name,null",{"_index":790,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.http.gettaskresource('staff',this.auth.userdata.staffid,null,[\"assigned\",\"suspended\"]).subscribe",{"_index":762,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.http.logoutresource().pipe(map((data",{"_index":634,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.officeresource(data2.officeid",{"_index":624,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.posttaskresource",{"_index":810,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.http.posttaskresource(\"bulkreassign\",null,null,null,bulktasksassign).subscribe(data",{"_index":831,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.http.posttaskresource(\"bulkunassign\",null,null,null,bulktasksunassign).subscribe(data",{"_index":824,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.identifiertypes",{"_index":976,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["this.identifiertypesoptions[i][this.selectedidentifiers[i]].name",{"_index":1053,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["this.identityerrormessage",{"_index":1056,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["this.invarray(array.value",{"_index":1050,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["this.isaccountlocked",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isloginbuttondisabled",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isuserloggedin",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["this.labelname",{"_index":1161,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["this.loader.addscrollbarstate(this.scroll",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loader.hide",{"_index":1400,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["this.loader.loaderstate.subscribe((state",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loader.show",{"_index":1383,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["this.loadersubject.asobservable",{"_index":1421,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.loadersubject.next",{"_index":1425,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.loadersubscription",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadersubscription.unsubscribe",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loading",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["this.local.retrieve('bases",{"_index":611,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.local.retrieve('configurations').globalconfiguration.filter(function(element",{"_index":880,"title":{},"body":{"injectables/DataService.html":{}}}],["this.local.store('bases",{"_index":614,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.local.store('configurations",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["this.logincredentials",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["this.logout",{"_index":619,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.maxinput",{"_index":1160,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["this.name",{"_index":1154,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["this.office",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["this.offset",{"_index":1512,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.order.transform(this.taskdataofothers",{"_index":797,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.order.transform(this.taskdataofstaff",{"_index":775,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.otherdocumenttypes",{"_index":974,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["this.parentform",{"_index":1169,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["this.parentform.addcontrol('documents",{"_index":953,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["this.parentform.addcontrol(this.dualname",{"_index":1167,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["this.parentform.addcontrol(this.name",{"_index":1113,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["this.parentform.controls[this.dualname].disable",{"_index":1170,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["this.parentform.controls[this.dualname].enable",{"_index":1172,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["this.parentform.controls[this.name].valuechanges.subscribe",{"_index":1117,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["this.parentform.get(\"documents",{"_index":952,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["this.parsedate(i",{"_index":657,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.parsedate(j",{"_index":653,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.password",{"_index":1436,"title":{},"body":{"classes/LoginCredentials.html":{}}}],["this.placement",{"_index":1496,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.pulledmytasks",{"_index":788,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.pulledothertasks",{"_index":802,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.renderer.addclass(this.tooltip",{"_index":1485,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.renderer.appendchild",{"_index":1491,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.renderer.appendchild(document.body",{"_index":1494,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.renderer.appendchild(this.el.nativeelement",{"_index":1495,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.renderer.createelement('span",{"_index":1490,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.renderer.createtext(this.tooltiptitle",{"_index":1492,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.renderer.removechild(document.body",{"_index":1488,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.renderer.removeclass(this.tooltip",{"_index":1486,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.renderer.setstyle(this.tooltip",{"_index":1497,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.router.navigate",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["this.router.navigate(['/home",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["this.scroll",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["this.scrollbarstate",{"_index":1426,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.scrollbarstate.directiveref.scrollto(0,0",{"_index":1427,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.search.transform(this.taskdataofothers",{"_index":836,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.search.transform(this.taskdataofstaff",{"_index":839,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.searchtypes",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["this.selectallothertasks",{"_index":799,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.selectallstafftasks",{"_index":782,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.selectedidentifiers[i",{"_index":1052,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["this.sessiontimedout",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["this.setposition",{"_index":1484,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.show",{"_index":1479,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.showcolumn",{"_index":757,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.showfield",{"_index":1109,"title":{},"body":{"components/DropdownComponent.html":{}}}],["this.subsidiary",{"_index":594,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.taskdataofothers",{"_index":794,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.taskdataofothers.foreach(element",{"_index":796,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.taskdataofstaff",{"_index":763,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.taskdataofstaff.foreach(element",{"_index":765,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.toastr.error",{"_index":1216,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.toastr.success",{"_index":785,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.tooltip",{"_index":1478,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.tooltip.getboundingclientrect",{"_index":1505,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.traverse(json.parse(atob(bases",{"_index":613,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.traverse(o[i",{"_index":645,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.traverse(o[i][j",{"_index":651,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.unassigntasksforstaff",{"_index":781,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.unassigntasksforstaff.foreach(element",{"_index":820,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.unassigntasksforstaff.indexof(taskid",{"_index":807,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.unassigntasksforstaff.push(element.id",{"_index":840,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.unassigntasksforstaff.push(taskid",{"_index":809,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.unassigntasksforstaff.splice(index",{"_index":808,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.useridle.ontimeout().subscribe",{"_index":617,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.useridle.resettimer",{"_index":635,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.useridle.startwatching",{"_index":616,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userloggedin",{"_index":596,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.username",{"_index":1435,"title":{},"body":{"classes/LoginCredentials.html":{}}}],["this.validateaadhaar",{"_index":1013,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["this.validatephonenumber",{"_index":1166,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["this.valuechange.emit(this.parentform.controls[this.name].value",{"_index":1118,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["throwerror",{"_index":1207,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(err",{"_index":1220,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["till",{"_index":1070,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["timeout",{"_index":508,"title":{},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{}}}],["toast",{"_index":514,"title":{},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{}}}],["toastr",{"_index":469,"title":{},"body":{"modules/AppModule.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"dependencies.html":{}}}],["toastrmodule",{"_index":468,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservice",{"_index":717,"title":{},"body":{"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["todo",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["toggler",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["toggleselection",{"_index":715,"title":{},"body":{"components/DashboardComponent.html":{}}}],["toggleselection(taskid",{"_index":735,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tooltip",{"_index":422,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"directives/TooltipDirective.html":{}}}],["tooltipdirective",{"_index":421,"title":{"directives/TooltipDirective.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"directives/TooltipDirective.html":{},"coverage.html":{},"overview.html":{}}}],["tooltippos",{"_index":1504,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["tooltippos.height",{"_index":1511,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["tooltippos.width",{"_index":1515,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["tooltiptitle",{"_index":1475,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["top",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"directives/TooltipDirective.html":{}}}],["transaction",{"_index":257,"title":{},"body":{"components/AppComponent.html":{}}}],["transform",{"_index":1438,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["transform(value",{"_index":1439,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["transition",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"directives/TooltipDirective.html":{}}}],["transparent",{"_index":860,"title":{},"body":{"components/DashboardComponent.html":{}}}],["traverse",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{}}}],["traverse(o",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["true",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoaderService.html":{},"miscellaneous/variables.html":{}}}],["true).isvalid",{"_index":663,"title":{},"body":{"injectables/AuthService.html":{}}}],["true,closebutton",{"_index":516,"title":{},"body":{"modules/AppModule.html":{}}}],["true}),ngxpaginationmodule",{"_index":517,"title":{},"body":{"modules/AppModule.html":{}}}],["tslib",{"_index":1575,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Constants.html":{},"components/DashboardComponent.html":{},"injectables/DataService.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/FormService.html":{},"injectables/HttpService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoaderService.html":{},"interfaces/LoaderState.html":{},"classes/LoginCredentials.html":{},"pipes/SearchPipe.html":{},"directives/TooltipDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.context.split",{"_index":1036,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["type.id",{"_index":1051,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["type.isotherdocsrequired",{"_index":970,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["type.ispasswordrequired",{"_index":971,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["type.isvalidtillrequired",{"_index":963,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["type.label",{"_index":1079,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["type.name",{"_index":964,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["typeof",{"_index":638,"title":{},"body":{"injectables/AuthService.html":{}}}],["typeof(o[i])==\"object",{"_index":642,"title":{},"body":{"injectables/AuthService.html":{}}}],["types",{"_index":1074,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["unassign",{"_index":716,"title":{},"body":{"components/DashboardComponent.html":{}}}],["unassign(taskid",{"_index":738,"title":{},"body":{"components/DashboardComponent.html":{}}}],["unassigned",{"_index":786,"title":{},"body":{"components/DashboardComponent.html":{}}}],["unassigned\",\"suspended\"],this.showcolumn,this.auth.userdata.officeid",{"_index":791,"title":{},"body":{"components/DashboardComponent.html":{}}}],["unassigntasksforstaff",{"_index":708,"title":{},"body":{"components/DashboardComponent.html":{}}}],["undefined",{"_index":1110,"title":{},"body":{"components/DropdownComponent.html":{}}}],["unique",{"_index":1069,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["unit",{"_index":1607,"title":{},"body":{"index.html":{}}}],["unsecured",{"_index":238,"title":{},"body":{"components/AppComponent.html":{}}}],["up",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["upload",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentUploadComponent.html":{}}}],["upload'},{'name",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["upload.component",{"_index":498,"title":{},"body":{"modules/AppModule.html":{}}}],["upload.component.css",{"_index":890,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["upload.component.html",{"_index":891,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["upload.component.ts",{"_index":889,"title":{},"body":{"components/DocumentUploadComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["upload.component.ts:149",{"_index":933,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["upload.component.ts:17",{"_index":917,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["upload.component.ts:18",{"_index":918,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["upload.component.ts:187",{"_index":928,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["upload.component.ts:198",{"_index":921,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["upload.component.ts:20",{"_index":938,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["upload.component.ts:21",{"_index":942,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["upload.component.ts:214",{"_index":931,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["upload.component.ts:218",{"_index":919,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["upload.component.ts:22",{"_index":939,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["upload.component.ts:222",{"_index":923,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["upload.component.ts:23",{"_index":940,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["upload.component.ts:24",{"_index":937,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["upload.component.ts:28",{"_index":943,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["upload.component.ts:29",{"_index":941,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["upload.component.ts:31",{"_index":945,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["upload.component.ts:33",{"_index":914,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["upload.component.ts:38",{"_index":929,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["upload.component.ts:65",{"_index":926,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["upload.component.ts:81",{"_index":925,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["upload/document",{"_index":497,"title":{},"body":{"modules/AppModule.html":{},"components/DocumentUploadComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["useclass",{"_index":520,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":463,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["userdata",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":1281,"title":{},"body":{"injectables/HttpService.html":{}}}],["userid.tostring",{"_index":1326,"title":{},"body":{"injectables/HttpService.html":{}}}],["useridle",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{}}}],["useridlemodule",{"_index":461,"title":{},"body":{"modules/AppModule.html":{}}}],["useridlemodule.forroot({idle",{"_index":505,"title":{},"body":{"modules/AppModule.html":{}}}],["useridleservice",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{}}}],["userloggedin",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/LoginCredentials.html":{}}}],["users",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["v2.3.19.0",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["valid",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentUploadComponent.html":{}}}],["validateaadhaar",{"_index":906,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["validatephonenumber",{"_index":1126,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["validator",{"_index":1226,"title":{},"body":{"injectables/FormService.html":{}}}],["validator(formcontrol",{"_index":1233,"title":{},"body":{"injectables/FormService.html":{}}}],["validatorfn",{"_index":934,"title":{},"body":{"components/DocumentUploadComponent.html":{},"components/DualEntryComponent.html":{},"injectables/FormService.html":{}}}],["validators",{"_index":948,"title":{},"body":{"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["validators.maxlength(30",{"_index":1022,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["validators.maxlength(this.maxlength",{"_index":1156,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["validators.pattern('^((([a",{"_index":1004,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["validators.pattern('^(?!0{20})[\\d]{20",{"_index":1020,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["validators.pattern('^(?!0{28})[\\d]{28",{"_index":1014,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["validators.pattern('^(?!0{5,})[\\w\\\\\\/\\s",{"_index":1021,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["validators.pattern('^([a",{"_index":1008,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["validators.pattern('^[a",{"_index":1000,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["validators.pattern(this.pattern",{"_index":1158,"title":{},"body":{"components/DualEntryComponent.html":{}}}],["validators.required",{"_index":980,"title":{},"body":{"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["value",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Constants.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"pipes/SearchPipe.html":{},"directives/TooltipDirective.html":{},"miscellaneous/variables.html":{}}}],["value.filter(function(item",{"_index":1446,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["value1",{"_index":652,"title":{},"body":{"injectables/AuthService.html":{}}}],["value2",{"_index":656,"title":{},"body":{"injectables/AuthService.html":{}}}],["valuechange",{"_index":1094,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{}}}],["var",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"interceptors/JwtInterceptor.html":{}}}],["variable",{"_index":1526,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1625,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vault",{"_index":236,"title":{},"body":{"components/AppComponent.html":{}}}],["verification",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["version",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["vertical",{"_index":845,"title":{},"body":{"components/DashboardComponent.html":{}}}],["verticalid",{"_index":1282,"title":{},"body":{"injectables/HttpService.html":{}}}],["verticalid.tostring",{"_index":1328,"title":{},"body":{"injectables/HttpService.html":{}}}],["verticalid?:number",{"_index":1316,"title":{},"body":{"injectables/HttpService.html":{}}}],["via",{"_index":1611,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild('perfectscroll",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentUploadComponent.html":{},"components/DropdownComponent.html":{},"components/DualEntryComponent.html":{},"injectables/LoaderService.html":{},"directives/TooltipDirective.html":{}}}],["voter",{"_index":1007,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["webkit",{"_index":1498,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["webstorage",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{},"dependencies.html":{}}}],["width",{"_index":313,"title":{},"body":{"components/AppComponent.html":{}}}],["window.pageyoffset",{"_index":1507,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["window.settimeout",{"_index":1487,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["wizard",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["wrapper",{"_index":361,"title":{},"body":{"components/AppComponent.html":{}}}],["wrapper.toggled",{"_index":355,"title":{},"body":{"components/AppComponent.html":{}}}],["yellow",{"_index":293,"title":{},"body":{"components/AppComponent.html":{}}}],["yes",{"_index":1264,"title":{},"body":{"injectables/HttpService.html":{},"pipes/SearchPipe.html":{}}}],["yyyy",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"classes/Constants.html":{}}}],["z",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"classes/Constants.html":{}}}],["z0",{"_index":1009,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["z]{1",{"_index":1006,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["z]{1}\\d{7",{"_index":1001,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["z]{5})\\d{4})[a",{"_index":1005,"title":{},"body":{"components/DocumentUploadComponent.html":{}}}],["za",{"_index":682,"title":{},"body":{"classes/Constants.html":{},"components/DocumentUploadComponent.html":{}}}],["zone.js",{"_index":1577,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":444,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clicked\n                            \n                            \n                                currentSearchType\n                            \n                            \n                                currentUser\n                            \n                            \n                                formInvalid\n                            \n                            \n                                isLoginButtonDisabled\n                            \n                            \n                                isUserLoggedIn\n                            \n                            \n                                    Private\n                                loaderSubscription\n                            \n                            \n                                loading\n                            \n                            \n                                loginCredentials\n                            \n                            \n                                office\n                            \n                            \n                                releasedate\n                            \n                            \n                                    Private\n                                scroll\n                            \n                            \n                                searchTypes\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkRoleForDashboard\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    perfectScroll\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, http: HttpService, local: LocalStorageService, global: DataService, router: Router, loader: LoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        local\n                                                  \n                                                        \n                                                                    LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        global\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkRoleForDashboard\n                        \n                        \n                    \n                \n            \n            \n                \ncheckRoleForDashboard(bcDashBoardRoles)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bcDashBoardRoles\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(form: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clicked\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentSearchType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formInvalid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoginButtonDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isUserLoggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loaderSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginCredentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoginCredentials\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            office\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            releasedate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : '12-Jan-2021'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scroll\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PerfectScrollbarComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : '(Version: novobank-v2.3.19.0)'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        perfectScroll\n                    \n                \n\n\n                \n                    \n                        setperfectScroll(perfectScroll)\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:39\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            perfectScroll\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { LoginCredentials } from 'src/app/models/LoginCredentials';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { HttpService } from 'src/app/services/http/http.service';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { DataService } from 'src/app/services/data/data.service';\nimport { Router } from '@angular/router';\nimport { LoaderService } from 'src/app/services/loader/loader.service';\nimport { LoaderState } from 'src/app/models/Loader';\nimport { Subscription } from 'rxjs';\nimport { PerfectScrollbarComponent } from 'ngx-perfect-scrollbar';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n\n    loginCredentials: LoginCredentials;\n    isUserLoggedIn: Boolean = false;\n    // authenticationFailed: any = false;\n    isLoginButtonDisabled: Boolean = false;\n    // isAccountLocked: any = false;\n    formInvalid: Boolean = false;\n    searchTypes: any = [];\n    currentSearchType: any;\n    version: any = '(Version: novobank-v2.3.19.0)';\n    releasedate:any = '12-Jan-2021';\n    clicked :Boolean = false;\n    currentUser : any = {};\n    office :any = {};\n    loading : boolean = false;\n    private loaderSubscription : Subscription;\n    private scroll: PerfectScrollbarComponent;\n    @ViewChild('perfectScroll', { static: false }) set perfectScroll (perfectScroll: PerfectScrollbarComponent){\n      if(perfectScroll){\n        this.scroll = perfectScroll\n        this.loader.addScrollbarState(this.scroll);\n      }\n    };\n    \n  \n    constructor(private auth : AuthService, private http: HttpService, \n      private local: LocalStorageService, private global: DataService, private router: Router,\n      private loader : LoaderService) {\n    }\n  \n    ngOnInit(): void {\n      this.loginCredentials = new LoginCredentials('', '');\n      this.router.navigate(['']);\n      this.searchTypes = [ 'Clients', 'KYC', 'Groups' , 'Loans'];\n      this.currentSearchType = 'Loans';\n      \n      this.loaderSubscription = this.loader.loaderState.subscribe((state: LoaderState) => {\n           this.loading = state.show;\n      });\n    }\n\n    ngOnDestroy() {\n      this.loaderSubscription.unsubscribe();\n    }\n  \n    login(form: { form: { valid: any; }; }): any {\n        // this.authenticationFailed = false;\n        // this.sessionTimedout = false;\n        // this.isAccountLocked = false;\n        if (form.form.valid) {\n            this.isLoginButtonDisabled = true;\n            this.formInvalid = false;\n            this.auth.login(this.loginCredentials).subscribe( data =>{\n                   this.loginCredentials = new LoginCredentials('', '');\n                   this.local.store('configurations', data[0]);\n                   this.isLoginButtonDisabled = false;\n                   this.checkRoleForDashboard(this.global.getConfiguration('bc-dashboard-task-roles')[0].value);\n                   this.isUserLoggedIn =  this.auth.isUserLoggedIn;\n                   this.currentUser = data[1];\n                   this.office = data[2];\n                   console.log(\"Logged In\");\n            },error =>{\n                   this.isLoginButtonDisabled = false;\n                   this.loginCredentials = new LoginCredentials('', '');\n                   console.log(\"error\", error);\n            })\n        }else{\n          this.formInvalid =  true;\n        }       \n    }\n\n    checkRoleForDashboard(bcDashBoardRoles):any{\n        if(bcDashBoardRoles){\n          if(bcDashBoardRoles.split(',').indexOf(this.auth.userData.roles[0].name) > -1){\n            this.router.navigate(['/home']);\n          }else{\n            this.router.navigate(['/home']);\n          }\n        }else{\n          // TODO\n        }\n    }\n\n    logout(){\n      this.auth.logout().subscribe(data =>{\n        this.isUserLoggedIn = this.auth.isUserLoggedIn;\n      },error =>{\n\n      })\n    }\n  }\n\n    \n\n    \n        \n\n  \n    \n    \n      Enter Username & Password\n    \n    \n      \n      \n      SignIn\n    \n    \n      &copy; 2014 Novopay Solutions Pvt. Ltd. All Rights Reserved.\n        {{ version }}\n        {{ releasedate }}\n      \n    \n  \n\n\n\n  \n  \n    \n    \n      \n    \n     {{ version }}\n    \n      \n      \n    \n    \n      \n        \n          \n            \n              \n                {{currentSearchType}}\n              \n                {{search}}\n              \n            \n            \n              \n              \n            \n          \n        \n        \n          Admin\n          \n            Organization\n            System\n            Products\n            Users\n            Business Correspondent\n            Manage NOC\n          \n        \n        \n          Accounitng\n        \n        \n          Reports\n          \n            All\n            Clients\n            Loans\n            Accounting\n            Aadhaar Enrollment Expiry Report\n          \n        \n        \n          Inventory\n          \n            Send Items to Branch\n            All Requests\n            Receipt Books\n          \n        \n        \n          {{currentUser.username}}\n          \n            \n              {{currentUser.firstname}}&nbsp;{{currentUser.lastname}}\n              Logged in as {{currentUser.roles[0].name}}\n            \n            Help\n            Profile\n            Settings\n            Log Out\n          \n        \n      \n    \n  \n  \n  \n    \n    \n      \n        \n         -->\n        \n          \n            {{currentUser.firstname}}&nbsp;{{currentUser.lastname}}\n          \n          {{currentUser.roles[0].name}}\n          {{currentUser.officeName}}({{office.branchCode}})\n          {{date | date:'dd-MMM-yyyy hh:mm'}} -->\n        \n      \n      \n        \n          Dashboard\n          Create Client\n          Checker Inbox & Tasks\n          Document Vault\n          MEL Unsecured\n          Subsidiary JLG\n          Loans at sanction stage\n          Collection Sheet\n          Individual Collection Sheet\n          Collection Status\n          Clients\n          Groups\n          Centers\n          Scheme Creation\n          MEL Preapproved Loan Upload\n          Loan End Use Check\n          Inter Branch Transaction\n          Group Safeguard Cancellation\n          Post Disbursement EDD Change Document\n            Verification\n        \n      \n    \n    \n    \n    \n      \n        \n          \n        \n      \n    \n    \n  \n\n\n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .login-container{\n    position:fixed;\n    background-color: var(--blue);\n    height:100%;\n    color:#fff;\n    top: 0;\n    bottom: 0;\n}\n.login-form{\n    margin: auto;\n    top: 12%;\n}\n.login-form input{\n    border-radius:0;\n    height: 2.85rem;\n    margin-top: 1.42em;\n}\n.login-form .login-btn{\n    color:#424242;\n    margin-top: 30px;\n    padding: 10px;\n    font-size: 1.14rem;\n    background-color:  var(--yellow) !important;\n    transition-duration: 1000ms;\n}\n.login-form .login-btn:hover {\n    background-color: rgba(230, 190, 0, 1);\n    transition-duration: 500ms;\n}\n.login-error {\n    border: 1px dashed #ccc;\n    padding: 5px;\n    color:#fff;\n    border-radius: 4px;\n    background: rgba(255, 255, 255, 0.1);\n  }\n  .navbar-brand{\n    width: 118px;\n    padding-top: 0;\n  }\n  .nav-link {\n    color: #fff !important;\n  }\n  .btn-outline-secondary {\n    background-color: var(--yellow);\n    border-radius: 0px;\n    color: var(--black);\n    border-color: var(--yellow);\n  }\n  .form-control{\n    border-radius: 0px;\n  }\n  .btn:focus {\n    box-shadow: none !important;\n  }\n  .search {\n    position: relative;\n  }\n  .fa-search{\n    position: absolute;\n    right : 2%;\n    top: 23%;\n    color: var(--darkGrey);\n    font-size: 1.2em;\n  }\n  a.nav-link{\n    color: #fff !important;\n  }\n  .right-navbar-collapse{\n    flex-grow: 0;\n    padding: 0px 10px;\n  }\n  .navbar-light .navbar-toggler {\n    color: #fff;\n    border-color:transparent;\n    padding: 0px;\n  }\n  a[aria-expanded=true] .fa-chevron-circle-down {\n    display: none;\n  }\n  a[aria-expanded=false] .fa-chevron-circle-up {\n    display: none;\n  }\n  @media (min-width: 768px) {\n    #sidebar-wrapper.toggled {\n        display: none;\n    }\n    #content.toggled {\n      width: 100%;\n    }\n    #content {\n      width: 82vw;\n    }\n  }  \n  @media (max-width: 768px) {\n    #sidebar-wrapper {\n        display: none;\n    }\n    #sidebar-wrapper.toggled {\n        display: block;\n        min-width: 40vw\n    }\n  }  \n  #sidebar-wrapper{\n      width: 18vw;\n      background-color: var(--blue);\n      min-width: 18vw;\n      box-shadow:0px 0px 25px 0px rgba(10, 10, 10, 0.119608);\n  }\n  .img-circle{\n      border-radius: 50%;\n      width: 50%;\n      margin: auto;\n  }\n  .leftbar-profile-info{\n    background: rgba(219,223,224,1);\n    padding: 15px 0px;\n  }\n  .profile-name {\n    color: var(--blue);\n    font-size: 1rem;\n}\n.profile-role{\n    font-size: 0.85rem;\n}\n.list-group-flush>.list-group-item {\n    border-width: 0px;\n}\na.list-group-item-action:focus, a.list-group-item-action:hover,a.list-group-item-action.active{\n  /* background-color:transparent!important; */\n  box-shadow: 0px 0px 25px 0px rgba(10, 10, 10, 0.119608) inset;\n  z-index: 0;\n  color: #fff;\n}\n.list-group-flush>.list-group-item {\n  background-color: var(--blue);\n  color: #fff;\n}\nmain{\n  padding: 1rem 1.5rem;\n  width: 100%;\n}\n.loader-overlay {\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0,0,0,.5);\n  z-index: 500000;\n}\n.footer{\n  position:fixed;\n  text-align: center;\n  width: 100%;\n  left: 0;\n  bottom:0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Enter Username & Password                          SignIn              © 2014 Novopay Solutions Pvt. Ltd. All Rights Reserved.        {{ version }}        {{ releasedate }}                                       {{ version }}                                                                                          {{currentSearchType}}                              {{search}}                                                                                                                  Admin                      Organization            System            Products            Users            Business Correspondent            Manage NOC                                    Accounitng                          Reports                      All            Clients            Loans            Accounting            Aadhaar Enrollment Expiry Report                                    Inventory                      Send Items to Branch            All Requests            Receipt Books                                    {{currentUser.username}}                                    {{currentUser.firstname}} {{currentUser.lastname}}              Logged in as {{currentUser.roles[0].name}}                        Help            Profile            Settings            Log Out                                                                 -->                              {{currentUser.firstname}} {{currentUser.lastname}}                    {{currentUser.roles[0].name}}          {{currentUser.officeName}}({{office.branchCode}})          {{date | date:\\'dd-MMM-yyyy hh:mm\\'}} -->                                      Dashboard          Create Client          Checker Inbox & Tasks          Document Vault          MEL Unsecured          Subsidiary JLG          Loans at sanction stage          Collection Sheet          Individual Collection Sheet          Collection Status          Clients          Groups          Centers          Scheme Creation          MEL Preapproved Loan Upload          Loan End Use Check          Inter Branch Transaction          Group Safeguard Cancellation          Post Disbursement EDD Change Document            Verification                                                                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateClientComponent', 'selector': 'app-create-client'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentUploadComponent', 'selector': 'app-document-upload'},{'name': 'DropdownComponent', 'selector': 'app-dropdown'},{'name': 'DualEntryComponent', 'selector': 'dual-entry'}];\n    var DIRECTIVES = [{'name': 'TooltipDirective', 'selector': '[tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCreateClientComponent\n\nCreateClientComponent\n\nAppModule -->\n\nCreateClientComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nDocumentUploadComponent\n\nDocumentUploadComponent\n\nAppModule -->\n\nDocumentUploadComponent->AppModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nAppModule -->\n\nDropdownComponent->AppModule\n\n\n\n\n\nDualEntryComponent\n\nDualEntryComponent\n\nAppModule -->\n\nDualEntryComponent->AppModule\n\n\n\n\n\nSearchPipe\n\nSearchPipe\n\nAppModule -->\n\nSearchPipe->AppModule\n\n\n\n\n\nTooltipDirective\n\nTooltipDirective\n\nAppModule -->\n\nTooltipDirective->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CreateClientComponent\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            DocumentUploadComponent\n                        \n                        \n                            DropdownComponent\n                        \n                        \n                            DualEntryComponent\n                        \n                        \n                            SearchPipe\n                        \n                        \n                            TooltipDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ErrorInterceptor\n                        \n                        \n                            JwtInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n//modules\nimport { HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxWebstorageModule } from 'ngx-webstorage';\nimport { UserIdleModule } from 'angular-user-idle';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { NgxPaginationModule } from 'ngx-pagination'; \nimport { NgWizardModule, NgWizardConfig, THEME } from 'ng-wizard';\nimport { DpDatePickerModule } from 'ng2-date-picker';\n \n\n//components\nimport { DashboardComponent } from 'src/app/components/dashboard/dashboard.component';\nimport { CreateClientComponent } from './components/create-client/create-client.component';\n\n//helpers\nimport { JwtInterceptor } from './helpers/jwt.interceptors/jwt.interceptors.service';\nimport { ErrorInterceptor } from './helpers/error.interceptors/error.interceptors.service';\n\n// pipes\nimport { SearchPipe } from 'src/app/pipes/search/search.pipe';\nimport { DatePipe } from '@angular/common';\n\nimport { TooltipDirective } from 'src/app/directives/tootip.directive';\n\nimport { DualEntryComponent } from './components/dual-entry/dual-entry.component';\nimport { DropdownComponent } from './components/dropdown/dropdown.component';\nimport { DocumentUploadComponent } from './components/document-upload/document-upload.component';\n\n// const DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n//   suppressScrollX: true\n// }\n\nconst ngWizardConfig: NgWizardConfig = {\n  theme: THEME.arrows\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    CreateClientComponent,\n    SearchPipe,\n    DualEntryComponent,\n    DropdownComponent,\n    DocumentUploadComponent,\n    TooltipDirective\n  ],\n  imports: [\n    BrowserModule,AppRoutingModule,HttpClientModule,FormsModule,NgxWebstorageModule.forRoot(),\n    UserIdleModule.forRoot({idle: 30 * 60 , timeout: 10, ping: 15 * 60}),PerfectScrollbarModule,\n    BrowserAnimationsModule,ToastrModule.forRoot({timeOut: 10000,positionClass: 'toast-top-right',\n    preventDuplicates: true,closeButton : true}),NgxPaginationModule, \n    NgWizardModule.forRoot(ngWizardConfig),ReactiveFormsModule,DpDatePickerModule \n  ],\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: JwtInterceptor,\n    multi: true\n  },\n  { provide: HTTP_INTERCEPTORS, \n    useClass: ErrorInterceptor,\n     multi: true },\n  DatePipe\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getTitleText\n                            \n                            \n                                    Async\n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  async navigateTo(): Promise {\n    return browser.get(browser.baseUrl);\n  }\n\n  async getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from 'src/app/components/dashboard/dashboard.component';\nimport { CreateClientComponent } from './components/create-client/create-client.component';\n\nconst routes: Routes = [\n  { path : 'home' , component : DashboardComponent },\n  { path : 'createclient', component : CreateClientComponent }\n];\n\n@NgModule({\n  // declarations: [\n  //   DashboardComponent,\n  //   CreateClientComponent\n  // ],\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bc\n                            \n                            \n                                    Private\n                                currentUserData\n                            \n                            \n                                    Private\n                                subsidiary\n                            \n                            \n                                    Private\n                                userLoggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Private\n                                parseDate\n                            \n                            \n                                    Private\n                                traverse\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userData\n                                \n                                \n                                    isBC\n                                \n                                \n                                    isSubsidiary\n                                \n                                \n                                    isUserLoggedIn\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpService, local: LocalStorageService, userIdle: UserIdleService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/auth.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        local\n                                                  \n                                                        \n                                                                    LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userIdle\n                                                  \n                                                        \n                                                                    UserIdleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(credentials: LoginCredentials)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                LoginCredentials\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            parseDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseDate(key: string, value: moment.MomentInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            moment.MomentInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            traverse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    traverse(o)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    o\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            bc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentUserData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subsidiary\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userLoggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userData\n                    \n                \n\n                \n                    \n                        getuserData()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth/auth.service.ts:25\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isBC\n                    \n                \n\n                \n                    \n                        getisBC()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth/auth.service.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isSubsidiary\n                    \n                \n\n                \n                    \n                        getisSubsidiary()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth/auth.service.ts:33\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isUserLoggedIn\n                    \n                \n\n                \n                    \n                        getisUserLoggedIn()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth/auth.service.ts:37\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { HttpService } from 'src/app/services/http/http.service';\nimport * as JsEncryptModule from 'jsencrypt';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { UserIdleService } from 'angular-user-idle';\nimport * as moment from 'moment';\nimport { forkJoin } from 'rxjs';\nimport { concatMap, map } from 'rxjs/operators';\nimport { LoginCredentials } from 'src/app/models/LoginCredentials';\nimport { Router } from '@angular/router';\n\n@Injectable({ providedIn: 'root' })\n\nexport class AuthService {\n    \n    private currentUserData : any = {};\n    private bc : boolean = false;\n    private subsidiary : boolean = false;\n    private userLoggedIn : boolean = false;\n\n    constructor(private http: HttpService, private local: LocalStorageService,\n        private userIdle : UserIdleService, private router: Router) {}\n    //getters\n    public get userData(): any {\n        return this.currentUserData;\n    }\n\n    public get isBC(): any {\n        return this.bc;\n    }\n\n    public get isSubsidiary(): any {\n        return this.subsidiary;\n    }\n\n    public get isUserLoggedIn():any{\n        return this.userLoggedIn;\n    }\n    \n    public login(credentials: LoginCredentials) {\n        return this.http.cryptoResource('getpublicrsakey').pipe(concatMap((data1: any) =>{\n            let encrypt = new JsEncryptModule.JSEncrypt();\n            encrypt.setPublicKey(data1.keyValue);\n            let encryptedPassword = encrypt.encrypt(credentials.password + ':' + new Date().getTime());\n            if (encryptedPassword) {\n                return this.http.authentication({ username: credentials.username, password: encryptedPassword })\n            }else{\n                //TODO\n            }  \n        })).pipe(concatMap( (data2 : any)=>{\n            if( data2.authenticated ){\n                this.currentUserData = data2;\n                if (!data2.shouldRenewPassword){\n                    let bases = this.local.retrieve('bases');\n                    if(bases) { // TODO\n                        bases = this.traverse(JSON.parse(atob(bases)));\n                        this.local.store('bases', btoa(JSON.stringify(bases)));\n                    }else{\n                        //TODO\n                    }\n                    this.userIdle.startWatching();\n                    this.userIdle.onTimeout().subscribe(() => {\n                        console.log('Time is up!');\n                        this.logout(); //Use subject/behaviour subject to pass user is logged out to app component\n                    }); \n                    const observables = [this.http.officeResource(data2.officeId), this.http.configurationResource()];\n                    return forkJoin(observables); \n                }else{\n                    //TODO\n                }\n            }else{\n                //TODO\n            }\n        })).pipe( map ((data3: any) =>{\n            this.bc = data3[0].officeLevel.name.toLowerCase().indexOf(\"bc\") > -1 ? true : false;\n            this.subsidiary = data3[0].subsidiary;\n            this.userLoggedIn = true;\n            return [data3[1], this.currentUserData,data3[0]];\n        }))\n    }\n\n    public logout():any{\n        return this.http.logoutResource().pipe(map((data: any) =>{\n            this.currentUserData = {};\n            this.bc = false;\n            this.subsidiary = false;\n            this.userLoggedIn = false;\n            this.userIdle.resetTimer();\n            this.router.navigate(['/']);\n            return true;\n        }))\n    }\n\n    private traverse (o) {\n        for (var i in o) {\n          if(o.hasOwnProperty(i) && o[i] && i  != 'this' && typeof o[i] != \"function\" && i.slice(0, 1) != '$' && i.slice(0, 1) != '_') {\n              if (typeof(o[i])==\"object\" && !(o[i] instanceof Array)) {\n                this.traverse(o[i]);\n              }else if(o[i] instanceof Array) {\n                for(var j in o[i]) {\n                  if(typeof(o[i][j]) == \"object\")\n                    this.traverse(o[i][j])\n                  else {\n                    var value1 = this.parseDate(j, o[i][j]);\n                    if(value1)\n                      o[i][j] = value1;\n                  }\n                }\n              }else {\n                var value2 = this.parseDate(i, o[i]);\n                if(value2)\n                  o[i] = value2;\n              }\n          }\n        }\n        return o;\n    };\n  \n    private parseDate (key: string,value: moment.MomentInput) {\n        if(typeof(value) == 'string'  && moment(value, moment.ISO_8601, true).isValid()) {\n          return new Date(value);\n        } else\n          return false;\n    };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Constants.html":{"url":"classes/Constants.html","title":"class - Constants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Constants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Constants.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                dateFormat1\n                            \n                            \n                                    Static\n                                dateFormat2\n                            \n                            \n                                    Static\n                                datePickerFormat\n                            \n                            \n                                    Static\n                                lang\n                            \n                            \n                                    Static\n                                pattern\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            dateFormat1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"dd MMMM yyyy\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Constants.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            dateFormat2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"dd/MM/yyyy\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Constants.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            datePickerFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"DD/MM/yyyy\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Constants.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            lang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"en\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Constants.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            pattern\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        alphabets :{\n            regex: '^[a-zA-Z]+$',\n            error: 'Must be alphabetic'\n        },\n        postalcode : {\n            regex: '^[0-9]{6}$',\n            error: 'Must be 6 digit numeric'\n        }\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Constants.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Constants{\n    public static dateFormat1: string = \"dd MMMM yyyy\";\n    public static dateFormat2: string = \"dd/MM/yyyy\";\n    public static datePickerFormat: string = \"DD/MM/yyyy\";\n    public static lang : string = \"en\";\n    public static pattern = {\n        alphabets :{\n            regex: '^[a-zA-Z]+$',\n            error: 'Must be alphabetic'\n        },\n        postalcode : {\n            regex: '^[0-9]{6}$',\n            error: 'Must be 6 digit numeric'\n        }\n    };\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/dashboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            SearchPipe\n                            OrderPipe\n                \n            \n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                assignTasksForStaff\n                            \n                            \n                                dateFormat\n                            \n                            \n                                filterMytasks\n                            \n                            \n                                filterOthertasks\n                            \n                            \n                                p\n                            \n                            \n                                pulledAdvSearch\n                            \n                            \n                                pulledMytasks\n                            \n                            \n                                pulledOthertasks\n                            \n                            \n                                q\n                            \n                            \n                                selectAllOtherTasks\n                            \n                            \n                                selectAllStaffTasks\n                            \n                            \n                                showColumn\n                            \n                            \n                                taskDataOfOthers\n                            \n                            \n                                taskDataOfStaff\n                            \n                            \n                                unAssignTasksForStaff\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                assign\n                            \n                            \n                                bulkSelection\n                            \n                            \n                                bulkTaskAssign\n                            \n                            \n                                bulkTaskUnAssign\n                            \n                            \n                                getOtherTasks\n                            \n                            \n                                getTasksforStaff\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleSelection\n                            \n                            \n                                unAssign\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpService, auth: AuthService, toastr: ToastrService, search: SearchPipe, order: OrderPipe)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dashboard/dashboard.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        search\n                                                  \n                                                        \n                                                                    SearchPipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        order\n                                                  \n                                                        \n                                                                    OrderPipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            assign\n                        \n                        \n                    \n                \n            \n            \n                \nassign(taskId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/dashboard.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bulkSelection\n                        \n                        \n                    \n                \n            \n            \n                \nbulkSelection(assign: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/dashboard.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    assign\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bulkTaskAssign\n                        \n                        \n                    \n                \n            \n            \n                \nbulkTaskAssign()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/dashboard.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bulkTaskUnAssign\n                        \n                        \n                    \n                \n            \n            \n                \nbulkTaskUnAssign()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/dashboard.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOtherTasks\n                        \n                        \n                    \n                \n            \n            \n                \ngetOtherTasks(reload: boolean, bulk: boolean, showMessage: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/dashboard.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reload\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bulk\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    showMessage\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTasksforStaff\n                        \n                        \n                    \n                \n            \n            \n                \ngetTasksforStaff(reload: boolean, bulk: boolean, showMessage: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/dashboard.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reload\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bulk\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    showMessage\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/dashboard.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSelection\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSelection(taskId: Number, assign: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/dashboard.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskId\n                                    \n                                                Number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    assign\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unAssign\n                        \n                        \n                    \n                \n            \n            \n                \nunAssign(taskId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/dashboard.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            assignTasksForStaff\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : Constants.dateFormat1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterMytasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterOthertasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            p\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pulledAdvSearch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pulledMytasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pulledOthertasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            q\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectAllOtherTasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectAllStaffTasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showColumn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskDataOfOthers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskDataOfStaff\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unAssignTasksForStaff\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { HttpService } from 'src/app/services/http/http.service';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { Constants } from 'src/app/models/Constants';\nimport { ToastrService } from 'ngx-toastr';\nimport { SearchPipe } from 'src/app/pipes/search/search.pipe';\nimport { OrderPipe } from 'ngx-order-pipe';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n  providers: [ SearchPipe, OrderPipe ]\n})\nexport class DashboardComponent implements OnInit {\n\n  taskDataOfStaff :any;\n  pulledMytasks : boolean = false;\n  unAssignTasksForStaff : any = [];\n  dateFormat : any = Constants.dateFormat1;\n  showColumn : boolean = false;\n  p: number = 1;\n  q: number = 1;\n  selectAllStaffTasks : boolean = false;\n  filterMytasks : string;\n  taskDataOfOthers : any;\n  pulledOthertasks : boolean = false;\n  selectAllOtherTasks : boolean = false;\n  filterOthertasks : string;\n  assignTasksForStaff : any = [];\n  pulledAdvSearch : boolean = false;\n\n  constructor(private http: HttpService,private auth : AuthService, private toastr: ToastrService,\n    private search: SearchPipe, private order : OrderPipe) { }\n\n  ngOnInit(): void {\n    this.showColumn = this.auth.userData.roles[0].name.indexOf(\"Central Ops\") > -1 ? true : false;\n  }\n\n  getTasksforStaff(reload: boolean, bulk: boolean,showMessage : boolean) :any{\n    if(!this.taskDataOfStaff || reload){\n     this.http.getTaskResource('staff',this.auth.userData.staffId,null,[\"assigned\",\"suspended\"]).subscribe( data =>{\n          this.taskDataOfStaff = data;\n          if(this.showColumn) {\n            this.taskDataOfStaff.forEach(element => {\n              let splitTaskDesc = element.taskDescription.split(\"->\");\n              element.groupName = splitTaskDesc.length > 0 ? splitTaskDesc[1] : ' ';\n              element.vertical = element.isSubsidiary ? 'IBL' : 'IDFC'\n            }); \n            this.taskDataOfStaff = this.order.transform(this.taskDataOfStaff, ['etaDate','groupName', 'id'], true);\n          }else{\n            this.taskDataOfStaff = this.order.transform(this.taskDataOfStaff, 'etaDate', true);\n          }\n          if(reload){\n            if(showMessage){\n              this.unAssignTasksForStaff = [];\n              this.selectAllStaffTasks = false;\n              this.filterMytasks = null;\n              this.toastr.success( bulk ? 'Tasks have been unassigned' : 'Task has been unassigned', 'Success');\n            }\n          }else{\n            this.pulledMytasks = !this.pulledMytasks;\n          }\n      });\n    }else{\n      this.pulledMytasks = !this.pulledMytasks;\n    }\n  }\n\n  getOtherTasks(reload: boolean, bulk: boolean, showMessage : boolean) :any{\n    if(!this.taskDataOfOthers || reload){\n     this.http.getTaskResource('role',this.auth.userData.roles[0].name,null,\n                  [\"unassigned\",\"suspended\"],this.showColumn,this.auth.userData.officeId, \n                  this.auth.userData.userId, this.auth.isSubsidiary,25).subscribe( data =>{\n          this.taskDataOfOthers = data.pageItems;\n          if(this.showColumn) {\n            this.taskDataOfOthers.forEach(element => {\n              let splitTaskDesc = element.taskDescription.split(\"->\");\n              element.groupName = splitTaskDesc.length > 0 ? splitTaskDesc[1] : ' ';\n            }); \n            this.taskDataOfOthers = this.order.transform(this.taskDataOfOthers, ['etaDate','groupName', 'id'], true);\n          }else{\n            this.taskDataOfOthers = this.order.transform(this.taskDataOfOthers, 'etaDate', true);\n          }\n          if(reload){\n            if(showMessage){\n              this.assignTasksForStaff = [];\n              this.selectAllOtherTasks = false;\n              this.filterOthertasks = null;\n              this.toastr.success( bulk ? 'Tasks have been assigned' : 'Task has been assigned', 'Success');\n            }\n          }else{\n            this.pulledOthertasks = !this.pulledOthertasks;\n          }\n     });\n    }else{\n      this.pulledOthertasks = !this.pulledOthertasks;\n    }\n  }\n\n  toggleSelection(taskId : Number, assign : boolean){\n    if(assign){\n      let index = this.assignTasksForStaff.indexOf(taskId);\n      if (index > -1) {\n        this.assignTasksForStaff.splice(index , 1);\n      }else{\n        this.assignTasksForStaff.push(taskId);\n      }\n    }else{\n      let index = this.unAssignTasksForStaff.indexOf(taskId);\n      if (index > -1) {\n        this.unAssignTasksForStaff.splice(index , 1);\n      }else{\n        this.unAssignTasksForStaff.push(taskId);\n      }\n    }\n  }\n\n  unAssign(taskId) {\n    this.http.postTaskResource( null, null,taskId,'unassign',{}).subscribe( data=>{\n      this.getTasksforStaff(true,false,true);\n      this.getOtherTasks(true,false,false);\n    });\n  };\n\n  assign(taskId) {\n    this.http.postTaskResource( null, null,taskId,'reassign',{staffId : this.auth.userData.staffId}).subscribe( data=>{\n      this.getOtherTasks(true,false, true);\n      this.getTasksforStaff(true,false, false);\n    });\n  };\n\n  bulkTaskUnAssign(){\n    let bulkTasksUnAssign = [];\n    if(this.unAssignTasksForStaff.length){\n      this.unAssignTasksForStaff.forEach(element => {\n        bulkTasksUnAssign.push({taskId: element, staffId: this.auth.userData.staffId })\n      });\n      this.http.postTaskResource(\"bulkunassign\",null,null,null,bulkTasksUnAssign).subscribe(data =>{\n        this.getTasksforStaff(true,bulkTasksUnAssign.length > 1 ? true : false,true);\n        this.getOtherTasks(true,false,false)\n      });\n    }\n  }\n\n  bulkTaskAssign(){\n    let bulkTasksAssign = [];\n    if(this.assignTasksForStaff.length){\n      this.assignTasksForStaff.forEach(element => {\n        bulkTasksAssign.push({taskId: element, staffId: this.auth.userData.staffId })\n      });\n      this.http.postTaskResource(\"bulkreassign\",null,null,null,bulkTasksAssign).subscribe(data =>{\n        this.getOtherTasks(true,bulkTasksAssign.length > 1 ? true : false,true);\n        this.getTasksforStaff(true,false,false)\n      });\n    }\n  }\n\n  bulkSelection (assign: boolean) {\n    if(assign){\n      if(this.selectAllOtherTasks) {\n        let filteredTasks = this.search.transform(this.taskDataOfOthers, this.filterOthertasks);\n        filteredTasks.forEach(element => {\n          this.assignTasksForStaff.push(element.id);\n        });\n      }else{\n        this.assignTasksForStaff = [];\n      } \n    }else{\n      if( this.selectAllStaffTasks ) {\n        let filteredTasks = this.search.transform(this.taskDataOfStaff, this.filterMytasks);\n        filteredTasks.forEach(element => {\n          this.unAssignTasksForStaff.push(element.id);\n        });\n      }else{\n        this.unAssignTasksForStaff = [];\n      }\n    }\n  };\n\n}\n\n    \n\n    \n        \n    Dashboard\n\n\n    \n        \n            \n                \n                Advanced Search \n                \n                    \n                    \n                \n\n            \n        \n    \n\n\n    \n        \n            \n                \n                My Tasks\n                    4 -->\n                 \n                \n                \n                    \n                 \n                \n                \n                \n                    \n                    \n                \n            \n            \n                    \n                        \n                            \n                                \n                                ETA\n                                Task Type\n                                Task Sub-Type\n                                Vertical\n                                Office\n                                Task Description\n                                Unassign\n                            \n                        \n                        \n                            \n                                 -1\">\n                                {{task.eta | date: dateFormat }}\n                                {{task.taskType}}\n                                {{task.taskSubType}}\n                                {{task.vertical}}\n                                {{task.officeName}}\n                                {{task.taskDescription}}\n                                \n                            \n                        \n                    \n                    \n                        You do not have any tasks assigned to you currently!\n                    \n                    \n                        \n                        \n                            Bulk Unassign\n                        \n                        \n                            \n                        \n                        \n                    \n            \n        \n    \n\n\n    \n        \n            \n                \n                Other Tasks\n                \n                \n                    \n                 \n                \n                \n                \n                    \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            ETA\n                            Task Type\n                            Task Sub-Type\n                            Vertical\n                            Office\n                            Task Description\n                            Assign\n                        \n                    \n                    \n                        \n                             -1\">\n                            {{task.eta | date: dateFormat }}\n                            {{task.taskType}}\n                            {{task.taskSubType}}\n                            {{task.vertical}}\n                            {{task.officeName}}\n                            {{task.taskDescription}}\n                            \n                        \n                    \n                \n                \n                    You do not have any tasks assigned to you currently!\n                \n                \n                    \n                    \n                        Bulk Assign\n                    \n                    \n                        \n                    \n                    \n                \n        \n        \n    \n\n    \n\n    \n                \n                    ./dashboard.component.css\n                \n                .card-header{\n  background-color: inherit;\n  border: none !important;\n  align-items: center;\n}\n.table th {\n  border-top: 1px solid transparent;\n}\n.alert-info{\n  margin: 15px;\n}\n.bulkassign{\n  text-align: left;\n}\nh5{\n  font-size: 1.3rem !important;\n}\n.svg-inline--fa {\n  color: rgb(85, 85, 85) !important;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Dashboard                                                        Advanced Search                                                                                                                                                         My Tasks                    4 -->                                                                                                                                                                                                                                                                                                                                                              ETA                                Task Type                                Task Sub-Type                                Vertical                                Office                                Task Description                                Unassign                                                                                                                                         -1\">                                {{task.eta | date: dateFormat }}                                {{task.taskType}}                                {{task.taskSubType}}                                {{task.vertical}}                                {{task.officeName}}                                {{task.taskDescription}}                                                                                                                                                    You do not have any tasks assigned to you currently!                                                                                                                    Bulk Unassign                                                                                                                                                                                                                                Other Tasks                                                                                                                                                                                                                                                                                                                         ETA                            Task Type                            Task Sub-Type                            Vertical                            Office                            Task Description                            Assign                                                                                                                     -1\">                            {{task.eta | date: dateFormat }}                            {{task.taskType}}                            {{task.taskSubType}}                            {{task.vertical}}                            {{task.officeName}}                            {{task.taskDescription}}                                                                                                                            You do not have any tasks assigned to you currently!                                                                                                Bulk Assign                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateClientComponent', 'selector': 'app-create-client'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentUploadComponent', 'selector': 'app-document-upload'},{'name': 'DropdownComponent', 'selector': 'app-dropdown'},{'name': 'DualEntryComponent', 'selector': 'dual-entry'}];\n    var DIRECTIVES = [{'name': 'TooltipDirective', 'selector': '[tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/data/data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getConfiguration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(local: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/data/data.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        local\n                                                  \n                                                        \n                                                                    LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getConfiguration\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getConfiguration(config)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data/data.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { LocalStorageService } from 'ngx-webstorage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private local: LocalStorageService) { }\n\n  public getConfiguration(config):any{\n      let globalData = { globalConfiguration : Array };\n      return globalData.globalConfiguration = this.local.retrieve('configurations').globalConfiguration.filter(function(element){\n                return element.name == config;\n        })\n  }\n\n  // public sort(array:any, field: string){\n  //   array.sort((a: any, b: any) => {\n  //       if (a[field]  b[field]) {\n  //         return -1;\n  //       } else {\n  //         return 0;\n  //       }\n  //   });\n  //   return array;\n  // }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentUploadComponent.html":{"url":"components/DocumentUploadComponent.html","title":"component - DocumentUploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DocumentUploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/document-upload/document-upload.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-document-upload\n            \n\n            \n                styleUrls\n                ./document-upload.component.css\n            \n\n\n\n            \n                templateUrl\n                ./document-upload.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                datePickerConfig\n                            \n                            \n                                documenttypes\n                            \n                            \n                                identifiertypes\n                            \n                            \n                                identifiertypesOptions\n                            \n                            \n                                identityErrorMessage\n                            \n                            \n                                otherdocumenttypes\n                            \n                            \n                                selectedIdentifiers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addDocument\n                            \n                            \n                                addIdentifier\n                            \n                            \n                                deleteDocument\n                            \n                            \n                                fetchDetails\n                            \n                            \n                                initDocument\n                            \n                            \n                                invArray\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFileChange\n                            \n                            \n                                validateAadhaar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                parentform\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    formArray\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, form: FormService, http: HttpService, global: DataService, datePipe: DatePipe)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/document-upload/document-upload.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        form\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        global\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        datePipe\n                                                  \n                                                        \n                                                                        DatePipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        parentform\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/document-upload/document-upload.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submitted\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/document-upload/document-upload.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addDocument\n                        \n                        \n                    \n                \n            \n            \n                \naddDocument()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/document-upload/document-upload.component.ts:218\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addIdentifier\n                        \n                        \n                    \n                \n            \n            \n                \naddIdentifier(i, value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/document-upload/document-upload.component.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteDocument\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteDocument(i)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/document-upload/document-upload.component.ts:222\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchDetails\n                        \n                        \n                    \n                \n            \n            \n                \nfetchDetails(i)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/document-upload/document-upload.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initDocument\n                        \n                        \n                    \n                \n            \n            \n                \ninitDocument()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/document-upload/document-upload.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            invArray\n                        \n                        \n                    \n                \n            \n            \n                \ninvArray(array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/document-upload/document-upload.component.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/document-upload/document-upload.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFileChange\n                        \n                        \n                    \n                \n            \n            \n                \nonFileChange(files: any, i)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/document-upload/document-upload.component.ts:214\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateAadhaar\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateAadhaar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/document-upload/document-upload.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ValidatorFn\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datePickerConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    format: Constants.datePickerFormat,\n    min : ''\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/document-upload/document-upload.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            documenttypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/document-upload/document-upload.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            identifiertypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/document-upload/document-upload.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            identifiertypesOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/document-upload/document-upload.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            identityErrorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/document-upload/document-upload.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            otherdocumenttypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/document-upload/document-upload.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedIdentifiers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/document-upload/document-upload.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formArray\n                    \n                \n\n                \n                    \n                        getformArray()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/document-upload/document-upload.component.ts:31\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { FormService } from 'src/app/services/form/form.service';\nimport { HttpService } from 'src/app/services/http/http.service';\nimport { DataService } from 'src/app/services/data/data.service';\nimport { Constants } from 'src/app/models/Constants';\nimport { DatePipe } from '@angular/common';\ndeclare var $:any;\n\n@Component({\n  selector: 'app-document-upload',\n  templateUrl: './document-upload.component.html',\n  styleUrls: ['./document-upload.component.css']\n})\nexport class DocumentUploadComponent implements OnInit {\n\n  @Input() parentform : FormGroup;\n  @Input() submitted: boolean;\n\n  documenttypes : any ;\n  otherdocumenttypes : any;\n  identifiertypes : any;\n  identifiertypesOptions = [];\n  datePickerConfig = {\n    format: Constants.datePickerFormat,\n    min : ''\n  }\n  selectedIdentifiers : any = [];\n  identityErrorMessage : string;\n\n  get formArray() {\n    return this.parentform.get(\"documents\") as FormArray;\n  }\n\n  constructor(private fb: FormBuilder, private form : FormService, private http: HttpService,\n    private global: DataService, private datePipe: DatePipe) { }\n\n  ngOnInit(): void {\n    this.parentform.addControl('documents' ,this.fb.array([this.initDocument()]) );\n    this.datePickerConfig.min = this.datePipe.transform( new Date(), Constants.dateFormat2);\n\n    this.http.codeValuesResource('Customer Identifier', 'jlgRegular').subscribe( data =>{\n      this.documenttypes = data;\n      this.documenttypes.forEach(type => {\n          type.isValidTillRequired = (type.name == 'Passport' || \n                                      type.name == 'Drivers License' || \n                                      type.name == 'Aadhaar Enrollment Number') ? true : false;\n          if(type.name == 'AnyOtherDocument'){\n              type.isOtherDocsRequired = true;\n              type.isPasswordRequired = true;\n          } else {\n              type.isOtherDocsRequired = false;\n              type.isPasswordRequired = false;\n          }\n      });\n    })\n    this.http.codeValuesResource('Any Other Documents').subscribe( data =>{\n      this.otherdocumenttypes = data;\n    })\n    this.http.codeValuesResource('CustomerIdentifierType').subscribe( data =>{\n      this.identifiertypes = data;\n    })\n  }\n\n  initDocument(){\n     let row = this.fb.group({});\n     row.addControl('documentType',this.fb.control(null, [ Validators.required]))\n     row.addControl('confirmdocumentType',this.fb.control({value: null, disabled: true}, \n      [ Validators.required , this.form.mustMatch('documentType', row) ]))\n     row.addControl('documentKey',this.fb.control(null, \n        [ Validators.required ]))\n     row.addControl('confirmdocumentKey',this.fb.control({value: null, disabled: true}, \n          [ Validators.required , this.form.mustMatch('documentKey', row) ]))\n     row.addControl('identifierTypeId',this.fb.control(null, [ Validators.required]))\n     row.addControl('documentExpiryDate',this.fb.control(null))\n     row.addControl('file',this.fb.control(null, [ this.form.conditionalValidator(this.global.getConfiguration('is_kyc_upload_required')[0].enabled, \n               Validators.required)]))\n    return row;\n  }\n  \n  fetchDetails(i){\n    let form = this.formArray.controls[i] as FormGroup;\n    let type = form.get('documentType').value;\n    form.get('confirmdocumentType').enable();\n    let key = form.get('documentKey');\n    key.reset();\n    form.get('confirmdocumentKey').reset();\n    switch(type.name){\n\n      case \"Passport\"                     : key.setValidators([  Validators.required, \n                                            Validators.pattern('^[A-Za-z]{1}\\d{7}$')  ])\n                                            break;\n      case \"PAN\"                          : key.setValidators([  Validators.required, \n                                            Validators.pattern('^((([a-zA-Z]{5})\\d{4})[a-zA-Z]{1})$')  ])\n                                            break;\n      case \"Voter Id\"                     : key.setValidators([  Validators.required, \n                                            Validators.pattern('^([a-zA-Z0-9\\\\\\/]{1,'+\n                                            this.global.getConfiguration('voter_id_max_length')[0].value+'})$')  ])\n                                            break;\n      case \"Aadhar\"                       : key.setValidators([  Validators.required, \n                                            this.validateAadhaar()])\n                                            break;              \n      case \"Aadhaar Enrollment Number\"    : key.setValidators([  Validators.required, \n                                            Validators.pattern('^(?!0{28})[\\d]{28}$')])\n                                            form.get('file').clearValidators();\n                                            form.get('file').updateValueAndValidity();\n                                            break;\n      case \"National Population Register\" : key.setValidators([  Validators.required, \n                                            Validators.pattern('^(?!0{20})[\\d]{20}$')])\n                                            break;\n      default                             : key.setValidators([  Validators.required, \n                                            Validators.pattern('^(?!0{5,})[\\w\\\\\\/\\s-]{2,}$'),\n                                            Validators.maxLength(30)])\n                                            break;\n\n    }\n    if(type.isOtherDocsRequired){\n      form.addControl('otherdocumentType',this.fb.control(null, [ Validators.required ]));\n      form.addControl('confirmotherdocumentType',this.fb.control(null, [ Validators.required,\n        this.form.mustMatch('otherdocumentType', form) ]));\n    }else{\n      if(form.get('otherdocumentType')){\n        form.removeControl('otherdocumentType');\n        form.removeControl('confirmotherdocumentType');\n      }\n    }\n    if(type.isValidTillRequired){\n      form.get('documentExpiryDate').enable()\n      form.get('documentExpiryDate').setValidators([ Validators.required ]);\n    }else{\n      form.get('documentExpiryDate').disable()\n      form.get('documentExpiryDate').clearValidators();\n    }\n    let contextTypes = type.context.split(\",\");\n    let idOptions = [];\n    for(let i=0;i{\n      let c = 0;\n      let d=[\n        [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n        [1, 2, 3, 4, 0, 6, 7, 8, 9, 5], \n        [2, 3, 4, 0, 1, 7, 8, 9, 5, 6], \n        [3, 4, 0, 1, 2, 8, 9, 5, 6, 7], \n        [4, 0, 1, 2, 3, 9, 5, 6, 7, 8], \n        [5, 9, 8, 7, 6, 0, 4, 3, 2, 1], \n        [6, 5, 9, 8, 7, 1, 0, 4, 3, 2], \n        [7, 6, 5, 9, 8, 2, 1, 0, 4, 3], \n        [8, 7, 6, 5, 9, 3, 2, 1, 0, 4], \n        [9, 8, 7, 6, 5, 4, 3, 2, 1, 0]\n    ];\n    // permutation table p\n    let p=[\n        [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], \n        [1, 5, 7, 6, 2, 8, 3, 0, 9, 4], \n        [5, 8, 0, 3, 7, 9, 6, 1, 4, 2], \n        [8, 9, 1, 6, 0, 4, 3, 5, 2, 7], \n        [9, 4, 5, 3, 1, 2, 6, 8, 7, 0], \n        [4, 2, 8, 6, 5, 7, 3, 9, 0, 1], \n        [2, 7, 9, 3, 8, 0, 6, 4, 1, 5], \n        [7, 0, 4, 6, 9, 1, 3, 2, 5, 8]\n    ];\n   \n    if(array.value){\n      let invertedArray = this.invArray(array.value);\n        \n        for (let i = 0; i  type.id == value);\n    this.selectedIdentifiers[i] = this.identifiertypesOptions[i][this.selectedIdentifiers[i]].name;\n    if(this.selectedIdentifiers.indexOf(\"Both\") == -1){\n      if(this.selectedIdentifiers.indexOf(\"ProofOfIdentity\") == -1){\n        this.identityErrorMessage = '**Minimum one Proof of Identity is required'\n      }else if(this.selectedIdentifiers.indexOf(\"ProofOfAddress\") == -1 ){\n        this.identityErrorMessage ='**Minimum one Proof of Address is required'\n      }else{\n         this.identityErrorMessage = '';\n      }\n    }else{\n     this.identityErrorMessage = '';\n    }\n  }\n\n  onFileChange(files: any, i){\n    this.formArray.controls[i].patchValue({file: files[0]});\n  }\n\n  addDocument(){\n    this.formArray.push(this.initDocument());\n  }\n\n  deleteDocument(i){\n    if(this.formArray.controls.length > 1)\n    this.formArray.removeAt(i);\n  }\n\n}\n\n    \n\n    \n        \n    \n    {{identityErrorMessage}}\n    \n        \n            \n                Document Type*\n                Sub Document Type*\n                Unique ID*\n                Identifier Type*\n                Valid Till*\n                Identifier File*\n                Actions\n            \n        \n        \n            \n                \n                    \n                        Select Document Type\n                        {{type.name}}\n                    \n                    \n                        Required Field\n                    \n                    \n                    \n                        Confirm Document Type\n                        {{type.name}}\n                    \n                    \n                        Required Field\n                    \n                    Document types must match\n                    \n                \n                \n                    \n                        \n                            Select Other Document Type\n                            {{type.name}}\n                        \n                        \n                            Required Field\n                        \n                    \n                        \n                            Confirm Other Document Type\n                            {{type.name}}\n                        \n                        \n                            Required Field\n                        \n                        Document types must match\n                        \n                    \n                 \n                \n                    \n                    \n                        Required Field\n                    \n                    \n                        Invalid {{formArray.controls[i].get('documentType').value.name}} Number\n                    \n                    \n                    \n                    \n                        Required Field\n                    \n                    Unique IDs must match\n                    \n                \n                \n                    \n                        Select Identifier Type\n                        {{type.label}}\n                    \n                    \n                        Required Field\n                    \n                 \n                \n                    \n                        \n                          \n                        \n                            Required Field\n                        \n                    \n                \n                \n                    \n                    \n                    Required Field\n                     \n                \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./document-upload.component.css\n                \n                .table {\n    margin-bottom: 0.5rem !important;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{identityErrorMessage}}                                        Document Type*                Sub Document Type*                Unique ID*                Identifier Type*                Valid Till*                Identifier File*                Actions                                                                                                    Select Document Type                        {{type.name}}                                                                Required Field                                                                                    Confirm Document Type                        {{type.name}}                                                                Required Field                                        Document types must match                                                                                                                            Select Other Document Type                            {{type.name}}                                                                            Required Field                                                                                                Confirm Other Document Type                            {{type.name}}                                                                            Required Field                                                Document types must match                                                                                                                                             Required Field                                                                Invalid {{formArray.controls[i].get(\\'documentType\\').value.name}} Number                                                                                                        Required Field                                        Unique IDs must match                                                                                                Select Identifier Type                        {{type.label}}                                                                Required Field                                                                                                                                                                               Required Field                                                                                                                                        Required Field                                                                                                                                                                                                                             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateClientComponent', 'selector': 'app-create-client'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentUploadComponent', 'selector': 'app-document-upload'},{'name': 'DropdownComponent', 'selector': 'app-dropdown'},{'name': 'DualEntryComponent', 'selector': 'dual-entry'}];\n    var DIRECTIVES = [{'name': 'TooltipDirective', 'selector': '[tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'DocumentUploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropdownComponent.html":{"url":"components/DropdownComponent.html","title":"component - DropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dropdown/dropdown.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dropdown\n            \n\n            \n                styleUrls\n                ./dropdown.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayfield\n                            \n                            \n                                elementClass\n                            \n                            \n                                emitEvent\n                            \n                            \n                                labelname\n                            \n                            \n                                name\n                            \n                            \n                                options\n                            \n                            \n                                optionvalue\n                            \n                            \n                                parentform\n                            \n                            \n                                required\n                            \n                            \n                                showfield\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valuechange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, form: FormService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dropdown/dropdown.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        form\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayfield\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dropdown/dropdown.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        elementClass\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dropdown/dropdown.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        emitEvent\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dropdown/dropdown.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelname\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dropdown/dropdown.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dropdown/dropdown.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dropdown/dropdown.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        optionvalue\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dropdown/dropdown.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentform\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dropdown/dropdown.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dropdown/dropdown.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showfield\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dropdown/dropdown.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submitted\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dropdown/dropdown.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valuechange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dropdown/dropdown.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dropdown/dropdown.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { FormService } from 'src/app/services/form/form.service';\n\n@Component({\n  selector: 'app-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.css']\n})\nexport class DropdownComponent implements OnInit {\n\n  @Input() parentform : FormGroup;\n  @Input() name: string;\n  @Input() labelname: string;\n  @Input() required : boolean;\n  @Input() submitted: boolean;\n  @Input() options : any;\n  @Input() optionvalue : any;\n  @Input() showfield : any;\n  @Input() displayfield : any;\n  @Input() elementClass :any;\n  @Output() valuechange = new EventEmitter();\n  @Input() emitEvent : boolean;\n\n  constructor(private fb: FormBuilder, private form : FormService) { }\n\n  ngOnInit(): void {\n    this.displayfield = this.displayfield ? this.displayfield : 'name';\n    this.showfield = this.showfield !== undefined  ? this.showfield : true;\n    this.elementClass = this.elementClass ? parseInt(this.elementClass) : 4;\n\n    this.parentform.addControl(this.name ,this.fb.control(null, [ \n      this.form.conditionalValidator(this.required, Validators.required)]));\n\n    if(this.emitEvent){\n      this.parentform.controls[this.name].valueChanges.subscribe(() => { \n        this.valuechange.emit(this.parentform.controls[this.name].value);\n      })\n    }\n  }\n\n}\n\n    \n\n    \n        \n  {{labelname}}\n    *\n  \n  \n    \n      Select {{labelname}}\n      {{option[displayfield]}}\n    \n    \n        Required Field\n    \n  \n\n\n    \n\n    \n                \n                    ./dropdown.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{labelname}}    *              Select {{labelname}}      {{option[displayfield]}}                Required Field      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateClientComponent', 'selector': 'app-create-client'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentUploadComponent', 'selector': 'app-document-upload'},{'name': 'DropdownComponent', 'selector': 'app-dropdown'},{'name': 'DualEntryComponent', 'selector': 'dual-entry'}];\n    var DIRECTIVES = [{'name': 'TooltipDirective', 'selector': '[tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'DropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DualEntryComponent.html":{"url":"components/DualEntryComponent.html","title":"component - DualEntryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DualEntryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dual-entry/dual-entry.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                dual-entry\n            \n\n            \n                styleUrls\n                ./dual-entry.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dual-entry.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dualname\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ageLimit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                validatePhoneNumber\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                elementclass\n                            \n                            \n                                emitEvent\n                            \n                            \n                                labelname\n                            \n                            \n                                maxinput\n                            \n                            \n                                maxlength\n                            \n                            \n                                mininput\n                            \n                            \n                                name\n                            \n                            \n                                options\n                            \n                            \n                                optionvalue\n                            \n                            \n                                parentform\n                            \n                            \n                                pattern\n                            \n                            \n                                patternerror\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                submitted\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valuechange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, form: FormService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dual-entry/dual-entry.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        form\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        elementclass\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dual-entry/dual-entry.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        emitEvent\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dual-entry/dual-entry.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelname\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dual-entry/dual-entry.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxinput\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dual-entry/dual-entry.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dual-entry/dual-entry.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mininput\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dual-entry/dual-entry.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dual-entry/dual-entry.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dual-entry/dual-entry.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        optionvalue\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dual-entry/dual-entry.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentform\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dual-entry/dual-entry.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pattern\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dual-entry/dual-entry.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        patternerror\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dual-entry/dual-entry.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dual-entry/dual-entry.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dual-entry/dual-entry.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submitted\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dual-entry/dual-entry.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dual-entry/dual-entry.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valuechange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dual-entry/dual-entry.component.ts:29\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ageLimit\n                        \n                        \n                    \n                \n            \n            \n                \nageLimit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dual-entry/dual-entry.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ValidatorFn\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dual-entry/dual-entry.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validatePhoneNumber\n                        \n                        \n                    \n                \n            \n            \n                \nvalidatePhoneNumber()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dual-entry/dual-entry.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ValidatorFn\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dualname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/dual-entry/dual-entry.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormBuilder , Validators, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { FormService } from 'src/app/services/form/form.service';\n\n@Component({\n  selector: 'dual-entry',\n  templateUrl: './dual-entry.component.html',\n  styleUrls: ['./dual-entry.component.css'],\n  providers: [\n\n]\n})\nexport class DualEntryComponent implements OnInit{\n  @Input() parentform : FormGroup;\n  @Input() elementclass: any;\n  @Input() type: string;\n  @Input() name: string;\n  @Input() labelname: string;\n  @Input() placeholder : string;\n  @Input() required : boolean;\n  @Input() maxlength: number;\n  @Input() pattern: string;\n  @Input() patternerror : string;\n  @Input() submitted: boolean;\n  @Input() mininput : number;\n  @Input() maxinput : number;\n  @Input() options : any;\n  @Input() optionvalue : string;\n  @Output() valuechange = new EventEmitter();\n  @Input() emitEvent : boolean;\n\n  dualname : string;\n\n\n  constructor(private fb: FormBuilder, private form : FormService) {}\n\n  ngOnInit(): void {\n    this.elementclass = parseInt(this.elementclass);\n    this.dualname = 'confirm' + this.name;\n    this.parentform.addControl(this.name ,this.fb.control(null, [ \n      this.form.conditionalValidator(this.required, Validators.required), \n      this.form.conditionalValidator(this.maxlength, Validators.maxLength(this.maxlength)),\n      this.form.conditionalValidator(this.pattern, Validators.pattern(this.pattern)), \n      this.form.conditionalValidator((this.mininput || this.maxinput) && this.labelname == 'Date of Birth', this.ageLimit()),\n      this.form.conditionalValidator(this.labelname == 'Mobile Number', this.validatePhoneNumber())]));\n\n    this.parentform.addControl(this.dualname ,this.fb.control(null, [ \n      this.form.conditionalValidator(this.required, Validators.required),\n      this.form.mustMatch(this.name, this.parentform)]));\n    this.parentform.controls[this.dualname].disable();\n\n    this.parentform.controls[this.name].valueChanges.subscribe(() => {\n      if(this.parentform.controls[this.name].value){\n        this.parentform.controls[this.dualname].enable();\n        if(this.emitEvent)\n          this.valuechange.emit(this.parentform.controls[this.name].value);\n      }else{\n        this.parentform.controls[this.dualname].disable();\n      }\n    })\n  }\n\n  ageLimit(): ValidatorFn{\n    return (matchingControl: AbstractControl): { [key: string]: any } | null  =>{\n\n      if(matchingControl.value){\n        let dsplit = matchingControl.value.split(\"/\");\n        function padToTwo(number) {\n          if (number12 || parseInt(dsplit[1])= minDate)) {\n            return null;\n        } else {\n            return { ageLimit : true };\n        }\n      }else{\n        return null;\n      }\n    }\n  }\n\n  validatePhoneNumber(): ValidatorFn{\n    return (matchingControl: AbstractControl): { [key: string]: any } | null  =>{\n\n      if( (matchingControl.value && matchingControl.value.length  -1){\n            return null;\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n    {{labelname}}\n        *\n    \n    \n        \n\n        \n            {{placeholder}}\n            {{option.name}}\n        \n\n        \n            Required Field\n        \n        \n            The minimum length for this field is {{parentform.get(name).errors.minlength.requiredLength}} characters\n        \n        \n            The maximum length for this field is {{parentform.get(name).errors.maxlength.requiredLength}} characters\n        \n        \n            {{patternerror}}\n        \n        \n           Invalid Date Format\n        \n        \n           Age should be between {{mininput}} and {{maxinput}}\n        \n        \n           Invalid Mobile Number\n        \n    \n    Re-enter {{labelname}}\n        *\n    \n    \n        \n        \n            {{placeholder}}\n            {{option.name}}\n        \n        \n            Required Field\n        \n        {{labelname}}s must match\n        \n     \n \n    \n\n    \n                \n                    ./dual-entry.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{labelname}}        *                                    {{placeholder}}            {{option.name}}                            Required Field                            The minimum length for this field is {{parentform.get(name).errors.minlength.requiredLength}} characters                            The maximum length for this field is {{parentform.get(name).errors.maxlength.requiredLength}} characters                            {{patternerror}}                           Invalid Date Format                           Age should be between {{mininput}} and {{maxinput}}                           Invalid Mobile Number                Re-enter {{labelname}}        *                                    {{placeholder}}            {{option.name}}                            Required Field                {{labelname}}s must match              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateClientComponent', 'selector': 'app-create-client'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentUploadComponent', 'selector': 'app-document-upload'},{'name': 'DropdownComponent', 'selector': 'app-dropdown'},{'name': 'DualEntryComponent', 'selector': 'dual-entry'}];\n    var DIRECTIVES = [{'name': 'TooltipDirective', 'selector': '[tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'DualEntryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/error.interceptors/error.interceptors.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/helpers/error.interceptors/error.interceptors.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/helpers/error.interceptors/error.interceptors.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { AuthService } from 'src/app/services/auth/auth.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private auth : AuthService, private toastr: ToastrService) { }\n\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.auth.logout();\n            }\n            this.toastr.error( err.error.errors[0].developerMessage , 'Error',{ \n              // positionClass: 'toast-top-center',\n              timeOut: 0,\n              extendedTimeOut: 0\n            })\n            return throwError(err);\n        }))\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormService.html":{"url":"injectables/FormService.html","title":"injectable - FormService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/form/form.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                conditionalValidator\n                            \n                            \n                                mustMatch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/form/form.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            conditionalValidator\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    conditionalValidator(predicate, validator)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/form/form.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    validator\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (formControl: any) => any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mustMatch\n                        \n                        \n                    \n                \n            \n            \n                \nmustMatch(controlName: string, parentform: FormGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/form/form.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentform\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ValidatorFn, AbstractControl, FormGroup } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormService {\n\n  constructor() { }\n\n  public conditionalValidator(predicate, validator) {\n    return (formControl => {\n\n      if (predicate) {\n        return validator(formControl); \n      }\n      return null;\n    })\n  }\n\n  mustMatch( controlName: string, parentform : FormGroup ): ValidatorFn {\n    return (matchingControl: AbstractControl): { [key: string]: any } | null  =>{\n        const control = parentform.controls[controlName];\n\n        if (control.value !== matchingControl.value && control.value && matchingControl.value) {\n          return { mustMatch : true };\n        } else {\n          return null;\n        }\n    }\n  }\n\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService.html":{"url":"injectables/HttpService.html","title":"injectable - HttpService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/http/http.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authentication\n                            \n                            \n                                    Public\n                                clientTemplateResource\n                            \n                            \n                                    Public\n                                codeValuesResource\n                            \n                            \n                                    Public\n                                configurationResource\n                            \n                            \n                                    Public\n                                cryptoResource\n                            \n                            \n                                    Public\n                                employeeResource\n                            \n                            \n                                    Public\n                                getcountryDetailResource\n                            \n                            \n                                    Public\n                                getdistrictDetailResource\n                            \n                            \n                                    Public\n                                getSalutationMatrix\n                            \n                            \n                                    Public\n                                getstateDetailResource\n                            \n                            \n                                    Public\n                                getTaskResource\n                            \n                            \n                                    Public\n                                getvillageTownCityDetailResource\n                            \n                            \n                                    Public\n                                logoutResource\n                            \n                            \n                                    Public\n                                officeResource\n                            \n                            \n                                    Public\n                                postTaskResource\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/http/http.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            authentication\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    authentication(loginCredentials: LoginCredentials)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http/http.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginCredentials\n                                    \n                                                LoginCredentials\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clientTemplateResource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clientTemplateResource()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http/http.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            codeValuesResource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    codeValuesResource(codeName?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http/http.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    codeName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configurationResource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configurationResource(id?: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http/http.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cryptoResource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cryptoResource(task: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http/http.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            employeeResource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    employeeResource(staffId?)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http/http.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    staffId\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getcountryDetailResource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getcountryDetailResource()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http/http.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getdistrictDetailResource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getdistrictDetailResource(stateId, countryId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http/http.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stateId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    countryId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSalutationMatrix\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSalutationMatrix()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http/http.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getstateDetailResource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getstateDetailResource(countryId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http/http.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    countryId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTaskResource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTaskResource(type?: any, name?: any, taskId?: number, status?: any, isSubsidiary?: boolean, officeId?: number, userId?: number, verticalId?: number, limit?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http/http.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    isSubsidiary\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    officeId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    verticalId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getvillageTownCityDetailResource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getvillageTownCityDetailResource(districtId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http/http.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    districtId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logoutResource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logoutResource()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http/http.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            officeResource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    officeResource(officeId?: Number, associations?)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http/http.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    officeId\n                                    \n                                                Number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    associations\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            postTaskResource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    postTaskResource(type?: any, name?: any, taskId?: number, command?: string, data?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/http/http.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    command\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.endpoint + '/novobank-core/api/v1'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/http/http.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient,HttpParams } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport { LoginCredentials } from 'src/app/models/LoginCredentials';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  public baseUrl = environment.endpoint + '/novobank-core/api/v1';\n\n  constructor( private _http : HttpClient ) { }\n\n  public cryptoResource(task : string):any {\n    let response = this._http.get( `${this.baseUrl}/crypt/${task}`);\n    return response;\n  }\n\n  public authentication(loginCredentials : LoginCredentials):any {\n    let response = this._http.post( `${this.baseUrl}/authentication`, loginCredentials);\n    return response;\n  }\n\n  public officeResource(officeId?: Number,associations?):any {\n    let params = new HttpParams();\n    params = associations ? params.append('associations',associations) : params;\n    let response = this._http.get( `${this.baseUrl}/offices/${officeId}`, { params: params });\n    return response;\n  }\n\n  public configurationResource(id?: String):any {\n    let response = this._http.get( `${this.baseUrl}/configurations/${id ? id : ''}`);\n    return response;\n  }\n\n  public logoutResource():any{\n    let response = this._http.post( `${this.baseUrl}/authentication/logout`, '');\n    return response;\n  }\n\n  public getTaskResource(type?: any ,name? :any ,taskId?: number, status?: any,\n                        isSubsidiary?: boolean,officeId?: number,userId?:number,\n                        verticalId?:number, limit?:number):any{\n    let params = new HttpParams();\n    params = status[0] ? params.append('status', status[0] ) : params;\n    params = status[1] ? params.append('status', status[1] ) : params;\n    params = isSubsidiary != null ? params.append('isSubsidiary', isSubsidiary.toString() ) : params;\n    params = officeId ? params.append('officeId', officeId.toString() ) : params;\n    params = userId ? params.append('userId', userId.toString() ) : params;\n    params = verticalId != null ? params.append('verticalId', verticalId.toString()) : params;\n    params = limit != null ? params.append('limit', limit.toString()) : params;\n    \n    let response = this._http.get( `${this.baseUrl}/tasks${type ? `/${type}` : ''}` +\n                                   `${name ? `/${name}` : ''}${taskId ? `/${taskId}` : ''}`,\n                                   { params: params });\n    return response;\n  }\n\n  public postTaskResource(type?: any ,name? :any ,taskId?: number,command?: string,\n                         data?:any):any{\n    let params = new HttpParams();\n    params = command ? params.append('command', command ) : params;\n\n    let response = this._http.post( `${this.baseUrl}/tasks${type ? `/${type}` : ''}${name ? `/${name}` : ''}${taskId ? `/${taskId}` : ''}`, \n                                  data, { params: params });\n    return response;\n  }\n\n  public codeValuesResource(codeName ?: string,context ?:string):any {\n    let params = new HttpParams();\n    params = context ? params.append('context', context ) : params;\n\n    let response = this._http.get( `${this.baseUrl}/codes/codevalues/${codeName ? codeName : ''}`, { params: params });\n    return response;\n  }\n\n  public clientTemplateResource():any {\n    let params = new HttpParams();\n    params = params.append('staffInSelectedOfficeOnly', 'true' );\n    params = params.append('loanOfficersOnly', 'true');\n    params = params.append('roleName','Loan Officer');\n    let response = this._http.get( `${this.baseUrl}/clients/template`,{ params: params });\n    return response;\n  }\n\n  public getSalutationMatrix():any {\n    let response = this._http.get( `${this.baseUrl}/salutationmatrix`);\n    return response;\n  }\n\n  public getcountryDetailResource():any {\n    let params = new HttpParams();\n    params = params.append('limit', '-1' );\n    let response = this._http.get( `${this.baseUrl}/countrydetail`,{ params: params });\n    return response;\n  }\n\n  public getstateDetailResource(countryId):any {\n    let params = new HttpParams();\n    params = params.append('countryId', countryId );\n    params = params.append('limit', '-1' );\n    let response = this._http.get( `${this.baseUrl}/statedetail`,{ params: params });\n    return response;\n  }\n\n  public getdistrictDetailResource(stateId, countryId):any {\n    let params = new HttpParams();\n    params = params.append('countryId', countryId );\n    params = params.append('stateId', stateId );\n    params = params.append('limit', '-1' );\n    let response = this._http.get( `${this.baseUrl}/districtdetail`,{ params: params });\n    return response;\n  }\n\n  public getvillageTownCityDetailResource(districtId):any {\n    let params = new HttpParams();\n    params = params.append('districtId', districtId );\n    params = params.append('limit', '-1' );\n    let response = this._http.get( `${this.baseUrl}/villagetowncitydetail`,{ params: params });\n    return response;\n  }\n\n  public employeeResource(staffId?):any {\n    let response = this._http.get( `${this.baseUrl}/staff${staffId ? `/${staffId}` : ''}`);\n    return response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/JwtInterceptor.html":{"url":"interceptors/JwtInterceptor.html","title":"interceptor - JwtInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  JwtInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/jwt.interceptors/jwt.interceptors.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dec2hex\n                            \n                            \n                                getOtp\n                            \n                            \n                                hex2dec\n                            \n                            \n                                intercept\n                            \n                            \n                                leftpad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, loader: LoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/helpers/jwt.interceptors/jwt.interceptors.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dec2hex\n                        \n                        \n                    \n                \n            \n            \n                \ndec2hex(s)\n                \n            \n\n\n            \n                \n                    Defined in src/app/helpers/jwt.interceptors/jwt.interceptors.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOtp\n                        \n                        \n                    \n                \n            \n            \n                \ngetOtp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/helpers/jwt.interceptors/jwt.interceptors.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hex2dec\n                        \n                        \n                    \n                \n            \n            \n                \nhex2dec(s)\n                \n            \n\n\n            \n                \n                    Defined in src/app/helpers/jwt.interceptors/jwt.interceptors.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/helpers/jwt.interceptors/jwt.interceptors.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            leftpad\n                        \n                        \n                    \n                \n            \n            \n                \nleftpad(str, len, pad)\n                \n            \n\n\n            \n                \n                    Defined in src/app/helpers/jwt.interceptors/jwt.interceptors.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    len\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pad\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, pipe } from 'rxjs';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpParams, HttpResponse  } from '@angular/common/http';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { LoaderService } from 'src/app/services/loader/loader.service';\nimport { tap } from 'rxjs/operators';\n\ndeclare var jsSHA: any; \n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtInterceptor implements HttpInterceptor{\n\n  constructor( private auth: AuthService, private loader : LoaderService ) { }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    setTimeout(() => {this.loader.show();}, 0)\n    if ( this.auth.userData && this.auth.userData.sessionKey) { \n        return next.handle(req.clone({\n            setHeaders: {\n                'Novobank-TenantId' : 'default',\n                'Authorization': \"Custom \" + this.auth.userData.sessionKey,\n                'OTP' : this.getOtp(),\n                'Originator' : this.auth.userData.userId.toString()\n            },\n            // params: (req.method == 'GET' ? req.params.set('isCompressionRequired', 'true' ) : req.params)\n        })).pipe(tap((event: HttpEvent) => { \n          if (event instanceof HttpResponse) {\n            setTimeout(() => {this.loader.hide();}, 0)\n          }\n        },(err: any) => {\n          setTimeout(() => {this.loader.hide();}, 0)\n      }));\n    }else{\n      return next.handle(req.clone({\n        setHeaders: {\n            'Content-Type': 'application/json; charset=utf-8',\n            'Novobank-TenantId' : 'default'\n        },\n        // params: (req.params ? req.params : new HttpParams()).set('isCompressionRequired', 'true' )\n        })).pipe(tap((event: HttpEvent) => { \n          if (event instanceof HttpResponse) {\n            setTimeout(() => {this.loader.hide();}, 0)\n          }\n        },(err: any) => {\n          setTimeout(() => {this.loader.hide();}, 0)\n      }));\n    }\n  }\n\n  leftpad(str, len, pad) {\n    if (len + 1 >= str.length) {\n        str = Array(len + 1 - str.length).join(pad) + str;\n    }\n    return str;\n  }\n\n  dec2hex(s) { \n    return (s \n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loader/loader.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loaderState\n                            \n                            \n                                    Private\n                                loaderSubject\n                            \n                            \n                                scrollbarState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addScrollbarState\n                            \n                            \n                                hide\n                            \n                            \n                                scrollToTop\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/loader/loader.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addScrollbarState\n                        \n                        \n                    \n                \n            \n            \n                \naddScrollbarState(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loader/loader.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loader/loader.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scrollToTop\n                        \n                        \n                    \n                \n            \n            \n                \nscrollToTop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loader/loader.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loader/loader.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaderState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.loaderSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loader/loader.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loaderSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loader/loader.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scrollbarState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loader/loader.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { LoaderState } from '../../models/Loader';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  private loaderSubject = new Subject();\n  loaderState = this.loaderSubject.asObservable();\n  scrollbarState: any;\n\n  constructor() { }\n  \n  show() {\n    this.loaderSubject.next({ show: true });\n  }\n  hide() {\n    this.loaderSubject.next({ show: false });\n  }\n\n  addScrollbarState(data) {\n    this.scrollbarState =  data;\n  }\n\n  scrollToTop() {\n    this.scrollbarState.directiveRef.scrollTo(0,0);;\n  }\n \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoaderState.html":{"url":"interfaces/LoaderState.html","title":"interface - LoaderState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoaderState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Loader.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        show\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        show\n                                    \n                                \n                                \n                                    \n                                        show:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoaderState {\n    show: boolean;\n  }\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginCredentials.html":{"url":"classes/LoginCredentials.html","title":"class - LoginCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/LoginCredentials.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/LoginCredentials.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/LoginCredentials.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/LoginCredentials.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginCredentials{\n    public username: string;\n    public password: string;\n\n    constructor(username: string, password: string){\n        this.username = username;\n        this.password = password;\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SearchPipe.html":{"url":"pipes/SearchPipe.html","title":"pipe - SearchPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SearchPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/search/search.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        search\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, args?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/search/search.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n\n    if(!value)return null;\n    if(!args)return value;\n\n    args = args.toLowerCase();\n\n    return value.filter(function(item){\n        return JSON.stringify(item).toLowerCase().includes(args);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TooltipDirective.html":{"url":"directives/TooltipDirective.html","title":"directive - TooltipDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  TooltipDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/tootip.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [tooltip]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                offset\n                            \n                            \n                                tooltip\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                hide\n                            \n                            \n                                setPosition\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                delay\n                            \n                            \n                                placement\n                            \n                            \n                                tooltip\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                mouseenter\n                            \n                            \n                                mouseleave\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/tootip.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        delay\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/tootip.directive.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placement\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/tootip.directive.ts:8\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/tootip.directive.ts:7\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            mouseenter\n                        \n                        \n                    \n                \n            \n            \n                \nmouseenter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/tootip.directive.ts:15\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseleave\n                        \n                        \n                    \n                \n            \n            \n                \nmouseleave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/tootip.directive.ts:19\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/tootip.directive.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/tootip.directive.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPosition\n                        \n                        \n                    \n                \n            \n            \n                \nsetPosition()\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/tootip.directive.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/tootip.directive.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            offset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in src/app/directives/tootip.directive.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tooltip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/directives/tootip.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input, ElementRef, HostListener, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[tooltip]'\n})\nexport class TooltipDirective {\n  @Input('tooltip') tooltipTitle: string;\n  @Input() placement: string;\n  @Input() delay: number;\n  tooltip: HTMLElement;\n  offset = 10;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) { }\n\n  @HostListener('mouseenter') onMouseEnter() {\n    if (!this.tooltip) { this.show(); }\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    if (this.tooltip) { this.hide(); }\n  }\n\n  show() {\n    this.create();\n    this.setPosition();\n    this.renderer.addClass(this.tooltip, 'ng-tooltip-show');\n  }\n\n  hide() {\n    this.renderer.removeClass(this.tooltip, 'ng-tooltip-show');\n    window.setTimeout(() => {\n      this.renderer.removeChild(document.body, this.tooltip);\n      this.tooltip = null;\n    }, this.delay);\n  }\n\n  create() {\n    this.tooltip = this.renderer.createElement('span');\n\n    this.renderer.appendChild(\n      this.tooltip,\n      this.renderer.createText(this.tooltipTitle) // textNode\n    );\n\n    this.renderer.appendChild(document.body, this.tooltip);\n    // this.renderer.appendChild(this.el.nativeElement, this.tooltip);\n\n    this.renderer.addClass(this.tooltip, 'ng-tooltip');\n    this.renderer.addClass(this.tooltip, `ng-tooltip-${this.placement}`);\n\n    // delay\n    this.renderer.setStyle(this.tooltip, '-webkit-transition', `opacity ${this.delay}ms`);\n    this.renderer.setStyle(this.tooltip, '-moz-transition', `opacity ${this.delay}ms`);\n    this.renderer.setStyle(this.tooltip, '-o-transition', `opacity ${this.delay}ms`);\n    this.renderer.setStyle(this.tooltip, 'transition', `opacity ${this.delay}ms`);\n  }\n\n  setPosition() {\n   \n    const hostPos = this.el.nativeElement.getBoundingClientRect();\n\n    \n    const tooltipPos = this.tooltip.getBoundingClientRect();\n    const scrollPos = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\n\n    let top, left;\n\n    if (this.placement === 'top') {\n      top = hostPos.top - tooltipPos.height - this.offset;\n      left = hostPos.left + (hostPos.width - tooltipPos.width) / 2;\n    }\n\n    if (this.placement === 'bottom') {\n      top = hostPos.bottom + this.offset;\n      left = hostPos.left + (hostPos.width - tooltipPos.width) / 2;\n    }\n\n    if (this.placement === 'left') {\n      top = hostPos.top + (hostPos.height - tooltipPos.height) / 2;\n      left = hostPos.left - tooltipPos.width - this.offset;\n    }\n\n    if (this.placement === 'right') {\n      top = hostPos.top + (hostPos.height - tooltipPos.height) / 2;\n      left = hostPos.right + this.offset;\n    }\n\n    \n    this.renderer.setStyle(this.tooltip, 'top', `${top + scrollPos}px`);\n    this.renderer.setStyle(this.tooltip, 'left', `${left}px`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            ngWizardConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/create-client/create-client.component.ts\n            \n            component\n            CreateClientComponent\n            \n                0 %\n                (0/35)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/components/document-upload/document-upload.component.ts\n            \n            component\n            DocumentUploadComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/components/document-upload/document-upload.component.ts\n            \n            variable\n            $\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/dropdown/dropdown.component.ts\n            \n            component\n            DropdownComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/dual-entry/dual-entry.component.ts\n            \n            component\n            DualEntryComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/directives/tootip.directive.ts\n            \n            directive\n            TooltipDirective\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/helpers/error.interceptors/error.interceptors.service.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/helpers/jwt.interceptors/jwt.interceptors.service.ts\n            \n            interceptor\n            JwtInterceptor\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/helpers/jwt.interceptors/jwt.interceptors.service.ts\n            \n            variable\n            jsSHA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/Constants.ts\n            \n            class\n            Constants\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/Loader.ts\n            \n            interface\n            LoaderState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/models/LoginCredentials.ts\n            \n            class\n            LoginCredentials\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pipes/search/search.pipe.ts\n            \n            pipe\n            SearchPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/data/data.service.ts\n            \n            injectable\n            DataService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/form/form.service.ts\n            \n            injectable\n            FormService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/http/http.service.ts\n            \n            injectable\n            HttpService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/services/loader/loader.service.ts\n            \n            injectable\n            LoaderService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.9\n        \n            @angular/common : ~11.0.9\n        \n            @angular/compiler : ~11.0.9\n        \n            @angular/core : ~11.0.9\n        \n            @angular/forms : ~11.0.9\n        \n            @angular/platform-browser : ~11.0.9\n        \n            @angular/platform-browser-dynamic : ~11.0.9\n        \n            @angular/router : ~11.0.9\n        \n            @fortawesome/fontawesome-free : ^5.15.2\n        \n            angular-sha : ^0.3.3\n        \n            angular-user-idle : ^2.2.4\n        \n            bootstrap : ^4.6.0\n        \n            jquery : ^3.5.1\n        \n            jsencrypt : ^3.0.0-rc.1\n        \n            moment : ^2.29.1\n        \n            ng-wizard : ^1.3.0\n        \n            ng2-date-picker : ^11.0.0\n        \n            ngx-order-pipe : ^2.1.1\n        \n            ngx-pagination : ^5.0.0\n        \n            ngx-perfect-scrollbar : ^10.1.0\n        \n            ngx-toastr : ^13.2.0\n        \n            ngx-webstorage : ^7.0.1\n        \n            popper.js : ^1.16.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNovoloanWebGui\nThis project was generated with Angular CLI version 11.0.7.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCreateClientComponent\n\nCreateClientComponent\n\nAppModule -->\n\nCreateClientComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nDocumentUploadComponent\n\nDocumentUploadComponent\n\nAppModule -->\n\nDocumentUploadComponent->AppModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nAppModule -->\n\nDropdownComponent->AppModule\n\n\n\n\n\nDualEntryComponent\n\nDualEntryComponent\n\nAppModule -->\n\nDualEntryComponent->AppModule\n\n\n\n\n\nSearchPipe\n\nSearchPipe\n\nAppModule -->\n\nSearchPipe->AppModule\n\n\n\n\n\nTooltipDirective\n\nTooltipDirective\n\nAppModule -->\n\nTooltipDirective->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        2 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            $   (src/.../document-upload.component.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            jsSHA   (src/.../jwt.interceptors.service.ts)\n                        \n                        \n                            ngWizardConfig   (src/.../app.module.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/components/document-upload/document-upload.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  endpoint: 'https://localhost:8443'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/helpers/jwt.interceptors/jwt.interceptors.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jsSHA\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ngWizardConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgWizardConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  theme: THEME.arrows\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
